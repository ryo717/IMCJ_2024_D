{
  "clusters": [
    {
      "cluster": "\"Tokyo Gas's Business Strategies and Market Position\"",
      "cluster_id": "1",
      "takeaways": "Tokyo Gas and Tokyu Power are key players in the competitive capital region of Japan. Tokyo Gas is actively pursuing sustainability and renewable energy initiatives, including a demand response service, a partnership with Koganei City for a 'Zero Carbon City' declaration, and a demonstration project in Yokohama City to produce e-methane from sewage resources. The company is also venturing into the floating offshore wind power generation business. Despite these efforts, Osaka Gas has recently surpassed Tokyo Gas in market capitalization. Tokyo Gas is also a significant customer of Whelen and is recognized for its high-dividend stocks.",
      "arguments": [
        {
          "arg_id": "A1_0",
          "argument": "Tokyu Power and Tokyo Gas are the two major players in the highly competitive capital region, according to an article on the Denki Shimbun website dated September 2, 2024. #clip_energy",
          "comment_id": "1",
          "x": 21.465265,
          "y": 3.2751462,
          "p": 1.0
        },
        {
          "arg_id": "A8_0",
          "argument": "Although Tokyo Gas has long been the leader in the urban gas industry, Osaka Gas has surpassed Tokyo Gas in market capitalization since around March this year. As of August 30, Tokyo Gas is valued at 1.4592 trillion yen, while Osaka Gas is valued at 1.4732 trillion yen, making Osaka Gas more valuable as a company.",
          "comment_id": "8",
          "x": 21.163572,
          "y": 3.0032923,
          "p": 0.7079160328375926
        },
        {
          "arg_id": "A11_0",
          "argument": "Discussing Tokyo Gas's demand response service, which supports the future. Topics include energy storage, renewable energy, sustainability, energy efficiency, power supply, smart homes, and eco-life. #TokyoGas #DemandResponse #EnergyStorage #RenewableEnergy #Sustainability #Igniture #EnergyEfficiency #PowerSupply #SmartHome #EcoLife. @solarpower2035",
          "comment_id": "11",
          "x": 20.38976,
          "y": 2.942004,
          "p": 0.0
        },
        {
          "arg_id": "A15_0",
          "argument": "Tokyo Gas is performing strongly, on par with Obic.",
          "comment_id": "15",
          "x": 21.220646,
          "y": 3.2785013,
          "p": 0.8682063361526836
        },
        {
          "arg_id": "A20_0",
          "argument": "Tokyu Power and Tokyo Gas are the two major players in the highly competitive capital region of Japan.",
          "comment_id": "20",
          "x": 21.027714,
          "y": 3.518235,
          "p": 0.6902254921207495
        },
        {
          "arg_id": "A36_0",
          "argument": "Tokyo Gas seems to be a major customer of Whelen, as they are predominantly adopting Whelen's compact Siren model.",
          "comment_id": "36",
          "x": 20.965174,
          "y": 3.2283688,
          "p": 0.7162704240092698
        },
        {
          "arg_id": "A38_0",
          "argument": "The author has rewritten a blog post introducing two high-dividend stocks in the electricity and gas industry: Denko Kaihatsu (9513) and Tokyo Gas (9531). They have added images where needed and clarified confusing text. They suggest using this as a reference for investment.",
          "comment_id": "38",
          "x": 21.554039,
          "y": 3.385548,
          "p": 0.9140061334581352
        },
        {
          "arg_id": "A47_0",
          "argument": "What is Tokyo Gas's demand response service that supports the future? Topics include: demand response, storage batteries, renewable energy, sustainability, Igniture, energy efficiency, power supply, smart homes, and eco-life.",
          "comment_id": "47",
          "x": 20.426191,
          "y": 2.9844854,
          "p": 0.0
        },
        {
          "arg_id": "A48_0",
          "argument": "Tokyo Gas is conducting a demonstration project in Yokohama City, utilizing reclaimed water and digested gas from sewage facilities to produce e-methane.",
          "comment_id": "48",
          "x": 19.864954,
          "y": 2.4713967,
          "p": 1.0
        },
        {
          "arg_id": "A58_0",
          "argument": "The 4th term of the 'side project', where 20% of working hours are dedicated to participating in ventures, has begun. 36 personnel from 8 major companies including IHI, Asahi Kasei, KDDI, SOMPO Holdings, TOKYOGAS, NGK Insulators, Japan Post, and Hankyu Hanshin Real Estate have started projects at 27 startups.",
          "comment_id": "58",
          "x": 20.974525,
          "y": 2.5058603,
          "p": 1.0
        },
        {
          "arg_id": "A62_0",
          "argument": "On July 22, 2024, Koganei City and Tokyo Gas signed a partnership agreement to promote the 'Zero Carbon City' declaration, aiming for virtually zero CO2 emissions by 2050. This is a significant step towards a sustainable future.",
          "comment_id": "62",
          "x": 20.140959,
          "y": 2.6626093,
          "p": 0.8249600045744911
        },
        {
          "arg_id": "A69_0",
          "argument": "Tokyo Gas and Yokohama City have started a demonstration project on August 29 to produce e-methane from sewage resources. The regenerated water and digestion gas generated at the Northern Yokohama Sewage Center will be transported to Tokyo Gas's facilities to produce hydrogen and e-methane.",
          "comment_id": "69",
          "x": 20.039448,
          "y": 2.4797895,
          "p": 1.0
        },
        {
          "arg_id": "A80_0",
          "argument": "{'text': \"The Carbon Neutral LNG Buyers Alliance has promptly changed its name, and TOKYOGAS, the main company, has also announced this. They have started using the term 'Carbon Offset City Gas' for the offset menu of city gas utilizing carbon credits.\"}",
          "comment_id": "80",
          "x": 20.518023,
          "y": 2.3051355,
          "p": 1.0
        },
        {
          "arg_id": "A83_0",
          "argument": "The Gas Museum is celebrating the 160th anniversary of the birth of Yasuji Inoue, an artist known for his modern times landscapes featuring gas lamps. The museum, a relocated and restored Tokyo Gas branch built in 1909 in Bunkyo Ward, showcases exhibits and demonstrations of gas lamps, including those from the Rokumeikan. The gas-lit streets and people illuminated in the darkness are a key feature of Inoue's work.",
          "comment_id": "83",
          "x": 19.996271,
          "y": 2.5079846,
          "p": 1.0
        },
        {
          "arg_id": "A84_0",
          "argument": "Tokyo Gas has announced its full-scale entry into the floating offshore wind power generation business by 2024. This is a significant step in the globally recognized renewable energy sector. The company aims to deepen its experience and knowledge by acquiring approximately 20% of the shares of Windplus, a company operating floating offshore wind power in Portugal.",
          "comment_id": "84",
          "x": 20.636408,
          "y": 2.6129723,
          "p": 1.0
        },
        {
          "arg_id": "A85_0",
          "argument": "Tokyo Gas and Yokohama City have started demonstrating the use of sewage resources for methane production (Mainichi Newspaper). #Yahoo News.",
          "comment_id": "85",
          "x": 19.909094,
          "y": 2.2551525,
          "p": 0.6726328587583604
        },
        {
          "arg_id": "A89_0",
          "argument": "The Japan Gas Association has set the name for a new menu, but personally, I'm not quite convinced. Sure, it can be used in the heat comparison method report, but... This is about the start of using the general term 'Carbon Offset City Gas' for the city gas offset menu utilizing carbon credits. | TOKYOGAS",
          "comment_id": "89",
          "x": 20.278006,
          "y": 2.1829646,
          "p": 0.0
        },
        {
          "arg_id": "A93_0",
          "argument": "Recommended companies for job seekers include: Heiwa Real Estate, Mitsubishi Estate, Okinawa Development Finance Corporation, TOKYOGAS Real Estate, Daibiru, Japan Securities Finance, and JPX.",
          "comment_id": "93",
          "x": 21.485008,
          "y": 3.089452,
          "p": 0.6986007401457016
        },
        {
          "arg_id": "A94_0",
          "argument": "Announcement: Online seminar on September 4, 2024, from 12:00 to 13:00. This is the second disaster prevention seminar hosted by TOKYOGAS's media platform 'Mirai Hoplat', where we will discuss home disaster prevention. It can be viewed on YouTube, so please watch during your lunch break.",
          "comment_id": "94",
          "x": 19.364813,
          "y": 2.571809,
          "p": 0.0
        },
        {
          "arg_id": "A98_0",
          "argument": "Tokyo Gas is participating in an overseas floating offshore wind power generation project by investing in a Portuguese company.",
          "comment_id": "98",
          "x": 20.988989,
          "y": 2.5466566,
          "p": 0.988612650571892
        },
        {
          "arg_id": "A102_0",
          "argument": "Tokyo Gas customers living in Tokyo, Kanagawa, and Saitama can save 5% on their standard unit rate with Lemon Gas. There's also a premium discount for high usage customers. #Savings #CityGas #TokyoGas",
          "comment_id": "102",
          "x": 19.779243,
          "y": 3.2035425,
          "p": 0.658440247331928
        },
        {
          "arg_id": "A108_0",
          "argument": "On September 2, the reverse dividend for one day was 0.10 yen for Tokyo Gas (9531), 0.05 yen for Osaka Gas (9532), and 0.05 yen for Shizuoka Gas (9543).",
          "comment_id": "108",
          "x": 21.32735,
          "y": 3.4366806,
          "p": 1.0
        },
        {
          "arg_id": "A109_0",
          "argument": "On August 22, Tokyo Gas held a training session for its 'Sustainability Education' program at Tokyo Kasei University in Itabashi Ward, Tokyo. This program encourages energy-saving behaviors. Thirteen teachers from three elementary schools in Hadano City, Kanagawa Prefecture, participated in the training.",
          "comment_id": "109",
          "x": 19.82654,
          "y": 2.8491669,
          "p": 0.6438855829232318
        }
      ]
    },
    {
      "cluster": "\"Tokyo Gas in Sports and Entertainment\"",
      "cluster_id": "2",
      "takeaways": "The discussion primarily revolves around the Obic Seagulls and Tokyo Gas American football game, with a particular focus on the cheerleaders and players. There's also a significant interest in Tokyo Gas's commercials, which are praised for their emotional impact and high production quality. Some users also mention Tokyo Gas in relation to other sports and events, such as baseball and a special 'Tokyo Gas Day' event featuring a live performance by the idol group '=LOVE'. Additionally, there are references to Tokyo Gas in the context of video games and a drama series.",
      "arguments": [
        {
          "arg_id": "A2_0",
          "argument": "The user is sharing a moment from a game between Obic Seagulls and Tokyo Gas. They are particularly highlighting the cheerleaders of Obic Seagulls. The user has also used hashtags related to American football and photography.",
          "comment_id": "2",
          "x": 17.719395,
          "y": 4.5388255,
          "p": 1.0
        },
        {
          "arg_id": "A4_0",
          "argument": "A user shared a link to a commercial for TOKYOGAS featuring actor Go Ayano, titled 'Pipitto Stove Ayano Grill', on YouTube.",
          "comment_id": "4",
          "x": 18.759396,
          "y": 5.13163,
          "p": 1.0
        },
        {
          "arg_id": "A5_0",
          "argument": "The user understands if this is about TOKYOGAS, but mentions that they watched Vissel Kobe in the same season.",
          "comment_id": "5",
          "x": 17.699276,
          "y": 5.022826,
          "p": 1.0
        },
        {
          "arg_id": "A12_0",
          "argument": "Halftime in the game between Obic Seagulls and Tokyo Gas. #seacheer #ObicSeagulls #AmericanFootball",
          "comment_id": "12",
          "x": 17.578869,
          "y": 4.519373,
          "p": 1.0
        },
        {
          "arg_id": "A19_0",
          "argument": "This is a game highlight of 2024 Autumn-1 vs. TOKYOGAS, available on YouTube.",
          "comment_id": "19",
          "x": 17.891478,
          "y": 4.864043,
          "p": 0.9226306323089228
        },
        {
          "arg_id": "A23_0",
          "argument": "The user is sharing a Tokyo Gas commercial featuring Ayano Go and Ayakoji Kimimaro on YouTube.",
          "comment_id": "23",
          "x": 18.701878,
          "y": 5.043828,
          "p": 1.0
        },
        {
          "arg_id": "A29_0",
          "argument": "The quarterback of Tokyo Gas still maintains a physique similar to JaMarcus Russell.",
          "comment_id": "29",
          "x": 17.483295,
          "y": 5.1034937,
          "p": 1.0
        },
        {
          "arg_id": "A50_0",
          "argument": "A two-minute promotional video featuring Ienaga was aired on NHK. The sudden appearance of Mr. Machida on the TV screen was heart-pounding and felt like time had stopped. I wonder if people in Kanto, who can watch Tokyo Gas commercials, always get to experience this. It must be nice.",
          "comment_id": "50",
          "x": 18.603401,
          "y": 5.274797,
          "p": 1.0
        },
        {
          "arg_id": "A51_0",
          "argument": "The commercials of TOKYOGAS are excellent, they always move me to tears or give me goosebumps.",
          "comment_id": "51",
          "x": 18.799744,
          "y": 5.6219854,
          "p": 1.0
        },
        {
          "arg_id": "A63_0",
          "argument": "This game is highly addictive, especially for those who have a mouse. Try playing it for a minute to understand why it's so popular.",
          "comment_id": "63",
          "x": 18.32879,
          "y": 4.533814,
          "p": 1.0
        },
        {
          "arg_id": "A74_0",
          "argument": "The drama '#Lemon's Angel' episode 4 was filmed at #AokiHidebi in Setagaya Ward, Tokyo. The comparison images are from street view. The 'Tomoe-ya' from the first image still exists, while 'Tsukushi-ya' and 'Tokyo Gas' are confirmed on the map. The Pilot Pen store is yet to be confirmed.",
          "comment_id": "74",
          "x": 19.039574,
          "y": 4.5540433,
          "p": 0.0
        },
        {
          "arg_id": "A75_0",
          "argument": "The game Tchia by @awaceb, featuring a tropical adventure with lush islands, sandy beaches, and dense jungles, is now available on Nintendo Switch. The game includes unique features such as Tchia's soul-jumping ability to control animals and objects, and the use of a ukulele to trigger events.",
          "comment_id": "75",
          "x": 18.095917,
          "y": 4.2854676,
          "p": 1.0
        },
        {
          "arg_id": "A76_0",
          "argument": "The user appreciates the well-made drama-style commercials of TOKYOGAS from 2011-2016, but notes that even well-made commercials can attract complaints. They also mention that the noisy McDonald's kid commercial is still annoying to watch.",
          "comment_id": "76",
          "x": 18.992685,
          "y": 5.699549,
          "p": 1.0
        },
        {
          "arg_id": "A77_0",
          "argument": "Tokyo Gas. Wynand Grassmann player https://t.co/rO5wymRZB1",
          "comment_id": "77",
          "x": 17.487036,
          "y": 4.450912,
          "p": 1.0
        },
        {
          "arg_id": "A79_0",
          "argument": "Jake Pappin, a player associated with TOKYOGAS, is surprisingly young at 22.",
          "comment_id": "79",
          "x": 17.728851,
          "y": 5.187646,
          "p": 1.0
        },
        {
          "arg_id": "A82_0",
          "argument": "The popular female idol group '=LOVE' will be performing a special live show at the 'Tokyo Gas Day' event during halftime at the 2024 Meiji Yasuda J1 League's 30th round match between FC Tokyo and Nagoya Grampus at the National Stadium. The event is highly anticipated.",
          "comment_id": "82",
          "x": 17.468508,
          "y": 4.7696733,
          "p": 1.0
        },
        {
          "arg_id": "A87_0",
          "argument": "The user interface of Cookpad has changed and become simpler. The user preferred the previous version. They have a paid subscription to Cookpad, which they initially got for free during a campaign by TOKYOGAS and have continued since. They are considering cancelling the subscription if it becomes difficult to use. Recently, they have been finding sufficient recipes from Akari and Yuri's recipe books and Twitter searches.",
          "comment_id": "87",
          "x": 19.261919,
          "y": 5.113886,
          "p": 0.0
        },
        {
          "arg_id": "A90_0",
          "argument": "@400Xdance is discussing a short drama series by TOKYOGAS. They found it very touching, particularly the awkward display of family love.",
          "comment_id": "90",
          "x": 18.9861,
          "y": 5.5831776,
          "p": 1.0
        },
        {
          "arg_id": "A96_0",
          "argument": "50% discount and a Ubisoft gift on PlayItCloud for cloud gaming.",
          "comment_id": "96",
          "x": 18.361408,
          "y": 4.1867137,
          "p": 1.0
        },
        {
          "arg_id": "A97_0",
          "argument": "A user is curious about what Tokyo Gas's muscle training is like.",
          "comment_id": "97",
          "x": 18.47028,
          "y": 4.8794093,
          "p": 0.9335693054299432
        },
        {
          "arg_id": "A99_0",
          "argument": "The user is suggesting that wearing this (unspecified item) would be good for supporting the Tokyo Gas baseball team.",
          "comment_id": "99",
          "x": 17.300154,
          "y": 4.761555,
          "p": 1.0
        },
        {
          "arg_id": "A101_0",
          "argument": "Looking forward to SOMOSOMO and TOKYOGAS's face-off, this week's playlist ended with TOKYOGAS's commercial. #FM Tachikawa. #Idol Fourth Conference Room. #If it's an electric kickboard, then SWALLOW.",
          "comment_id": "101",
          "x": 18.15107,
          "y": 5.323702,
          "p": 0.0
        },
        {
          "arg_id": "A116_0",
          "argument": "On 9/14 at the National Stadium, it's 'Tokyo Gas Day' for the Nagoya match. Highlights include: 1. Special baseball shirt giveaways. 2. A halftime special live performance by '=LOVE'. 3. Appearances by 'Patcho, Den Patcho, and Mizu Patcho'.",
          "comment_id": "116",
          "x": 17.340475,
          "y": 4.433771,
          "p": 1.0
        },
        {
          "arg_id": "A118_0",
          "argument": "An announcement was made about the 'Tokyo Gas Day' event to be held on September 14th during the Nagoya match, as per the FC Tokyo official homepage. There was a mention of baseball shirts, which led to the assumption that it might be about baseball team uniforms.",
          "comment_id": "118",
          "x": 17.178713,
          "y": 4.5887585,
          "p": 1.0
        }
      ]
    },
    {
      "cluster": "\"Consumer Experiences and Opinions on Tokyo Gas Services\"",
      "cluster_id": "0",
      "takeaways": "Participants expressed mixed views on Tokyo Electric Power Company and TOKYOGAS. Some praised their reliability and safety, while others criticized their pricing and customer service. There was skepticism towards new power companies, with some users recommending thorough research before switching. Concerns were raised about the complexity of managing electricity and gas from different providers. Some users reported higher bills after switching to new providers. There were also complaints about TOKYOGAS's energy-saving campaign and meter replacement practices. A few users mentioned the benefits of online services for elderly customers.",
      "arguments": [
        {
          "arg_id": "A3_0",
          "argument": "@RINSONG_0110 believes that when it comes to infrastructure, Tokyo Electric Power Company and TOKYOGAS are the safest options. They express skepticism towards new, unknown power companies.",
          "comment_id": "3",
          "x": 21.477858,
          "y": 4.0320907,
          "p": 0.8875482993413237
        },
        {
          "arg_id": "A6_0",
          "argument": "The user registered on the TOKYOGAS website to view their electricity and gas usage online due to the paperless transition from October. They viewed their power usage in a graph format, where the bar represents their current month's usage and the white circle represents the average usage of other households.",
          "comment_id": "6",
          "x": 21.48245,
          "y": 4.9474435,
          "p": 1.0
        },
        {
          "arg_id": "A7_0",
          "argument": "The user visited a Docomo shop at 1 PM to get assistance in consolidating their Softbank electricity to TOKYOGAS. The process took a lot of time, delaying their Docomo transfer work. They also had to urgently change their address from Softbank to Gmail for some urgent matters. They left the Docomo shop after 7 PM and arrived home at 8 PM, having woken up at 11 AM.",
          "comment_id": "7",
          "x": 20.902645,
          "y": 5.243318,
          "p": 1.0
        },
        {
          "arg_id": "A17_0",
          "argument": "The user is frustrated that Tokyo Gas's energy-saving points double on Mondays, a day they have off and therefore can't save much energy. They wish the doubling would occur from Tuesday to Saturday instead, and question if the day is chosen randomly.",
          "comment_id": "17",
          "x": 20.637934,
          "y": 4.7972503,
          "p": 0.6857575164688232
        },
        {
          "arg_id": "A21_0",
          "argument": "@Hinata_nanokaho suggests that while new power systems might be cheaper, they are currently unstable and it might be better to avoid them. They are unsure about Rakuten and similar systems, and recommend researching before making a decision.",
          "comment_id": "21",
          "x": 21.403383,
          "y": 4.1683836,
          "p": 1.0
        },
        {
          "arg_id": "A22_0",
          "argument": "Tokyo Gas is terrible.",
          "comment_id": "22",
          "x": 19.991964,
          "y": 4.392226,
          "p": 1.0
        },
        {
          "arg_id": "A26_0",
          "argument": "The user received a 1000 yen Amazon gift card from Tokyo Gas's energy-saving campaign and was glad to notice it before the deadline.",
          "comment_id": "26",
          "x": 20.164688,
          "y": 4.8618803,
          "p": 0.0
        },
        {
          "arg_id": "A31_0",
          "argument": "User acknowledges the importance of gas during power outages, positively impacting TOKYOGAS (9531), which saw a 0.58% increase.",
          "comment_id": "31",
          "x": 21.74958,
          "y": 4.637225,
          "p": 0.0
        },
        {
          "arg_id": "A33_0",
          "argument": "@WCtcJBdXGSOogpC is questioning the motives of a woman who switched jobs from Tokyo Electric Power to Tokyo Gas.",
          "comment_id": "33",
          "x": 20.704424,
          "y": 4.505139,
          "p": 0.6294548802318397
        },
        {
          "arg_id": "A39_0",
          "argument": "Tokyo Gas Co., Ltd. and Tokyo Electric Power Energy Partner Co., Ltd. each handle electricity and gas. This seems complicated.",
          "comment_id": "39",
          "x": 21.164293,
          "y": 3.8130267,
          "p": 0.6537518796641476
        },
        {
          "arg_id": "A41_0",
          "argument": "Despite the existence of Tokyo Gas and Toho Gas, there is no Osaka Gas, but there is Kansai Electric Power. This raises questions about a possible conspiracy.",
          "comment_id": "41",
          "x": 20.948296,
          "y": 4.1104383,
          "p": 0.0
        },
        {
          "arg_id": "A44_0",
          "argument": "@ayqtsuji is discussing the electricity and gas set from TOKYOGAS. They mention that while the set might be slightly cheaper, they feel there might not be much difference no matter which company one chooses to use.",
          "comment_id": "44",
          "x": 21.442142,
          "y": 4.484541,
          "p": 0.0
        },
        {
          "arg_id": "A46_0",
          "argument": "@o2VseNrtPRwVAOF criticizes the president of TOKYOGAS, comparing large corporations to large ships that can continue to operate for a while even if the leadership is incompetent. They believe this is especially true for gas companies.",
          "comment_id": "46",
          "x": 21.685188,
          "y": 4.208766,
          "p": 0.8875482993413237
        },
        {
          "arg_id": "A54_0",
          "argument": "The user expresses concern about TOKYOGAS, stating that despite only using 37 cubic meters of gas, their meter was replaced again. They question if this is a scheme to increase profits. They also express distrust towards capitalists, politicians, and bureaucrats.",
          "comment_id": "54",
          "x": 20.797901,
          "y": 4.9374933,
          "p": 0.6857575164688232
        },
        {
          "arg_id": "A57_0",
          "argument": "The user is jokingly apologizing to TOKYOGAS for making them a topic of discussion, while affirming they will continue to pay their monthly gas and electricity bills. They also mention hashtags related to stamp festivals and championships.",
          "comment_id": "57",
          "x": 21.122726,
          "y": 5.216733,
          "p": 1.0
        },
        {
          "arg_id": "A59_0",
          "argument": "Despite initial expectations for Enefarm, it seems challenging given Tokyo Gas's lack of enthusiasm. Why are they selling toilets and batteries instead of fuel cells? It's unclear what their business focus is.",
          "comment_id": "59",
          "x": 21.019089,
          "y": 3.9031844,
          "p": 0.6537518796641476
        },
        {
          "arg_id": "A61_0",
          "argument": "UK's Octopus Energy, a new power company in the Tokyo Gas Group, discusses its strategy and the barriers to liberalization, stating that 'there's no problem even with excess debt'.",
          "comment_id": "61",
          "x": 21.841646,
          "y": 3.80857,
          "p": 0.0
        },
        {
          "arg_id": "A64_0",
          "argument": "The user is choosing Tokyo Gas and Cosmo Electricity. They are questioning if NURO Hikari is different from Sonnet.",
          "comment_id": "64",
          "x": 21.206615,
          "y": 4.308858,
          "p": 1.0
        },
        {
          "arg_id": "A66_0",
          "argument": "A call from TOKYOGAS mentioned instances of gas companies being switched without the customer's knowledge. Could it be that everyone is just switching to cheaper companies? There seems to be no more benefits with Tokyo Electric Power Company & TOKYOGAS. Here's a site for reviewing electricity and gas options: https://t.co/KCjamcHdOV.",
          "comment_id": "66",
          "x": 21.181135,
          "y": 4.5034895,
          "p": 0.9238476909107748
        },
        {
          "arg_id": "A68_0",
          "argument": "The user was unaware that TOKYOGAS had introduced Kraken and Kraken Flex. They shared a link discussing the strategy of Octopus Energy, a new power company in the Tokyo Gas Group, and the barriers to liberalization, stating that being over-indebted is not a problem.",
          "comment_id": "68",
          "x": 21.849813,
          "y": 4.14032,
          "p": 0.0
        },
        {
          "arg_id": "A71_0",
          "argument": "Tokyo Gas's energy-saving time is not energy-saving at all.",
          "comment_id": "71",
          "x": 20.370523,
          "y": 4.393152,
          "p": 1.0
        },
        {
          "arg_id": "A72_0",
          "argument": "Just realized the reason for my high electricity bill. An additional charge for power procurement adjustment has been applied since June 2023. Those who contracted for electricity after the start are not affected, but those with old plan contracts have been paying about 25,000 yen more over a year without any automatic changes. The change procedure will be completed in about 1.5 months. Considering switching from au Denki to TOKYOGAS.",
          "comment_id": "72",
          "x": 21.401133,
          "y": 4.990655,
          "p": 1.0
        },
        {
          "arg_id": "A78_0",
          "argument": "@hitomi_140000 agrees that they made a mistake by leaving the air conditioning on overnight, even though ventilation seemed sufficient. They are using TOKYOGAS's electricity for the first time and are looking forward to receiving the bill.",
          "comment_id": "78",
          "x": 20.950869,
          "y": 5.293982,
          "p": 1.0
        },
        {
          "arg_id": "A107_0",
          "argument": "In August, the user's electricity bill from Tokyo Gas was 12,096 yen for 445 kWh, while from Looop it was 16,528 yen for 415 kWh. The user is upset because switching to Looop made their bill more expensive.",
          "comment_id": "107",
          "x": 21.188732,
          "y": 4.788389,
          "p": 0.6623795050100622
        },
        {
          "arg_id": "A117_0",
          "argument": "Today, I applied online for a paid meter reading form for my 80-year-old mother. She didn't know that you could apply online and kept telling me to call. Our house uses both gas and electricity from TOKYOGAS, and we were able to apply using just our customer number. This might be a good option for elderly households.",
          "comment_id": "117",
          "x": 21.5869,
          "y": 5.047519,
          "p": 1.0
        },
        {
          "arg_id": "A120_0",
          "argument": "@pppnnp99 is asking what TGS is, with their only guess being Tokyo Gas.",
          "comment_id": "120",
          "x": 19.799511,
          "y": 4.6287317,
          "p": 0.0
        }
      ]
    },
    {
      "cluster": "\"Tokyo Gas in Sports and Athletics\"",
      "cluster_id": "4",
      "takeaways": "The discussion primarily revolves around Japanese sports, with a particular focus on baseball and swimming. Keiichi Kimura, a swimmer from Tokyo Gas, is repeatedly highlighted for his gold medal win in the men's 50m freestyle at the Paris Paralympics. The participants also discuss various baseball teams and players, including those from Tokyo Gas, and the Hiroshima Toyo Carp's draft picks for 2022. There's also mention of a virtual weight loss challenge and a high school baseball player discussion from Yamanashi Prefecture, Japan.",
      "arguments": [
        {
          "arg_id": "A9_0",
          "argument": "Currently, it seems barely possible to reach Northern Kanto. It's difficult to travel as far as Shizuoka, and it might not be possible to go to Okazaki anymore. I remember comfortably watching the club championship in Tokorozawa from the relaxed sofa behind the net. This applies to the second preliminary round of the city competition and the sports newspaper. The first match between Seibu's second team and Tokyo Gas was also in the dome.",
          "comment_id": "9",
          "x": 16.8643,
          "y": 4.152957,
          "p": 0.9335364721436084
        },
        {
          "arg_id": "A27_0",
          "argument": "From Kaho High School to Hokkaido University and then to Tokyo Gas, and now from Munakata High School to Hokkaido University and then to Osaka Gas.",
          "comment_id": "27",
          "x": 16.683697,
          "y": 3.839563,
          "p": 0.9238029744452284
        },
        {
          "arg_id": "A30_0",
          "argument": "On the fourth day of the Paris Paralympics, Keiichi Kimura from TOKYOGAS won the men's 50-meter freestyle swimming event for visually impaired (S11) competitors.",
          "comment_id": "30",
          "x": 15.193067,
          "y": 3.9300613,
          "p": 0.944137154580851
        },
        {
          "arg_id": "A34_0",
          "argument": "When considering the final Olympic ice hockey qualifiers (requiring three consecutive victories), one can look at the example of Tokyo Gas (JFL) who achieved three straight wins against Nagoya Grampus, Yokohama Marinos, and Shonan Bellmare.",
          "comment_id": "34",
          "x": 16.492096,
          "y": 4.0331416,
          "p": 0.8545686562857965
        },
        {
          "arg_id": "A40_0",
          "argument": "The user is discussing the Lions baseball team, expressing regret that they missed out on acquiring Misho. They mention that the other candidates for center fielder are Nakao and Chinen from Tokyo Gas. They suggest that keeping Kaneko as a backup or relief might have been a good idea, but they also acknowledge that Akiyama is returning.",
          "comment_id": "40",
          "x": 16.805033,
          "y": 4.6952996,
          "p": 1.0
        },
        {
          "arg_id": "A43_0",
          "argument": "Keiichi Kimura, a 33-year-old competitive swimmer from TOKYOGAS, won the gold medal in the men's 50-meter freestyle (visual impairment S11) at the fourth day of the Paris Paralympics on August 31, with a time of 25.98 seconds.",
          "comment_id": "43",
          "x": 15.25983,
          "y": 3.9861593,
          "p": 1.0
        },
        {
          "arg_id": "A53_0",
          "argument": "Keiichi Kimura, an alumnus of Nihon University and currently with Tokyo Gas, won a gold medal in the men's 50m freestyle (visual impairment S11) at the Paris Paralympics. He set a new Japanese record with his win. Congratulations to Kimura.",
          "comment_id": "53",
          "x": 15.485505,
          "y": 3.9361315,
          "p": 0.5744059025954077
        },
        {
          "arg_id": "A55_0",
          "argument": "Join the Dia de los Muertos Challenge for a weight loss journey! This virtual challenge covers a 98mi(158km) circular route, beginning and concluding in Oaxaca City. Register today!",
          "comment_id": "55",
          "x": 15.70892,
          "y": 3.7206697,
          "p": 0.2982841939532426
        },
        {
          "arg_id": "A56_0",
          "argument": "Keiichi Kimura, a Paralympic swimmer sponsored by Tokyo Gas, won a gold medal in the 50m freestyle at the Paris 2024 Paralympics. He is also scheduled to compete in the 100m butterfly, with the preliminary round on September 6th around 18:25 and the final round on September 7th around 3:04. Continued support is appreciated.",
          "comment_id": "56",
          "x": 15.387689,
          "y": 3.8541214,
          "p": 0.5645204320242477
        },
        {
          "arg_id": "A60_0",
          "argument": "Keiichi Kimura, a swimmer from TOKYOGAS, won the gold medal in the men's 50m freestyle for visually impaired at the Paralympics. He is scheduled to participate in the 'Tokyo 2025 World Athletics 1 Year To Go!' event at Tokyo Dome City on September 14th, from 15:00 to 15:30. He will share his thoughts on the Paris 2024 Paralympics and his new challenges.",
          "comment_id": "60",
          "x": 15.358692,
          "y": 4.0647683,
          "p": 0.821484163147754
        },
        {
          "arg_id": "A65_0",
          "argument": "On September 1, Keiichi Kimura, a swimmer from Shiga Prefecture and member of Tokyo Gas, won a gold medal in the men's 50m freestyle (S11 - total blindness) at the Paralympics in Paris. He set a new Japanese record with a time of 25.98 seconds, improving his previous record by 0.07 seconds. This is his second consecutive gold medal following the Tokyo Games. Congratulations to Kimura.",
          "comment_id": "65",
          "x": 15.275615,
          "y": 4.002609,
          "p": 1.0
        },
        {
          "arg_id": "A67_0",
          "argument": "The 48th All Japan Club Baseball Championship is about to start the semi-finals. The commentary is by Kikuchi Soumitsu, former Tokyo Gas director, and the live coverage is by Yano Yoshihiko. The first match is scheduled to start at 8:30, with Showa Corporation vs. Efcom BC. The event can be followed on the special site within the Mainichi Newspaper Digital.",
          "comment_id": "67",
          "x": 16.93648,
          "y": 4.271489,
          "p": 1.0
        },
        {
          "arg_id": "A73_0",
          "argument": "Tokyo Gas player, Masaki Kato, has shared a photo of him using our arm sleeve. He participated in the Koshien tournament with Kotaro Kiyomiya during his time at Waseda Jitsugyo. Tokyo Gas is scheduled to play their first game in the 49th Corporate Baseball Japan Championship Kanto Representative Deciding Match at Ota Stadium on Tuesday. We are cheering for them.",
          "comment_id": "73",
          "x": 17.081938,
          "y": 4.472748,
          "p": 1.0
        },
        {
          "arg_id": "A105_0",
          "argument": "Hiroshima Toyo Carp's draft picks for 2022 include: 1st pick - Yuta Saito (Tomakomai Central High School, Pitcher), 2nd pick - Shodai Uchida (Tone Commercial High School, Infielder), 3rd pick - Takanao Masuda (Tokyo Gas, Pitcher), 4th pick - Kato Shimizu (Takasaki Health and Welfare University, Catcher), 5th pick - Yoshi Kono (Osaka Gas, Pitcher), 6th pick - Ginji Hasebe (Toyota Motor, Pitcher).",
          "comment_id": "105",
          "x": 16.621271,
          "y": 4.518183,
          "p": 1.0
        },
        {
          "arg_id": "A119_0",
          "argument": "Discussion about various high school baseball players from Yamanashi Prefecture, Japan. Mentioned players include pitchers Sato Miki (Nippon Steel Kazusa Magic), Wakayama Keito (Tokai University), and Yamada Yuki (Kami Medical University); catcher Kameda Keita (Yomiuri Giants); infielder Tachibana Rikuto (Nihon University); outfielders Takizawa Kotaro (ENEOS), Nakao Yusuke (Tokyo Gas), Nomura Kenta (Waseda University), Edpolo Cain (Osaka Gakuin University), and Fujisawa Junya (Sakuramirin University).",
          "comment_id": "119",
          "x": 16.69402,
          "y": 4.4677963,
          "p": 1.0
        }
      ]
    },
    {
      "cluster": "Customer Complaints and Dissatisfaction with Tokyo Gas Services",
      "cluster_id": "5",
      "takeaways": "The participants expressed a range of concerns and complaints about TOKYOGAS. These include dissatisfaction with the company's advertising language, unexpected inspection visits, and charges for services without prior notification. There were also concerns about the company's association with South Korea and allegations of involvement in a dormitory incident. Some participants reported receiving unsolicited emails from various companies, including TOKYOGAS, causing frustration and fear. However, there were also positive interactions, with one participant thanking TOKYOGAS for providing useful information.",
      "arguments": [
        {
          "arg_id": "A10_0",
          "argument": "A user found their 'Kenta-kun' daily schedule, which they had kept in their pocket, had dried out and hardened under the hood. They expressed a desire for it, despite being told by TOKYOGAS that it's only suitable for detached houses.",
          "comment_id": "10",
          "x": 20.742243,
          "y": 5.754137,
          "p": 0.0
        },
        {
          "arg_id": "A13_0",
          "argument": "The user is expressing frustration and fear due to receiving emails from various addresses, including those claiming to be from ION card, Amazon, TOKYOGAS, and Sagawa Express, despite not having an ION card. They have registered the email address @kita9.ed.jp as spam due to the inconvenience.",
          "comment_id": "13",
          "x": 20.17739,
          "y": 5.44673,
          "p": 1.0
        },
        {
          "arg_id": "A18_0",
          "argument": "A user expresses dissatisfaction with TOKYOGAS, a large corporation, for spreading distrust through their advertising language, describing it as too vulgar.",
          "comment_id": "18",
          "x": 19.58435,
          "y": 5.982094,
          "p": 0.0
        },
        {
          "arg_id": "A45_0",
          "argument": "A user complained about TOKYOGAS's smoke detector, stating they were charged a lease fee without being informed about the cost beforehand. They are wondering if anything can be done about it now.",
          "comment_id": "45",
          "x": 20.556767,
          "y": 5.9403744,
          "p": 0.6341377730390241
        },
        {
          "arg_id": "A52_0",
          "argument": "@1CZWiWBfJDuO67R had an experience in Yokohama where they were made to participate in an evacuation drill when they went for an underground survey with TOKYOGAS on September 1. They believe it was in the early afternoon.",
          "comment_id": "52",
          "x": 20.077238,
          "y": 5.7244987,
          "p": 1.0
        },
        {
          "arg_id": "A86_0",
          "argument": "@7ciaod, thank you! I called TOKYOGAS and they provided me with various information.",
          "comment_id": "86",
          "x": 20.233658,
          "y": 6.0860844,
          "p": 1.0
        },
        {
          "arg_id": "A92_0",
          "argument": "A sudden visit from TOKYOGAS for an inspection was unexpected as there was no prior notification. It's inconvenient for households with working couples. The visitor was not from TOKYOGAS but a subcontractor, Enesta Ushiku. Is this happening to others in Ryugasaki? #Ryugasaki #TOKYOGAS",
          "comment_id": "92",
          "x": 20.285698,
          "y": 5.613075,
          "p": 1.0
        },
        {
          "arg_id": "A95_0",
          "argument": "The user finds the commercial of TOKYOGAS disturbing and warns that they won't be responsible if it violates any rules. They also express their disapproval of the company's association with South Korea.",
          "comment_id": "95",
          "x": 19.648132,
          "y": 5.8106046,
          "p": 0.0
        },
        {
          "arg_id": "A106_0",
          "argument": "The dormitory was found to be devoid of valuables and money, with only shabby items left behind. It is believed that TOKYOGAS is involved in this incident. On the morning and afternoon of September 3rd, about 100 Japanese workers reportedly attacked and killed Chinese people, and it is thought that this dormitory was also attacked in the process. (Document owned by the Diplomatic Archives of the Ministry of Foreign Affairs)",
          "comment_id": "106",
          "x": 20.034784,
          "y": 5.7148542,
          "p": 0.872953330043674
        },
        {
          "arg_id": "A110_0",
          "argument": "@raccolta_BDC mentioned missing the recent TOKYOGAS event.",
          "comment_id": "110",
          "x": 20.262024,
          "y": 6.1474533,
          "p": 1.0
        },
        {
          "arg_id": "A111_0",
          "argument": "@moonriver91725 expresses disappointment with the service received from TOKYOGAS. They mention that TOKYOGAS usually conducts annual inspections and notifies in advance. They also speculate whether the service was provided by a subcontractor, possibly Enesta, and express dissatisfaction with the poor service.",
          "comment_id": "111",
          "x": 20.396965,
          "y": 6.0527334,
          "p": 1.0
        },
        {
          "arg_id": "A115_0",
          "argument": "@moonriver91725 Ah! Enesta is a company that inspects within Tokyo Gas. Ryugasaki has merged with Ushiku!",
          "comment_id": "115",
          "x": 20.334455,
          "y": 5.270333,
          "p": 0.6827703308698047
        }
      ]
    },
    {
      "cluster": "Tokyo Gas Home Services and Lifestyle Tips",
      "cluster_id": "3",
      "takeaways": "The participants discussed a variety of topics related to Tokyo Gas, including its house cleaning service, appliance efficiency, cooking tips, shoe care, and disaster preparedness. They also mentioned promotional events, such as a collaboration with the Japan Green Tea Center for a Halloween event and a limited-time mattress cleaning service. Some participants shared their personal experiences with Tokyo Gas, including safety inspections and air conditioner cleaning. The conversation also touched on Tokyo Gas's radio commercials and their impact on household behaviors.",
      "arguments": [
        {
          "arg_id": "A14_0",
          "argument": "Tokyo Gas's house cleaning service will make your home sparkle, a perfect solution for busy individuals. (PR)",
          "comment_id": "14",
          "x": 19.314865,
          "y": 3.505048,
          "p": 1.0
        },
        {
          "arg_id": "A16_0",
          "argument": "Discussing the differences between gas and electric clothes dryers, particularly in terms of finish and time efficiency. #TOKYOGAS #HomeAppliances #TimeSaving",
          "comment_id": "16",
          "x": 20.147343,
          "y": 3.6237433,
          "p": 0.0
        },
        {
          "arg_id": "A24_0",
          "argument": "During hot weather, it's a great time to make mixed rice dishes with seasonal ingredients like corn. You can enjoy summer flavors with ethnic seasonings. #TOKYOGAS #HomeCooking #SummerRecipe #QuickMeal",
          "comment_id": "24",
          "x": 18.428638,
          "y": 2.9125428,
          "p": 0.912262613600606
        },
        {
          "arg_id": "A25_0",
          "argument": "Today is #ShoeDay \ud83d\udc60. Is it okay to put tape on new shoes? The key to making them last longer lies in the soles\u2728\ud83d\udc40. We introduce professional maintenance methods\ud83c\udf89. #TOKYOGAS #HomeThings #HowToPolishShoes #ShoeCare",
          "comment_id": "25",
          "x": 19.196226,
          "y": 3.7083702,
          "p": 1.0
        },
        {
          "arg_id": "A28_0",
          "argument": "Lemon Gas offers a 5% cheaper standard unit fee compared to the general contract of Tokyo Gas. This is beneficial for residents in Tokyo, Kanagawa, and Saitama prefectures who are currently using Tokyo Gas. They also offer a premium discount, making it a must-see for those with high usage.",
          "comment_id": "28",
          "x": 19.626238,
          "y": 3.4030595,
          "p": 0.7184617897924014
        },
        {
          "arg_id": "A32_0",
          "argument": "The September seasonal bath is #ChrysanthemumBath. It's okay to use fresh chrysanthemums. It's a very easy seasonal bath. How about it for today's #BathTime? #TokyoGas #HomeLife #ThisMonth'sBath #SeasonalEvent",
          "comment_id": "32",
          "x": 18.747484,
          "y": 3.515944,
          "p": 0.8377568012829525
        },
        {
          "arg_id": "A35_0",
          "argument": "User is unsure about what disaster preparedness items to gather. They suggest starting with poly bags, which they claim are excellent disaster management tools. They introduce three types of poly bags and how to use them. They also share a link for more information. The hashtags used are related to Tokyo Gas, home matters, disaster prevention week, and power outage measures.",
          "comment_id": "35",
          "x": 19.091223,
          "y": 2.399097,
          "p": 1.0
        },
        {
          "arg_id": "A37_0",
          "argument": "@x_azuk_x reported that the Tokyo Gas inspection was conducted and everything was safe. They also mentioned that there was no smell in any other rooms, indicating that all areas were checked.",
          "comment_id": "37",
          "x": 19.641966,
          "y": 4.050521,
          "p": 0.0
        },
        {
          "arg_id": "A42_0",
          "argument": "Once the room coordination is somewhat complete, I plan to request air conditioner cleaning. I trust the cleaning services of TOKYOGAS.",
          "comment_id": "42",
          "x": 19.523083,
          "y": 3.8132095,
          "p": 0.6857922624984512
        },
        {
          "arg_id": "A49_0",
          "argument": "The Tokyo Gas radio commercial, known for its excellence, has had a critical impact on my household. It accurately portrays a woman persuading a reluctant family member to take a bath. Today, when I hesitated to take a bath, I was asked, 'What? Is it Tokyo Gas again today?'",
          "comment_id": "49",
          "x": 18.963873,
          "y": 4.1552105,
          "p": 0.0
        },
        {
          "arg_id": "A70_0",
          "argument": "Tokyo Gas's house cleaning service will make your home sparkle, a perfect solution for busy individuals. (PR)",
          "comment_id": "70",
          "x": 19.021158,
          "y": 3.579661,
          "p": 1.0
        },
        {
          "arg_id": "A81_0",
          "argument": "September 3rd is #GoodSleepDay. #TokyoGas is offering a limited-time mattress cleaning service until September 10th as part of their house cleaning services. Please take advantage of this offer. More details can be found at the provided link.",
          "comment_id": "81",
          "x": 18.939857,
          "y": 3.632659,
          "p": 1.0
        },
        {
          "arg_id": "A88_0",
          "argument": "Tokyo Gas collaborates with Japan Green Tea Center for a Halloween event featuring 'Crazy Salt'.",
          "comment_id": "88",
          "x": 18.084606,
          "y": 3.2519088,
          "p": 1.0
        },
        {
          "arg_id": "A91_0",
          "argument": "Tokyo Gas's house cleaning service will make your home sparkle, a perfect solution for busy individuals. 'PR'",
          "comment_id": "91",
          "x": 19.26981,
          "y": 3.3499024,
          "p": 0.6953292164473897
        },
        {
          "arg_id": "A100_0",
          "argument": "During disasters, having sweets can help alleviate anxiety. Having regular food and long-lasting items prepared can also provide peace of mind. #TOKYOGAS #HomeMatters #DisasterPreventionWeek #EmergencyFood",
          "comment_id": "100",
          "x": 18.70872,
          "y": 2.5026562,
          "p": 1.0
        },
        {
          "arg_id": "A103_0",
          "argument": "Enjoy your unused emergency food before it expires! Delicious recipes using Alpha Rice for omelette rice and dry bread for chocolate salami. Plenty of professional recipes available. #TokyoGas #HomeThings #DisasterPreventionWeek #RollingStock",
          "comment_id": "103",
          "x": 18.69533,
          "y": 2.5431979,
          "p": 0.940592040223733
        },
        {
          "arg_id": "A104_0",
          "argument": "The Japan Green Tea Center and Tokyo Gas are hosting a cooking class featuring a special Halloween menu, highlighted by the use of 'Crazy Salt'.",
          "comment_id": "104",
          "x": 18.333055,
          "y": 3.2052035,
          "p": 1.0
        },
        {
          "arg_id": "A112_0",
          "argument": "Today is #SkewerDay. Celebrating with skewered dishes and homemade #Highball. Filling the glass with lots of ice, you can easily recreate the deliciousness of a restaurant at home. #TokyoGas #HomeThings #WhatDayIsToday #Whiskey @asahibeer_jp",
          "comment_id": "112",
          "x": 18.281424,
          "y": 2.7575822,
          "p": 0.9578241011777702
        },
        {
          "arg_id": "A113_0",
          "argument": "The Japan Green Tea Center and Tokyo Gas are hosting a cooking class featuring a special Halloween menu, which includes dishes seasoned with 'Crazy Salt'.",
          "comment_id": "113",
          "x": 18.202576,
          "y": 3.0728178,
          "p": 1.0
        },
        {
          "arg_id": "A114_0",
          "argument": "The hot days continue. Why not cool down with a refreshing fruit jelly? The 'Fizzy Watermelon Jelly' has a carbonated accent, and the 'Apple Cider Jelly' is refreshing. #TOKYOGAS #HomemadeSnacks #SummerRecipe",
          "comment_id": "114",
          "x": 18.130367,
          "y": 2.8189547,
          "p": 0.9578241011777702
        }
      ]
    }
  ],
  "comments": {
    "1": {
      "comment": "\uff3b\u65b0\u96fb\u529b\u306f\u4eca\uff3d\uff08\uff12\uff09\u6771\u6025\u30d1\u30ef\u30fc\u30fb\u6771\u4eac\u30ac\u30b9\uff0f\u9996\u90fd\u570f\u300c\u6700\u6fc0\u6226\u533a\u300d\u306e\u4e21\u96c4 \u2013 \u96fb\u6c17\u65b0\u805e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 2024/09/02 https://t.co/BLWcONadKu #clip_energy"
    },
    "2": {
      "comment": "\u300eSmile\u300f\u3002\u30aa\u30fc\u30d3\u30c3\u30af\u30b7\u30fc\u30ac\u30eb\u30bavs.\u6771\u4eac\u30ac\u30b9\u3002\u30aa\u30fc\u30d3\u30c3\u30af\u30b7\u30fc\u30ac\u30eb\u30ba\u30c1\u30a2\u30ea\u30fc\u30c0\u30fc\u3055\u3093\u3002#seacheer \u3002#\u30d5\u30a1\u30a4\u30f3\u30c0\u30fc\u8d8a\u3057\u306e\u79c1\u306e\u4e16\u754c\u3002#\u30a2\u30e1\u30d5\u30c8 https://t.co/6L252zSGSa"
    },
    "3": {
      "comment": "@RINSONG_0110 \u30a4\u30f3\u30d5\u30e9\u306b\u95a2\u3057\u3066\u306f\u6771\u96fb\u3001\u6771\u4eac\u30ac\u30b9\u304c\u3044\u3061\u3070\u3093\u5b89\u5168\u3002\u602a\u3057\u3052\u306a\u65b0\u96fb\u529b\u306f\u3060\u3044\u305f\u3044\u30af\u30bd"
    },
    "4": {
      "comment": "\u3053\u308c\u3084\u3093\u3002\u3002\u3002\u6771\u4eac\u30ac\u30b9 \u7dbe\u91ce\u525b CM \u300c\u30d4\u30d4\u30c3\u3068\u30b3\u30f3\u30ed \u30a2\u30e4\u30ce\u30b0\u30ea\u30eb\u300d\u7bc7 https://t.co/t3LQy1aZ22 @YouTube\u3088\u308a"
    },
    "5": {
      "comment": "\u3082\u3057\u3053\u308c\u304c\u6771\u4eac\u30ac\u30b9\u306a\u3089\u308f\u304b\u308b\u304c\u3002\u3002\u305d\u308c\u306f\u304a\u3044\u3089\u304c\u540c\u3058\u30b7\u30fc\u30ba\u30f3\u306b\u89b3\u6226\u3057\u305f\u30f4\u30a3\u30c3\u30bb\u30eb\u795e\u6238\u3060\u304b\u3089\u306a"
    },
    "6": {
      "comment": "10\u6708\u304b\u3089\u306e\u30da\u30fc\u30d1\u30fc\u30ec\u30b9\u5316\u3067\u96fb\u6c17\u3084\u30ac\u30b9\u306e\u4f7f\u7528\u6599\u3092\u30cd\u30c3\u30c8\u3067\u898b\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u306e\u3067\u6771\u4eac\u30ac\u30b9\u306e\u30b5\u30a4\u30c8\u306b\u767b\u9332\u3002\u3067\u3082\u3063\u3066\u30b0\u30e9\u30d5\u5316\u3055\u308c\u305f\u96fb\u529b\u4f7f\u7528\u91cf\u3092\u898b\u305f\u306e\u3067\u3059\u304c\u3001\u68d2\u306f\u4eca\u6708\u306e\u3046\u3061\u306e\u4f7f\u7528\u91cf\u3067\u767d\u4e38\u304c\u4ed6\u306e\u5bb6\u5ead\u306e\u5e73\u5747\u4f7f\u7528\u91cf\u2026 https://t.co/EyhiI8DqX7"
    },
    "7": {
      "comment": "\u6628\u65e5\u300113\u6642\u306bdocomo\u30b7\u30e7\u30c3\u30d7\u306b\u884c\u304d\u3001Softbank\u3067\u3093\u304d\u2192\u6771\u4eac\u30ac\u30b9\u306b\u307e\u3068\u3081\u308b\u306e\u304a\u624b\u4f1d\u3044\u3057\u3066\u8cb0\u3046\u306e\u306b\u6642\u9593\u304c\u3081\u3061\u3083\u639b\u304b\u308a\u3001docomo\u306e\u4e57\u308a\u63db\u3048\u4f5c\u696d\u304c\u9045\u304f\u306a\u308a\u3001\u66f4\u306b\u6025\u907d\u30a2\u30c9\u30ec\u30b9\u3092Softbank\u2192Gmail\u306b\u5909\u66f4\u3092\u6025\u304e\u306e\u4eba\u306e\u5206\u3060\u3051\u3084\u3063\u3066\u8cb0\u3044\u3001docomo\u30b7\u30e7\u30c3\u30d7\u3092\u3067\u305f\u306e\u304c19\u6642\u904e\u304e\u5bb6\u306b\u7740\u3044\u305f\u306e\u304b20\u6642\u8d77\u304d\u305f\u306e\u304c11\u6642"
    },
    "8": {
      "comment": "\u90fd\u5e02\u30ac\u30b9\u696d\u754c\u3067\u306f\u3001\u9577\u3089\u304f\u6771\u4eac\u30ac\u30b9\u304c\u30c8\u30c3\u30d7\u306e\u5ea7\u306b\u3044\u307e\u3057\u305f\u304c\u3001\u4eca\u5e743\u6708\u9803\u304b\u3089\u6771\u4eac\u30ac\u30b9\u306e\u6642\u4fa1\u7dcf\u984d\u3092\u5927\u962a\u30ac\u30b9\u304c\u9006\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\u3002\u30028/30\u6642\u70b9\u3067\u306f\u300c\u6771\u4eac\u30ac\u30b91\u51464592\u5104\u5186\u300d\u300c\u5927\u962a\u30ac\u30b91\u51464732\u5104\u5186\u300d\u3068\u306a\u308a\u3001\u5927\u962a\u30ac\u30b9\u306e\u65b9\u304c\u4f01\u696d\u306e\u4fa1\u5024\u3068\u3057\u3066\u306f\u4e0a\u56de\u3063\u3066\u3044\u307e\u3059\u3002 https://t.co/03WKlk1ga5"
    },
    "9": {
      "comment": "\u73fe\u72b6\u3001\u5317\u95a2\u6771\u304c\u30ae\u30ea\u30ae\u30ea\u304b\u306a\u2026\u9759\u5ca1\u3042\u305f\u308a\u306e\u9060\u5f81\u306f\u96e3\u3057\u3044\u3057\u5ca1\u5d0e\u3082\u3082\u3046\u884c\u3051\u306a\u3044\u304b\u3082\u2026\u3002\u3002\u601d\u3048\u3070\u6240\u6ca2\u3067\u306e\u30af\u30e9\u30d6\u9078\u624b\u6a29\u306a\u3093\u3066\u968f\u5206\u3068\u30cd\u30c3\u30c8\u88cf\u306e\u3086\u3063\u305f\u308a\u30bd\u30d5\u30a1\u72ec\u5360\u3057\u3066\u5feb\u9069\u306b\u89b3\u308c\u305f\u3082\u306e\u3060\u2026\u90fd\u5e02\u5bfe\u62972\u6b21\u4e88\u9078\u3082\u3060\u3057\u3001\u30b9\u30dd\u30cb\u30c1\u3082\u2026\u897f\u6b662\u8ecd\u3068\u6771\u4eac\u30ac\u30b9\u306e\u6700\u521d\u306e\u5bfe\u6226\u3082\u30c9\u30fc\u30e0\u3060\u3063\u305f\u2026"
    },
    "10": {
      "comment": "\u300c\u4e7e\u592a\u304f\u3093\u300d\u65e5\u3005\u30b9\u30b1\u307e\u3068\u3081\u305f\u3084\u3064\u30dd\u30b1\u30c3\u30c8\u306b\u5165\u308c\u3066\u305f\u3084\u3064\u3001\u305d\u306e\u307e\u307e\u304c\u3063\u3064\u308a\u4e7e\u3044\u3066\u30d5\u30fc\u30c9\u306e\u4e0b\u3067\u56fa\u307e\u3063\u3066\u305f\u3002\u3002\u6b32\u3057\u3044\u2026\u3002\uff08\u4e00\u8ed2\u5bb6\u3057\u304b\u3060\u3081\u3068\u6771\u4eac\u30ac\u30b9\u306b\u8a00\u308f\u308c\u305f\uff09"
    },
    "11": {
      "comment": "\u672a\u6765\u3092\u652f\u3048\u308b\uff01\u6771\u4eac\u30ac\u30b9\u306e\u30c7\u30de\u30f3\u30c9\u30ec\u30b9\u30dd\u30f3\u30b9\u30b5\u30fc\u30d3\u30b9\u3068\u306f\uff1f\uff5cpvlabo2020 \u3002#\u6771\u4eac\u30ac\u30b9 #\u30c7\u30de\u30f3\u30c9\u30ec\u30b9\u30dd\u30f3\u30b9 #\u84c4\u96fb\u6c60 #\u518d\u751f\u53ef\u80fd\u30a8\u30cd\u30eb\u30ae\u30fc #\u30b5\u30b9\u30c6\u30ca\u30d3\u30ea\u30c6\u30a3 #IGNITURE #\u30a8\u30cd\u30eb\u30ae\u30fc\u52b9\u7387 #\u96fb\u529b\u4f9b\u7d66 #\u30b9\u30de\u30fc\u30c8\u30db\u30fc\u30e0 #\u30a8\u30b3\u30e9\u30a4\u30d5\u3002@solarpower2035 #note https://t.co/Ay0lWI2toD"
    },
    "12": {
      "comment": "\u300ehalftime\u300f\u3002\u30aa\u30fc\u30d3\u30c3\u30af\u30b7\u30fc\u30ac\u30eb\u30bavs.\u6771\u4eac\u30ac\u30b9\u3002#seacheer\u3002#\u30aa\u30fc\u30d3\u30c3\u30af\u30b7\u30fc\u30ac\u30eb\u30ba\u3002#\u30a2\u30e1\u30d5\u30c8 https://t.co/VmVVOZ6ZH5"
    },
    "13": {
      "comment": "\u3053\u308c\u306f\u3082\u3046\u3002\u6050\u6016\u306e\u6c99\u6c70\u3068\u3057\u304b...\ud83d\udca7\u3002((((\uff1b\uff9f\u0414\uff9f)))))))\u3002\u3002\u30a4\u30aa\u30f3\u30ab\u30fc\u30c9\u3002\u306a\u3093\u3066\u3002\u6301\u3063\u3066\u3082\u306a\u3044\u306e\u306b\u3002\u69d8\u3005\u306a\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u5c4a\u304f\u3057\u3002\u3002\u306a\u306b\u3088\u308a\u3002\u6642\u9593\u554f\u308f\u305a\u3002\u4e0d\u6109\u5feb\u306a\u306e\u3067\u3002\u3002@kita9.ed.jp\u3002\u62d2\u5426\u30e1\u30fc\u30eb\u306b\u767b\u9332\u3057\u3068\u3044\u305f\u3002\u3002\u30a2\u30c9\u30ec\u30b9\u304c\u304a\u304b\u3057\u3044\u3002Amazon\u3060\u3063\u305f\u308a\u3002\u6771\u4eac\u30ac\u30b9\u3001\u4f50\u5ddd\u6025\u4fbf\u3002\u3002\u3044\u308d\u3044\u308d\u3068\u9762\u5012\u304f\u3055\u3044\u306a\ud83e\udd23 https://t.co/Y7NuN2cnxQ"
    },
    "14": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306e\u30cf\u30a6\u30b9\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u306f\u5fd9\u3057\u3044\u3042\u306a\u305f\u306b\u304b\u308f\u3063\u3066\u304a\u3046\u3061\u3092\u30d4\u30ab\u30d4\u30ab\uff01\u3000\u300cPR\u300d https://t.co/C9KcyPH5oK"
    },
    "15": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u5f37\u3044\u306a\u30fc\u3002\u30aa\u30fc\u30d3\u30c3\u30af\u3068\u3069\u3063\u3053\u3044\u4f4d\u306b\u306a\u3063\u3066\u308b\u3002\u3002https://t.co/hBUNabjPHR"
    },
    "16": {
      "comment": "1\u5ea6\u4f7f\u3046\u3068\u624b\u653e\u305b\u306a\u3044 #\u30ac\u30b9\u8863\u985e\u4e7e\u71e5\u6a5f\u3002\u3002\u96fb\u6c17\u5f0f\u306e\u4e7e\u71e5\u6a5f\u3068\u6bd4\u3079\u308b\u3068\u3069\u3093\u306a\u9055\u3044\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304b\ud83e\udd14\u3002\u3002\u4ed5\u4e0a\u304c\u308a\u3084\u6642\u9593\u306a\u3069\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002 https://t.co/AV6ydSYNJn #\u6771\u4eac\u30ac\u30b9 #\u30a6\u30c1\u30b3\u30c8 #\u4e7e\u592a\u304f\u3093 #\u6642\u77ed\u5bb6\u96fb @Rinnai_Relax"
    },
    "17": {
      "comment": "\u307e\u305f\u2026\u3002\u6771\u4eac\u30ac\u30b9\u306e\u7bc0\u96fb\u30dd\u30a4\u30f3\u30c82\u500d\u306b\u306a\u308b\u3084\u3064\u3002\u6765\u305f\u306e2\u56de\u76ee\u3060\u3051\u3069\u3002\u306a\u3093\u3067\u524d\u56de\u3082\u4eca\u56de\u3082\u6708\u66dc\u306a\u3093\u3060\u3088\u3002\u6708\u66dc\u4f11\u307f\u3060\u304b\u3089\u7bc0\u96fb\u3042\u3093\u307e\u308a\u3067\u304d\u306a\u3044\u3002\u706b\u301c\u571f\u306b\u6765\u3066\u304f\u308c\u3088\u3002\u3053\u308c\u30e9\u30f3\u30c0\u30e0\u306a\u3093\u3067\u3057\u3087\uff1f"
    },
    "18": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u3055\u3093\u307f\u305f\u3044\u306a\u5927\u4f01\u696d\u304c\u3001\u4e16\u306b\u4e0d\u4fe1\u611f\u3092\u3070\u3089\u307e\u304f\u3088\u3046\u306a\u6587\u8a00\u3067\u5e83\u544a\u3059\u308b\u306e\u3084\u3081\u3066\u307b\u3057\u3044\u308f\u301c\ud83d\ude2b\ud83d\udeb0\u4e0b\u54c1\u3059\u304e\u308b\ud83e\udee2"
    },
    "19": {
      "comment": "2024\u79cb-1 vs.\u6771\u4eac\u30ac\u30b9 \u30b2\u30fc\u30e0\u30cf\u30a4\u30e9\u30a4\u30c8 https://t.co/jKj3GroDNf @YouTube\u3088\u308a"
    },
    "20": {
      "comment": "\uff3b\u65b0\u96fb\u529b\u306f\u4eca\uff3d\uff08\uff12\uff09\u6771\u6025\u30d1\u30ef\u30fc\u30fb\u6771\u4eac\u30ac\u30b9\uff0f\u9996\u90fd\u570f\u300c\u6700\u6fc0\u6226\u533a\u300d\u306e\u4e21\u96c4\u3002https://t.co/lHVOGSBVsn"
    },
    "21": {
      "comment": "@Hinata_nanokaho \u6771\u4eac\u30ac\u30b9\u306e\u30d7\u30e9\u30f3\u304c\u3042\u308b\u3088\u3002\u65b0\u96fb\u529b\u7cfb\u3082\u5b89\u3044\u304b\u3082\u3060\u3051\u3069\u4eca\u4e0d\u5b89\u5b9a\u3060\u304b\u3089\u3001\u907f\u3051\u305f\u65b9\u304c\u3044\u3044\u6c17\u304c\u3059\u308b\u3002\u697d\u5929\u3068\u304b\u305d\u3063\u3061\u7cfb\u306f\u6b63\u76f4\u308f\u304b\u3089\u306a\u3044\u3067\u3059\ud83e\udd7a\u3002\u6025\u304e\u3067\u306a\u3051\u308c\u3070\u5c11\u3057\u8abf\u3079\u3066\u307f\u308b\u3051\u3069\u3082"
    },
    "22": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306f\u30af\u30bd"
    },
    "23": {
      "comment": "\u3064\u308b\u3063\u3064\u308b\u3002\u3002\u3002CM \u3010\u7dbe\u91ce\u525b \u00d7 \u7dbe\u5c0f\u8def\u304d\u307f\u307e\u308d\u3011 \u6771\u4eac\u30ac\u30b9 \u30d0\u30ea\u30e5\u30fc\u30ea\u30fc\u30b9 https://t.co/cK8bfpENhi @YouTube\u3088\u308a"
    },
    "24": {
      "comment": "\u6691\u3044\u6642\u3053\u305d\u4f5c\u308a\u305f\u3044 #\u708a\u304d\u8fbc\u307f\u3054\u98ef \ud83c\udf5a\u3002\u3002#\u3068\u3046\u3082\u308d\u3053\u3057 \ud83c\udf3d\u306a\u3069\u306e\u65ec\u306e\u98df\u6750\u3084\u3002\u30a8\u30b9\u30cb\u30c3\u30af\u306a\u5473\u4ed8\u3051\u3067\u590f\u3089\u3057\u3044\u5473\u304c\u697d\u3057\u3081\u307e\u3059\ud83d\ude0b\u3002\u3002https://t.co/xEOaW4dD72\u3002#\u6771\u4eac\u30ac\u30b9 #\u30a6\u30c1\u30b3\u30c8 #\u590f\u30ec\u30b7\u30d4 #\u6642\u77ed\u30e1\u30b7"
    },
    "25": {
      "comment": "\u4eca\u65e5\u306f #\u9774\u306e\u65e5 \ud83d\udc60\u3002\u65b0\u3057\u3044\u9774\u3092\u8cb7\u3063\u305f\u3089\u3007\u3007\u30c6\u30fc\u30d7\u3092\u8cbc\u308b\u306e\u306f\u3042\u308a\uff1f\u3002\u3002\u9577\u6301\u3061\u3055\u305b\u308b\u30b3\u30c4\u306f\u30bd\u30fc\u30eb\u306b\u3042\u308b\u2728\ud83d\udc40\u3002\u30d7\u30ed\u306e\u6b63\u3057\u3044\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\ud83c\udf89\u3002\u3002https://t.co/x4xP31FlRs\u3002#\u6771\u4eac\u30ac\u30b9 #\u30a6\u30c1\u30b3\u30c8 #\u9774\u306e\u78e8\u304d\u65b9 #\u9774\u306e\u304a\u624b\u5165\u308c"
    },
    "26": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306e\u7bc0\u96fb\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u30671000\u5186\u5206\u306e\u30a2\u30de\u30ae\u30d5\u8cb0\u3063\u305f\u3002\u671f\u9650\u524d\u306b\u6c17\u3065\u3051\u3066\u826f\u304b\u3063\u305f\u308f\uff01"
    },
    "27": {
      "comment": "\u5609\u7a42\u9ad8\u6821\u2192\u5317\u4e5d\u5927\u2192\u6771\u4eac\u30ac\u30b9\u306b\u7d9a\u3044\u3066\u5b97\u50cf\u9ad8\u6821\u2192\u5317\u4e5d\u5927\u2192\u5927\u962a\u30ac\u30b9\u304b\u3002"
    },
    "28": {
      "comment": "\u3010\u30ec\u30e2\u30f3\u30ac\u30b9\u3011https://t.co/h2I8NtDSPk #\u7bc0\u7d04 #\u90fd\u5e02\u30ac\u30b9 #\u6771\u4eac\u30ac\u30b9\u3002\u6771\u4eac\u90fd\u3001\u795e\u5948\u5ddd\u770c\u3001\u57fc\u7389\u770c\u306b\u304a\u4f4f\u307e\u3044\u3067\u3002\u6771\u4eac\u30ac\u30b9\u306e\u90fd\u5e02\u30ac\u30b9\u3092\u3054\u5229\u7528\u4e2d\u306e\u65b9\uff1f\u3002[\u30ec\u30e2\u30f3\u30ac\u30b9]\u306e\u90fd\u5e02\u30ac\u30b9\u306f\u3002\u6771\u4eac\u30ac\u30b9\u306e\u4e00\u822c\u5951\u7d04\u306b\u6bd4\u3079\u3002\u57fa\u6e96\u5358\u4f4d\u6599\u91d1(\u5f93\u91cf\u6599\u91d1)\u304c\u3002\uff15\uff05\u5b89\u304f\u306a\u308a\u307e\u3059\u3088\uff01\u3002\u30d7\u30ec\u30df\u30a2\u30e0\u5272\u5f15\u3082\u3042\u308b\u306e\u3067\u3002\u4f7f\u7528\u91cf\u306e\u591a\u3044\u65b9\u306f\u5fc5\u898b\uff01"
    },
    "29": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306eQB\u306f\u76f8\u5909\u308f\u3089\u305a\u30b8\u30e3\u30de\u30fc\u30ab\u30b9\u30fb\u30e9\u30c3\u30bb\u30eb\u307f\u305f\u3044\u306a\u4f53\u578b\u3057\u3068\u308b\u306a"
    },
    "30": {
      "comment": "\u30d1\u30ea\u30fb\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u7b2c\uff14\u65e5\u306f\uff13\uff11\u65e5\u3001\u7af6\u6cf3\u7537\u5b50\uff15\uff10\u30e1\u30fc\u30c8\u30eb\u81ea\u7531\u5f62\uff08\u8996\u899a\u969c\u5bb3\uff33\uff11\uff11\uff09\u3067\u6728\u6751\u656c\u4e00\uff08\u6771\u4eac\u30ac\u30b9\uff09\u304c\u512a\u52dd\u3057\u305f\u3002\u3002https://t.co/UOtE7ypphQ"
    },
    "31": {
      "comment": "9531 \u6771\u4eac\u30ac\u30b9\u3002+21(0.58%) \u3002\u3002\u505c\u96fb\u6642\u306b\u30ac\u30b9\u306e\u5fc5\u8981\u6027\u3092\u518d\u8a8d\u8b58\u3057\u307e\u3057\u305f\u3002\u3002https://t.co/uDLKconEtH"
    },
    "32": {
      "comment": "9\u6708\u306e\u5b63\u7bc0\u6e6f\u306f #\u83ca\u6e6f \ud83d\udc90\u3002\u3002\u83ca\u306f\u751f\u306e\u307e\u307e\u4f7f\u3063\u3066\u3082OK\ud83d\ude46\u200d\u2640\ufe0f\u3002\u3068\u3063\u3066\u3082\u624b\u8efd\u306a\u5b63\u7bc0\u306e\u304a\u98a8\u5442\u3002\u4eca\u65e5\u306e #\u30d0\u30b9\u30bf\u30a4\u30e0 \u306b\u3044\u304b\u304c\u3067\u3059\u304b\uff1f\ud83d\udec0\u3002\u3002https://t.co/DyDytZUtxT\u3002#\u6771\u4eac\u30ac\u30b9 #\u30a6\u30c1\u30b3\u30c8 #\u4eca\u6708\u306e\u304a\u98a8\u5442 #\u5b63\u7bc0\u884c\u4e8b"
    },
    "33": {
      "comment": "@WCtcJBdXGSOogpC \u6771\u4eac\u96fb\u529b\u304b\u3089\u6771\u4eac\u30ac\u30b9\u306b\u8ee2\u8077\u3057\u305f\u5973\u3068\u306f\u4f55\u3088"
    },
    "34": {
      "comment": "\u4e94\u8f2a\u30a2\u30a4\u30b9\u30db\u30c3\u30b1\u30fc\u6700\u7d42\u4e88\u9078\u901a\u904e\uff08\u8981\u30b8\u30e3\u30a4\u30ad\u30ea\uff13\u9023\u767a\uff09\u3092\u8003\u3048\u308b\u3068\u3001\u3002\u30fb\u540d\u53e4\u5c4b\u30b0\u30e9\u30f3\u30d1\u30b9\u3002\u30fb\u6a2a\u6d5c\u30de\u30ea\u30ce\u30b9\u3002\u30fb\u30d9\u30eb\u30de\u30fc\u30ec\u5e73\u585a\u3002\u3092\uff13\u30bf\u30c6\u3057\u305f\u6771\u4eac\u30ac\u30b9\uff08JFL\uff09\u306e\u5b9f\u4f8b"
    },
    "35": {
      "comment": "#\u9632\u707d\u30b0\u30c3\u30ba \u4f55\u3092\u305d\u308d\u3048\u305f\u3089\u3088\u3044\u304b\u5206\u304b\u3089\u306a\u3044\u2026\u203c\ufe0f\u3002\u305d\u308c\u306a\u3089\u3001\u307e\u305a #\u30dd\u30ea\u888b \u304b\u3089\u6e96\u5099\u3092\ud83c\udfb5\u3002\u3002\u5b9f\u306f\u3001\u7acb\u6d3e\u306a\u707d\u5bb3\u5bfe\u7b56\u30b0\u30c3\u30ba\u3067\u3059\u26d1\ufe0f\u2728\u3002\u3042\u308b\u3068\u5b09\u3057\u30443\u7a2e\u985e\u306e\u30dd\u30ea\u888b\u3068\u3002\u6d3b\u7528\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\ud83c\udf92\u3002\u3002https://t.co/vkJfhcK0lR\u3002#\u6771\u4eac\u30ac\u30b9 #\u30a6\u30c1\u30b3\u30c8 #\u9632\u707d\u9031\u9593 #\u505c\u96fb\u5bfe\u7b56"
    },
    "36": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306f\u3001\u307b\u3093\u3068WHELEN\u304a\u5f97\u610f\u69d8\u3063\u3066\u611f\u3058 \u7b11\u3002\u3002\u4eca\u306e\u3068\u3053\u308d\u30bb\u30cd\u30bf\u30fc\u306e\u5c0f\u578b\u3092\u63a1\u7528\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u5727\u5012\u7684\u306b\u6771\u4eac\u30ac\u30b9\u3002"
    },
    "37": {
      "comment": "@x_azuk_x \u6771\u4eac\u30ac\u30b9\u958b\u6813\u6765\u305f\u3051\u3069\u30ac\u30b9\u306f\u30bb\u30fc\u30d5\u3060\u3063\u305f\u3088\ud83d\ude07\u3068\u3044\u3046\u304b\u3001\u4ed6\u306e\u90e8\u5c4b\u3082\u81ed\u304f\u306a\u304b\u3063\u305f\u308f\ud83e\udd23\u3002\u5168\u90e8\u78ba\u8a8d\u3057\u305f\ud83d\ude02"
    },
    "38": {
      "comment": "\u4eca\u671d\u306f\u30d6\u30ed\u30b0\u3092\u30ea\u30e9\u30a4\u30c8\u3002\u96fb\u6c17\u30fb\u30ac\u30b9\u696d\u306b\u304a\u3051\u308b\u9ad8\u914d\u5f53\u682a\u30922\u793e\u7d39\u4ecb\u3057\u305f\u8a18\u4e8b\u3067\u3059\u3002\u53d6\u308a\u4e0a\u3052\u305f\u9298\u67c4\u306f\u30029513_\u96fb\u6e90\u958b\u767a\u30029531_\u6771\u4eac\u30ac\u30b9\u3002\u3053\u308c\u3089\uff12\u793e\u3002\u753b\u50cf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u8ffd\u52a0\u3057\u305f\u308a\u6587\u7ae0\u304c\u308f\u304b\u308a\u306b\u304f\u304b\u3063\u305f\u3068\u3053\u308d\u3092\u6574\u3048\u307e\u3057\u305f\u3002\u6295\u8cc7\u306e\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002#\u6295\u8cc7\u3002\uff03\u671d\u6d3b\u3002#\u30d6\u30ed\u30b0\u3002https://t.co/7oe2fvVZPY"
    },
    "39": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u682a\u5f0f\u4f1a\u793e\u3068\u3001\u6771\u4eac\u96fb\u529b\u30a8\u30ca\u30b8\u30fc\u30d1\u30fc\u30c8\u30ca\u30fc\u682a\u5f0f\u4f1a\u793e\u304c\u3042\u3063\u3066\u3001\u304a\u306e\u304a\u306e\u304c\u96fb\u6c17\u3068\u30ac\u30b9\u3092\u3084\u3063\u3066\u3044\u308b\u3063\u3066\u3053\u3068\u304b\u3002\u3084\u3084\u3053\u3057\u3044\u306a"
    },
    "40": {
      "comment": "\u3042\u3068\u30e9\u30a4\u30aa\u30f3\u30ba\u306f\u307f\u3057\u3087\u30fc\u53d6\u308a\u9003\u304c\u3057\u305f\u3057\u305f\u3068\u304d\u306b\u307b\u304b\u30bb\u30f3\u30bf\u30fc\u306e\u5019\u88dc\u304c\u6771\u4eac\u30ac\u30b9\u4e2d\u5c3e\u3068\u304b\u77e5\u5ff5\u306b\u306a\u308b\u3057\u305d\u308c\u306a\u3089\u91d1\u5b50\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d1\u30fc\u3068\u3057\u3066\u3068\u3063\u3068\u304f\u306e\u3082\u30ea\u30ea\u30fc\u30d5\u3068\u3063\u3068\u304f\u3050\u3089\u3044\u306a\u3089\u3044\u3044\u304b\u3068\u601d\u3063\u3066\u305f\u3051\u3069\u307e\u3042\u79cb\u5c71\u5e30\u3063\u3066\u304f\u308b\u3057\u307f\u305f\u3044\u306a?"
    },
    "41": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u3068\u6771\u90a6\u30ac\u30b9\u306f\u3042\u308b\u306e\u306b\u5927\u962a\u30ac\u30b9\u306f\u7121\u304f\u3001\u95a2\u897f\u96fb\u529b\u304c\u3042\u308b\u306e\u3002\u4f55\u304b\u306e\u9670\u8b00\u304b\u306a\uff1f\uff1f\uff1f"
    },
    "42": {
      "comment": "\u3088\u3057\u3001\u304a\u90e8\u5c4b\u306e\u30b3\u30fc\u30c7\u30a3\u30cd\u30fc\u30c8\u3042\u308b\u7a0b\u5ea6\u6e08\u3093\u3060\u3089\u30a8\u30a2\u30b3\u30f3\u6e05\u6383\u983c\u3082\u3046\u3002\u6771\u4eac\u30ac\u30b9\u306e\u6e05\u6383\u306a\u3089\u4fe1\u7528\u3067\u304d\u305d\u3046\u3060\u3002"
    },
    "43": {
      "comment": "\u7af6\u6cf3\uff13\uff13\u6b73\u3001\u6728\u6751\u656c\u4e00\u304c\u300c\u91d1\u300d\u3000\uff15\uff10\u30e1\u30fc\u30c8\u30eb\u81ea\u7531\u5f62\u3002https://t.co/AqtlReTy8L\u3002\u30d1\u30ea\u30fb\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u7b2c\uff14\u65e5\u306e\uff18\u6708\uff13\uff11\u65e5\u3001\u7af6\u6cf3\u7537\u5b50\uff15\uff10\u30e1\u30fc\u30c8\u30eb\u81ea\u7531\u5f62\uff08\u8996\u899a\u969c\u5bb3\uff33\uff11\uff11\uff09\u306e\u6728\u6751\u656c\u4e00\uff08\uff13\uff13\uff09\uff1d\u6771\u4eac\u30ac\u30b9\uff1d\u304c\uff12\uff15\u79d2\uff19\uff18\u3067\u91d1\u30e1\u30c0\u30eb\u3092\u7372\u5f97\u3057\u305f\u3002"
    },
    "44": {
      "comment": "@ayqtsuji \u6771\u4eac\u30ac\u30b9\u306e\u96fb\u6c17\u3068\u30ac\u30b9\u30bb\u30c3\u30c8\u3063\u3066\u3053\u3068\u304b\u306a\uff1f\u3002\u30bb\u30c3\u30c8\u306f\u591a\u5c11\u5b89\u304f\u306a\u308b\u3051\u3069\u7d50\u5c40\u306f\u3069\u3053\u306e\u4f1a\u793e\u4f7f\u3063\u3066\u3082\u5909\u308f\u3089\u306a\u3044\u3088\u3046\u306a\u6c17\u3082\u3057\u3066\u3057\u307e\u3046"
    },
    "45": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306e\u7159\u63a2\u77e5\u6a5f\u3082\u3001\uff62\u3064\u3051\u308b\u306d\u301c\uff63\u3068\u306f\u8a00\u308f\u308c\u305f\u3051\u3069\u91d1\u984d\u306e\u8a71\u3055\u308c\u3066\u306a\u3044\u306e\u306b\u30ea\u30fc\u30b9\u6599\u53d6\u3089\u308c\u3066\u308b\u306e\u3088\u306a\u3002\u3082\u3057\u304b\u3057\u3066\u4eca\u304b\u3089\u3067\u3082\u4f55\u3068\u304b\u3067\u304d\u308b\u3093\u304b\u3053\u308c"
    },
    "46": {
      "comment": "@o2VseNrtPRwVAOF \u6771\u4eac\u30ac\u30b9\uff1f\u3000\u793e\u9577\u306f\u99ac\u9e7f\u4ee5\u5916\u306e\u4f55\u7269\u3067\u3082\u306a\u3044\u3060\u308d\u3046\u3002\u3002\u5927\u4f01\u696d\u306f\u5de8\u5927\u8239\u8236\u3068\u540c\u3058\u3067\u3001\u4e0a\u304c\u99ac\u9e7f\u3067\u3082\u5f53\u5206\u306e\u9593\u306f\u7d4c\u55b6\u306b\u5f71\u97ff\u306f\u51fa\u306a\u3044\u3002\u30ac\u30b9\u3068\u304f\u308c\u3070\u7336\u66f4\u305d\u3046\u3067\u3042\u308b\u3002"
    },
    "47": {
      "comment": "\u672a\u6765\u3092\u652f\u3048\u308b\uff01\u6771\u4eac\u30ac\u30b9\u306e\u30c7\u30de\u30f3\u30c9\u30ec\u30b9\u30dd\u30f3\u30b9\u30b5\u30fc\u30d3\u30b9\u3068\u306f\uff1f\u3002#\u6771\u4eac\u30ac\u30b9 #\u30c7\u30de\u30f3\u30c9\u30ec\u30b9\u30dd\u30f3\u30b9 #\u84c4\u96fb\u6c60 #\u518d\u751f\u53ef\u80fd\u30a8\u30cd\u30eb\u30ae\u30fc #\u30b5\u30b9\u30c6\u30ca\u30d3\u30ea\u30c6\u30a3 #IGNITURE #\u30a8\u30cd\u30eb\u30ae\u30fc\u52b9\u7387 #\u96fb\u529b\u4f9b\u7d66 #\u30b9\u30de\u30fc\u30c8\u30db\u30fc\u30e0 #\u30a8\u30b3\u30e9\u30a4\u30d5\u3002\u21d2 https://t.co/BVeF6JHt9J #\u30a2\u30e1\u30d6\u30ed @ameba_official\u3088\u308a"
    },
    "48": {
      "comment": "\u3010\u5b9f\u8a3c\u3011\u6771\u4eac\u30ac\u30b9\u3001\u6a2a\u6d5c\u5e02\u3067\u4e0b\u6c34\u9053\u65bd\u8a2d\u304b\u3089\u767a\u751f\u3059\u308b\u518d\u751f\u6c34\u3068\u6d88\u5316\u30ac\u30b9\u3092\u6d3b\u7528\u3057\u305fe-\u30e1\u30bf\u30f3\u88fd\u9020 https://t.co/IN7qwAxVgp"
    },
    "49": {
      "comment": "\u79c0\u9038\u3059\u304e\u308b\u3053\u3068\u3067\u304a\u99b4\u67d3\u307f\u306e\u6771\u4eac\u30ac\u30b9\u306e\u30e9\u30b8\u30aaCM\u3001\u98a8\u5442\u5165\u308b\u306e\u3092\u6e0b\u308b\u5bb6\u4eba\u3092\u7684\u78ba\u306b\u8a70\u3081\u3066\u98a8\u5442\u306b\u5165\u3089\u305b\u308b\u5973\u6027\u306e\u5974\u304c\u3042\u307e\u308a\u306b\u3082\u6211\u304c\u5bb6\u306b\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u30d2\u30c3\u30c8\u3057\u3059\u304e\u3066\u3001\u3002\u4eca\u65e5\u3064\u3044\u306b\u98a8\u5442\u6e0b\u3063\u305f\u3089\u300c\u4f55\uff1f\u3000\u4eca\u65e5\u3082\u6771\u4eac\u30ac\u30b9\uff1f\u300d\u3063\u3066\u8a00\u308f\u308c\u305f\u3002"
    },
    "50": {
      "comment": "NHK\u3067\u30a4\u30a8\u30ca\u30ac\u306e2\u5206\u9593PR\u304c\u6d41\u308c\u305f\u3093\u3060\u3051\u3069\u3002\u30c6\u30ec\u30d3\u753b\u9762\u306b\u7a81\u7136\u753a\u7530\u541b\u51fa\u3066\u304f\u308b\u3063\u3066\uff01\u3002\u3082\u3046\u5fc3\u81d3\u30c9\u30ad\u30c9\u30ad\ud83d\udc93\u6642\u304c\u6b62\u307e\u3063\u305f\ud83d\ude07\u3002\u6771\u4eac\u30ac\u30b9\u306eCM\u898b\u308c\u308b\u95a2\u6771\u306e\u7686\u3055\u3093\u3044\u3064\u3082\u5473\u308f\u3048\u308b\uff1f\u3044\u3044\u306a\u3041\u263a\ufe0f\u3002#\u753a\u7530\u5553\u592a"
    },
    "51": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306eCM\u826f\u3059\u304e\u2026\u6bce\u56de\u6ce3\u304f\u304b\u30b8\u30fc\u30f3\u3068\u304d\u3066\u308b"
    },
    "52": {
      "comment": "@1CZWiWBfJDuO67R \u6a2a\u6d5c\u3067\u6771\u4eac\u30ac\u30b9\u306b\u57cb\u8a2d\u7269\u8abf\u67fb\u306b\uff19\u6708\uff11\u65e5\u306b\u884c\u3063\u305f\u3089\u907f\u96e3\u8a13\u7df4\u306b\u53c2\u52a0\u3055\u305b\u3089\u308c\u305f\u4e8b\u304c\u3042\u308a\u307e\u3057\u305f\u3002(\u305d\u306e\u6642\u306f\u5348\u5f8c\u30a4\u30c1\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059)"
    },
    "53": {
      "comment": "\uff3c#\u65e5\u672c\u5927\u5b66 \u51fa\u8eab\u30a2\u30b9\u30ea\u30fc\u30c8\u60c5\u5831\ud83c\udf38\uff0f\u3002\u3002\u672c\u5b66\u51fa\u8eab\u306e #\u6728\u6751\u656c\u4e00 \u9078\u624b\uff08\u6587\u7406\u5b66\u90e8\u5352/\u6771\u4eac\u30ac\u30b9\uff09\u304c\u3001#\u30d1\u30ea\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af \u7af6\u6cf3\u7537\u5b5050m\u81ea\u7531\u5f62\uff08\u8996\u899a\u969c\u5bb3S11\uff09\u3067\u91d1\u30e1\u30c0\u30eb\u3092\u7372\u5f97\ud83e\udd47\u203c\ufe0f\u3002\u3002\u65e5\u672c\u65b0\u8a18\u9332\u3067\u306e\u30e1\u30c0\u30eb\u7372\u5f97\u3068\u306a\u308a\u307e\u3057\u305f\u3001\u6728\u6751\u9078\u624b\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u23f1\ud83c\udd95\ud83c\udf89\u3002\u3002@kimurakeiichi \u3002#NihonUniversity\u3002#\u30d1\u30e9\u6c34\u6cf3"
    },
    "54": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u3063\u3066\u3084\u3070\u305d\u3046\u306d\u3002\u4e00\u3064\u524d\u306e\u30ac\u30b9\u30e1\u30fc\u30bf\u30fc37\u7acb\u65b9\u30e1\u30fc\u30c8\u30eb\u3057\u304b\u4f7f\u3063\u3066\u306a\u3044\u306e\u306b\u3001\u307e\u305f\u30ac\u30b9\u30e1\u30fc\u30bf\u30fc\u53d6\u66ff\u306b\u306a\u3063\u305f\u3002\u61d0\u3092\u80a5\u3084\u3057\u3066\u308b\u304b\u3002\u8cc7\u672c\u5bb6\u3068\u653f\u6cbb\u5bb6\u5b98\u50da\u306f\u3042\u308c\u3053\u308c\u3068\u4fe1\u7528\u3067\u304d\u306a\u3044\u306d\u3002 https://t.co/wlmxIK9oWf"
    },
    "55": {
      "comment": "Start losing weight with the Dia de los Muertos Challenge!\u3002\u3002The Dia de los Muertos Virtual Challenge takes you on a 98mi(158km) circular journey, starting and ending in the heart of Oaxaca City.\u3002\u3002Sign up now!"
    },
    "56": {
      "comment": "\u30d1\u30ea2024\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u3002#\u6771\u4eac\u30ac\u30b9 \u30d1\u30e9\u6c34\u6cf3\ud83c\udfca\u2642\ufe0f #\u6728\u6751\u656c\u4e00 \u9078\u624b\u304c\u3002\u329750m\u30d5\u30ea\u30fc\u306b\u51fa\u5834\u3057 #\u91d1\u30e1\u30c0\u30eb \u3092\u7372\u5f97\u3057\u307e\u3057\u305f\uff01\u3002\u3000\u3002\u3082\u3046\u4e00\u7a2e\u76ee\u306e100\uff4d\u30d0\u30bf\u30d5\u30e9\u30a4\u306f\u3002\ud83d\udd38\u4e88\u9078: 9/6\uff08\u91d1\uff0918:25\uff5e\u9803\u3002\ud83d\udd38\u6c7a\u52dd: 9/7\uff08\u571f\uff093:04\uff5e\u9803\u3002\u3068\u306a\u308a\u307e\u3059\u3002\u5f15\u304d\u7d9a\u304d\u3054\u58f0\u63f4\u3092\u304a\u9858\u3044\u3057\u307e\u3059\uff01\u3002\u3002@kimurakeiichi\u3002#\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af https://t.co/jrPs7Uz77o"
    },
    "57": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u3055\u3093\u30cd\u30bf\u306b\u3057\u3066\u3059\u307f\u307e\u305b\u3093\u250fo  \u3061\u3083\u3093\u3068\u6708\u3005\u306e\u30ac\u30b9\u96fb\u6c17\u6599\u91d1\u304a\u652f\u6255\u3044\u3057\u307e\u3059\u3002#\u8d85\u30b9\u30bf\u30f3\u30d7\u796d\u3002#\u30b9\u30bf\u30f3\u30d7\u30a2\u30ec\u30f3\u30b8\u9078\u624b\u6a29\u3002#\u30d1\u30c3\u30c1\u30e7  #\u30e0\u30b8\u30fc\u30ca https://t.co/CBI53eSQ95"
    },
    "58": {
      "comment": "\u3010\u30d7\u30ec\u30b9\u30ea\u30ea\u30fc\u30b9\u3011\u696d\u52d9\u6642\u9593\u306e20\uff05\u3092\u30d9\u30f3\u30c1\u30e3\u30fc\u306b\u53c2\u753b\u3059\u308b\u300cside project\u300d\u306e\u7b2c4\u671f\u304c\u958b\u59cb\uff01IHI\u3001\u65ed\u5316\u6210\u3001KDDI\u3001\uff33\uff2f\uff2d\uff30\uff2f\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9\u3001\u6771\u4eac\u30ac\u30b9\u3001\u65e5\u672c\u7279\u6b8a\u9676\u696d\u3001\u65e5\u672c\u90f5\u4fbf\u3001\u962a\u6025\u962a\u795e\u4e0d\u52d5\u7523\u306e8\u793e36\u540d\u306e\u5927\u4f01\u696d\u4eba\u6750\u304c\u3001\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d727\u793e\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30b9\u30bf\u30fc\u30c8\u3057\u307e\u3057\u305f\uff01 https://t.co/3n72VvmK4x"
    },
    "59": {
      "comment": "\u30a8\u30cd\u30d5\u30a1\u30fc\u30e0 \u306b\u306f\u671f\u5f85\u3057\u3066\u305f\u3051\u3069\u3001\u6771\u4eac\u30ac\u30b9\u306e\u3084\u308b\u6c17\u306e\u306a\u3055\u3092\u898b\u308b\u9650\u308a\u96e3\u3057\u3044\u306e\u304b\u3082\u306a\u3002\u3002\u306a\u3093\u3067\u71c3\u6599\u96fb\u6c60\u58f2\u3089\u306a\u3044\u3067\u3001\u30c8\u30a4\u30ec\u3084\u84c4\u96fb\u6c60\u58f2\u3063\u3066\u3093\u306e\uff1f\u3002\u304a\u524d\u4f55\u5c4b\u3060\u3088\ud83d\ude13\u3002"
    },
    "60": {
      "comment": "\u7af6\u6cf3\u7537\u5b5050m\u81ea\u7531\u5f62\u30fb\u8996\u899a\u969c\u5bb3\u306e\u30af\u30e9\u30b9\u3067\u898b\u4e8b\u91d1\u30e1\u30c0\u30eb\ud83e\udd47\u3092\u7372\u5f97\u3057\u305f #\u6728\u6751\u656c\u4e00 \u9078\u624b\uff08\u6771\u4eac\u30ac\u30b9\uff09\u3002\u30029/14\uff08\u571f\uff0915:00-15:30 @\u6771\u4eac\u30c9\u30fc\u30e0\u30b7\u30c6\u30a3\u3002\u300c\u6771\u4eac2025\u4e16\u754c\u9678\u4e0a 1 Year To Go!\u300d\u306b\u53c2\u52a0\u4e88\u5b9a\u2763\ufe0f\u3002\u3002#Paris2024 #Paralympics \u3092\u7d42\u3048\u3066\u306e\u611f\u60f3\u3084\u3001\u65b0\u305f\u306a\u6311\u6226\u306b\u5bfe\u3059\u308b\u601d\u3044\u3092\u8a9e\u308a\u307e\u3059\u2728\u304a\u697d\u3057\u307f\u306b\ud83d\ude4c"
    },
    "61": {
      "comment": "\u300c\u50b5\u52d9\u8d85\u904e\u3067\u3082\u554f\u984c\u306a\u3044\u300d\u82f1\u30aa\u30af\u30c8\u30d1\u30b9\u30a8\u30ca\u30b8\u30fc\u3001\u6771\u4eac\u30ac\u30b9\u7cfb\u65b0\u96fb\u529b\u304c\u8a9e\u308b\u6226\u7565\u3068\u81ea\u7531\u5316\u306e\u969c\u58c1\uff5cBUSINESS\u00a0INSIDER https://t.co/cP9VkW4FDV @BIJapan\u3088\u308a"
    },
    "62": {
      "comment": "\ud83c\udf0d\ud83e\udd1d\u3010\u5c0f\u91d1\u4e95\u5e02\u3068\u6771\u4eac\u30ac\u30b9\u304c\u300c\u30ab\u30fc\u30dc\u30f3\u30cb\u30e5\u30fc\u30c8\u30e9\u30eb\u306e\u307e\u3061\u3065\u304f\u308a\u300d\u3067\u9023\u643a\uff01\u3011\ud83d\udcdc\u27282024\u5e747\u670822\u65e5\u3001\u5c0f\u91d1\u4e95\u5e02\u3068\u6771\u4eac\u30ac\u30b9\u306f\u30012050\u5e74\u307e\u3067\u306bCO2\u6392\u51fa\u5b9f\u8cea\u30bc\u30ed\u3092\u76ee\u6307\u3059\u300c\u30bc\u30ed\u30ab\u30fc\u30dc\u30f3\u30b7\u30c6\u30a3\u300d\u5ba3\u8a00\u3092\u63a8\u9032\u3059\u308b\u305f\u3081\u306e\u9023\u643a\u5354\u5b9a\u3092\u7de0\u7d50\u3057\u307e\u3057\u305f\u3002\u6301\u7d9a\u53ef\u80fd\u306a\u672a\u6765\u306b\u5411\u3051\u305f\u5927\u304d\u306a\u4e00\u6b69\u3067\u3059\u3002\u203b\u8a73\u7d30\u306f\u30ea\u30d7\u6b04\u3078\u2193 https://t.co/SA7JoQvMk4"
    },
    "63": {
      "comment": "If you have a mouse, play this game for 1 minute and see why everyone is addicted."
    },
    "64": {
      "comment": "\u79c1\u306f\u3001\u6771\u4eac\u30ac\u30b9\u3001\u30b3\u30b9\u30e2\u96fb\u6c17\u3067\u3044\u304d\u307e\u3059\uff01\u3002\u3002\uff2e\uff35\uff32\uff2f\u5149\u306f\u30bd\u30cd\u30c3\u30c8\u3068\u306f\u9055\u3046\u306e\u304b\u306b\u3083\u2026\ud83e\udd7a\u2049\ufe0f\ud83d\udca6"
    },
    "65": {
      "comment": "9\u67081\u65e5\uff08\u65e5\uff09\u3001\u30d1\u30ea\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u306e\u6c34\u6cf3\u7537\u5b5050m\u81ea\u7531\u5f62\uff08S11\u30fb\u5168\u76f2\uff09\u3067\u3001\u6ecb\u8cc0\u770c\u51fa\u8eab\u306e #\u6728\u6751\u656c\u4e00 \u9078\u624b\uff08\u6771\u4eac\u30ac\u30b9\uff09\u304c\u81ea\u8eab\u306e\u6301\u3064\u65e5\u672c\u8a18\u9332\u30920\u79d207\u66f4\u65b0\u3059\u308b25\u79d298\u306e\u30bf\u30a4\u30e0\u3067 #\u91d1\u30e1\u30c0\u30eb \u3092\u7372\u5f97\u3057\u307e\u3057\u305f\ud83e\udd47\u3002\u524d\u56de\u306e\u6771\u4eac\u5927\u4f1a\u306b\u7d9a\u304f2\u5927\u4f1a\u9023\u7d9a\u91d1\u30e1\u30c0\u30eb\u7372\u5f97\u306e\u5feb\u6319\u3092\u6210\u3057\u9042\u3052\u305f\u6728\u6751\u9078\u624b\u3001\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\ud83c\udf89\ud83c\udf89 https://t.co/XUbDLXlBFa"
    },
    "66": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u304b\u3089\u300e\u6700\u8fd1\u3001\u77e5\u3089\u306a\u3044\u5185\u306b\u30ac\u30b9\u4f1a\u793e\u304c\u5207\u308a\u66ff\u308f\u3063\u3066\u3044\u308b\u2026\u3068\u3044\u3046\u4e8b\u4f8b\u304c\u3042\u308a\u307e\u3057\u3066\u300f\u306a\u3069\u3068\u96fb\u8a71\u304c\u6765\u305f\u3002\u307f\u3093\u306a\u5b89\u3044\u4f1a\u793e\u306b\u4e57\u308a\u63db\u3048\u3066\u308b\u3060\u3051\u3067\u306f\uff1f\u6771\u4eac\u96fb\u529b&amp;\u6771\u4eac\u30ac\u30b9\u306f\u3082\u3046\u30e1\u30ea\u30c3\u30c8\u306a\u3044\u3002\u3002\u3002\u96fb\u6c17\u30fb\u30ac\u30b9\u898b\u76f4\u3057\u30b5\u30a4\u30c8\u3002https://t.co/KCjamcHdOV"
    },
    "67": {
      "comment": "\u25e2\u25e4\u7b2c48\u56de #\u5168\u65e5\u672c\u30af\u30e9\u30d6\u91ce\u7403\u9078\u624b\u6a29 \u25e2\u25e4\u3002\u30af\u30e9\u30d6\u30c1\u30fc\u30e0\u65e5\u672c\u4e00\u3092\u304b\u3051\u308b\u6226\u3044\u3002\u6e96\u6c7a\u52dd\u307e\u3082\u306a\u304f\u30d7\u30ec\u30fc\u30dc\u30fc\u30eb\uff01\u26be\u3002\u3002\u89e3\u8aac\u306f\u5143 #\u6771\u4eac\u30ac\u30b9 \u76e3\u7763\u306e #\u83ca\u6c60\u58ee\u5149 \u3055\u3093\u3002\u5b9f\u6cc1\u306f #\u77e2\u91ce\u5409\u5f66 \u3055\u3093\u3002\u3002\u25a0\u6e96\u6c7a\u52dd\ud83d\udd25\u3002\u7b2c1\u8a66\u5408 8:30\u958b\u59cb\u4e88\u5b9a\u3002#\u30b7\u30e7\u30a6\u30ef\u30b3\u30fc\u30dd\u30ec\u30fc\u30b7\u30e7\u30f3\u3002vs\u3002#\u30a8\u30d5\u30b3\u30e0BC\u3002\u3002\u6bce\u65e5\u65b0\u805e\u30c7\u30b8\u30bf\u30eb\u5185\u7279\u8a2d\u30b5\u30a4\u30c8\u3067 https://t.co/OrSIPg6THC"
    },
    "68": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u304c\u30af\u30e9\u30fc\u30b1\u30f3\u3068\u30af\u30e9\u30fc\u30b1\u30f3\u30d5\u30ec\u30c3\u30af\u30b9\u3092\u5c0e\u5165\u3057\u3066\u3044\u305f\u306e\u306f\u77e5\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3002\u3002\u300c\u50b5\u52d9\u8d85\u904e\u3067\u3082\u554f\u984c\u306a\u3044\u300d\u82f1\u30aa\u30af\u30c8\u30d1\u30b9\u30a8\u30ca\u30b8\u30fc\u3001\u6771\u4eac\u30ac\u30b9\u7cfb\u65b0\u96fb\u529b\u304c\u8a9e\u308b\u6226\u7565\u3068\u81ea\u7531\u5316\u306e\u969c\u58c1 https://t.co/ZyQOxHxyCn"
    },
    "69": {
      "comment": "#\u6a2a\u6d5c\u5e02\u3068\u6771\u4eac\u30ac\u30b9 \u304c\u9023\u643a\u3057\u3066\u3001\u4e0b\u6c34\u9053\u3092\u8cc7\u6e90\u3068\u3057\u305fe-\u30e1\u30bf\u30f3\u3092\u88fd\u9020\u3059\u308b\u5b9f\u8a3c\u304c8/29\u304b\u3089\u958b\u59cb\u3055\u308c\u307e\u3057\u305f\u3002\u3002\u6a2a\u6d5c\u5e02\u5317\u90e8\u4e0b\u6c34\u9053\u30bb\u30f3\u30bf\u30fc\u3067\u767a\u751f\u3059\u308b\u518d\u751f\u6c34\u3068\u6d88\u5316\u30ac\u30b9\u3092\u6771\u4eac\u30ac\u30b9\u306e\u8a2d\u5099\u306b\u8f38\u9001\u3057\u3001\u6c34\u7d20\u3084e-\u30e1\u30bf\u30f3\u3092\u751f\u6210\u3057\u307e\u3059\u3002 https://t.co/BqD0GcDsHY"
    },
    "70": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306e\u30cf\u30a6\u30b9\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u306f\u5fd9\u3057\u3044\u3042\u306a\u305f\u306b\u304b\u308f\u3063\u3066\u304a\u3046\u3061\u3092\u30d4\u30ab\u30d4\u30ab\uff01\u3000\u300cPR\u300d https://t.co/C9KcyPH5oK"
    },
    "71": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306e\u7bc0\u96fb\u30bf\u30a4\u30e0\u306f\u5168\u7136\u7bc0\u96fb\u30bf\u30a4\u30e0\u3058\u3083\u306a\u3044"
    },
    "72": {
      "comment": "\u4eca\u9803\u96fb\u6c17\u4ee3\u306e\u9ad8\u304b\u3063\u305f\u539f\u56e0\u3092\u7406\u89e3\u3002\u96fb\u6e90\u8abf\u9054\u7b49\u8abf\u6574\u984d\u3063\u306623\u5e746\u6708\u304b\u3089\u4e0a\u4e57\u305b\u3055\u308c\u3066\u305f\u306e\u306d\u2025\u3002\u958b\u59cb\u5f8c\u306b\u3067\u3093\u304d\u5951\u7d04\u3057\u305f\u4eba\u306f\u5f71\u97ff\u306a\u3044\u3051\u3069\u65e7\u30d7\u30e9\u30f3\u5951\u7d04\u306f\u305d\u306e\u307e\u307e\u81ea\u52d5\u5909\u66f4\u306a\u3057\u30671\u5e74\u3061\u3087\u3044\u3067\u7d042.5\u4e07\u304f\u3089\u3044\u9ad8\u304f\u6255\u3063\u3066\u305f\u3063\u307d\u3044\u3002\u5909\u66f4\u624b\u7d9a\u304d\u5b8c\u4e86\u306f1.5\u30f6\u6708\u5f8c\u306a\u3069\u3002au\u3067\u3093\u304d\u304b\u3089\u6771\u4eac\u30ac\u30b9\u306b\u4e57\u308a\u63db\u3048\u3088\u3046\u304b\u306a\u2025"
    },
    "73": {
      "comment": "\u3010\u6d3b\u7528\u4e8b\u4f8b\u2461\u3011\u3002\u6771\u4eac\u30ac\u30b9\u6240\u5c5e #\u52a0\u85e4\u96c5\u6a39 \u9078\u624b\u3088\u308a\u5f0a\u793e\u30a2\u30fc\u30e0\u30b9\u30ea\u30fc\u30d6\u3092\u4f7f\u7528\u3057\u305f\u5199\u771f\u3092\u9802\u304d\u307e\u3057\u305f\ud83d\ude47\u200d\u2642\ufe0f\u3002#\u65e9\u5b9f \u6642\u4ee3\u3042\u306e\u6e05\u5bae\u9078\u624b\u3068\u7532\u5b50\u5712\u306b\u51fa\u5834\ud83c\udfdf\u3002#\u6771\u4eac\u30ac\u30b9 \u3055\u3093\u306f10\u65e5(\u706b)\u306b\u5927\u7530\u30b9\u30bf\u30b8\u30a2\u30e0\u3067\u7b2c49\u56de\u793e\u4f1a\u4eba\u91ce\u7403\u65e5\u672c\u9078\u624b\u6a29\u5927\u4f1a\u95a2\u6771\u4ee3\u8868\u6c7a\u5b9a\u6226\u521d\u6226\u306e\u4e88\u5b9a\u3067\u3059\ud83d\udd25\u3002\u5fdc\u63f4\u3057\u3066\u307e\u3059\ud83d\udce3\u3002#\u793e\u4f1a\u4eba\u91ce\u7403  #\u30b9\u30dd\u30fc\u30c4 #\u91ce\u7403 https://t.co/k9pVJbr6Ta"
    },
    "74": {
      "comment": "\u30c9\u30e9\u30de\u300c#\u30ec\u30e2\u30f3\u306e\u5929\u4f7f\u300d\u3002\u7b2c4\u8a71 #\u30ed\u30b1\u5730 \u305d\u306e2\u3002#\u9752\u6728\u82f1\u7f8e\u3002\u6771\u4eac\u90fd\u4e16\u7530\u8c37\u533a\u5317\u6ca22\u4e01\u76ee\u3002\u5bfe\u6bd4\u753b\u50cf\u306f\u30b9\u30c8\u30ea\u30fc\u30c8\u30d3\u30e5\u30fc\u3088\u308a\u5f15\u7528\u30021\u679a\u76ee\u306e\u300c\u5df4\u5c4b\u300d\u306f\u73fe\u5b58\u30013\u679a\u76ee\u306e\u300c\u3064\u304f\u3057\u3084\u300d\u300c\u6771\u4eac\u30ac\u30b9\u300d\u306f\u5730\u56f3\u3067\u78ba\u8a8d\u3002\u30d1\u30a4\u30ed\u30c3\u30c8\u842c\u5e74\u7b46\u306e\u5e97\u8217\u306f\u672a\u78ba\u8a8d https://t.co/NoKVks1rTr"
    },
    "75": {
      "comment": "The beautiful and heartwarming Tchia by @awaceb is out now on Nintendo Switch! \u3002\u3002\ud83c\udfdd\ufe0f Embark on a tropical adventure with lush islands, sandy beaches, and dense jungles\u3002\u3002\ud83c\udfb6 Use Tchia's soul-jumping ability to control animals and objects, play a ukulele to trigger events\u3002\u3002\ud83e\udd80"
    },
    "76": {
      "comment": "\u3010\u5730\u30c7\u30b8\u53165\u5e74\u3011\u653e\u9001\u7981\u6b62\u3068\u304b\u306b\u306a\u3063\u305fCM\u96c6\u30102011\uff5e2016\u3011 https://t.co/9nAun8FvQ6 @YouTube\u3088\u308a \u3000\u3053\u306e\u6642\u671f\u306e\u6771\u4eac\u30ac\u30b9\u306e\u30c9\u30e9\u30de\u98a8\uff43\uff4d\u306f\u3088\u304f\u51fa\u6765\u3066\u305f\u3088\u306a\u3002\uff43\uff4d\u306f\u3088\u304f\u51fa\u6765\u3059\u304e\u3066\u3082\u30af\u30ec\u30fc\u30e0\u6765\u308b\u4e16\u754c\u3002\u30de\u30c3\u30af\u306e\u30ac\u30ad\u304c\u3046\u308b\u3055\u3044\u306e\u306f\u4eca\u898b\u3066\u3082\u9177\u3044\u3002"
    },
    "77": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u3002Wynand Grassmann\u9078\u624b https://t.co/rO5wymRZB1"
    },
    "78": {
      "comment": "@hitomi_140000 \u3067\u3059\u3067\u3059\uff01\u6628\u65e5\u3001\u63db\u6c17\u3067\u5341\u5206\u3060\u3063\u305f\u3063\u307d\u3044\u306e\u306b\u51b7\u623f\u3064\u3051\u3066\u5bdd\u3061\u3083\u3063\u3066\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u6771\u4eac\u30ac\u30b9\u306e\u96fb\u6c17\u3092\u4f7f\u3046\u306e\u3082\u521d\u3081\u3066\u3060\u3057\u3001\u8acb\u6c42\u66f8\u304c\u697d\u3057\u307f\u3067\u3059\ud83d\ude06"
    },
    "79": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u3002Jake Pappin\u9078\u624b\u300222\u6b73\u2026\ud83d\ude33\uff1f\u82e5\u3044\uff01 https://t.co/ahFGaqAQtw"
    },
    "80": {
      "comment": "\u30ab\u30fc\u30dc\u30f3\u30cb\u30e5\u30fc\u30c8\u30e9\u30ebLNG\u30d0\u30a4\u30e4\u30fc\u30ba\u30a2\u30e9\u30a4\u30a2\u30f3\u30b9\u3082\u3059\u304b\u3055\u305a\u540d\u79f0\u5909\u66f4\u3092\u884c\u3044\u3001\u4e3b\u5e79\u4f1a\u793e\u306e\u6771\u30ac\u30b9\u3082\u3001\u4f75\u305b\u3066\u767a\u8868\u3002\u3002\u3002https://t.co/Gj5Q6ix3z1\u3002\u3002\u30ab\u30fc\u30dc\u30f3\u30af\u30ec\u30b8\u30c3\u30c8\u3092\u6d3b\u7528\u3057\u305f\u90fd\u5e02\u30ac\u30b9\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u306e\u7dcf\u79f0\u300c\u30ab\u30fc\u30dc\u30f3\u30aa\u30d5\u30bb\u30c3\u30c8\u90fd\u5e02\u30ac\u30b9\u300d\u306e\u4f7f\u7528\u958b\u59cb\u306b\u3064\u3044\u3066 | \u6771\u4eac\u30ac\u30b9 https://t.co/WhzNTCabwk"
    },
    "81": {
      "comment": "9\u67083\u65e5( \u2018\u4eba\u2019 ) \u306e #\u30d1\u30c3\u30c1\u30e7\u65e5\u8a18\ud83d\udcdd\u3002\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u3002\u9ad8\u3044\u30de\u30af\u30e9\u304c\u3002\u597d\u304d\u306a\u306e\u3002\u3002\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u3002\u3000\u30029\u67083\u65e5\u306f #\u3050\u3063\u3059\u308a\u306e\u65e5 \uff01\u3002\u3000\u3002#\u6771\u4eac\u30ac\u30b9\u306e\u30cf\u30a6\u30b9\u30af\u30ea\u30fc\u30cb\u30f3\u30b0 \u3067\u306f\u3001\u3002#\u30de\u30c3\u30c8\u30ec\u30b9\u30af\u30ea\u30fc\u30cb\u30f3\u30b0 \u30929/10\u307e\u3067\u671f\u9593\u9650\u5b9a\u8ca9\u58f2\u4e2d\uff01\u3002\u305c\u3072\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u2728\u3002\u3000\u3002\u25bc\u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3002https://t.co/SGY3hCryZb https://t.co/ltFpDzRvki"
    },
    "82": {
      "comment": "\u72ec\u308a\u8a0011560\u2626\ufe0f9/14FC\u6771\u4eacvs\u540d\u53e4\u5c4b\u6226\u56fd\u7acb\u306bSPECIAL LIVE\uff1dLOVE\u6765\u308b\u3093\u3060\u306d\u301c\u30022024\u660e\u6cbb\u5b89\u7530J1\u30ea\u30fc\u30b0 \u7b2c30\u7bc0 vs \u540d\u53e4\u5c4b\u30b0\u30e9\u30f3\u30d1\u30b919:00\u30ad\u30c3\u30af\u30aa\u30d5\u56fd\u7acb\u7af6\u6280\u5834)\u306b\u304a\u3044\u3066\u3001\u300e\u6771\u4eac\u30ac\u30b9 Day\u300f\u306e\u958b\u50ac\u3092\u8a18\u5ff5\u3057\u5973\u6027\u4eba\u6c17\u30a2\u30a4\u30c9\u30eb\u30b0\u30eb\u30fc\u30d7\u300c\uff1dLOVE\u300d\u304c\u6765\u5834\u3057\u30cf\u30fc\u30d5\u30bf\u30a4\u30e0\u306bSPECIAL LIVE\uff01\u51c4\u304f\u697d\u3057\u307f\u301c\uff01\u30ad\u30e9\u30ea\u30f3\u2728"
    },
    "83": {
      "comment": "\u300e\u4e95\u4e0a\u5b89\u6cbb\u751f\u8a95160\u5468\u5e74\u8a18\u5ff5\u3000\u60c5\u666f\u306e\u7d75\u5e2b\u304c\u307f\u3064\u3081\u305fModern times\u300c\u30ac\u30b9\u71c8\u3068\u3082\u308b\u6771\u4eac\u98a8\u666f\u300d\u300f\u3000\u30ac\u30b9\u30df\u30e5\u30fc\u30b8\u30a2\u30e0\u3002\u3002\u30ac\u30b9\u71c8\u306e\u3042\u308b\u8857\u3000\u3002\u95c7\u591c\u306e\u6697\u3055\u3000\u3042\u304b\u308a\u306b\u7167\u3089\u3055\u308c\u308b\u4eba\u3005\u3002\u3002\u5efa\u7269\u306f\u660e\u6cbb42\u5e74\u306b\u6587\u4eac\u533a\u672c\u90f7\u306b\u5efa\u3066\u3089\u308c\u305f\u6771\u4eac\u30ac\u30b9\u306e\u51fa\u5f35\u6240\u3092\u79fb\u8a2d\u5fa9\u5143\u3002\u3002\u9e7f\u9cf4\u9928\u306e\u30ac\u30b9\u706f\u3092\u306f\u3058\u3081\u3068\u3059\u308b\u5c55\u793a\u3084\u70b9\u706f\u5b9f\u6f14 https://t.co/i7EfAuoYgV"
    },
    "84": {
      "comment": "\ud83c\udf2c\ufe0f\u6771\u4eac\u30ac\u30b9\u306f\u30012024\u5e74\u4e2d\u306b\u6d6e\u4f53\u5f0f\u6d0b\u4e0a\u98a8\u529b\u767a\u96fb\u4e8b\u696d\u306b\u672c\u683c\u53c2\u5165\u3059\u308b\u3053\u3068\u3092\u767a\u8868\u3057\u307e\u3057\u305f\ud83c\udf0a\u26a1\u4e16\u754c\u7684\u306b\u6ce8\u76ee\u3055\u308c\u308b\u518d\u751f\u53ef\u80fd\u30a8\u30cd\u30eb\u30ae\u30fc\u5206\u91ce\u306b\u304a\u3051\u308b\u91cd\u8981\u306a\u4e00\u6b69\u3067\u3059\ud83c\udf0d\u2728\u30dd\u30eb\u30c8\u30ac\u30eb\u3067\u6d6e\u4f53\u5f0f\u6d0b\u4e0a\u98a8\u529b\u767a\u96fb\u3092\u7a3c\u50cd\u3055\u305b\u3066\u3044\u308b\u30a6\u30a4\u30f3\u30c9\u30d7\u30e9\u30b9\u793e\u306e\u682a\u5f0f\u3092\u7d042\u5272\u53d6\u5f97\u3057\u3001\u7d4c\u9a13\u3068\u77e5\u8b58\u3092\u3055\u3089\u306b\u6df1\u3081\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\ud83d\udcbc\ud83d\udca1\u203b\u8a73 https://t.co/LUiOqLOpBr"
    },
    "85": {
      "comment": "\u4e0b\u6c34\u9053\u8cc7\u6e90\u3001\u30e1\u30bf\u30f3\u88fd\u9020\u306b\u6d3b\u7528\u3000\u6a2a\u6d5c\u5e02\u3068\u6771\u4eac\u30ac\u30b9\u304c\u5b9f\u8a3c\u958b\u59cb(\u6bce\u65e5\u65b0\u805e)\u3002#Yahoo\u30cb\u30e5\u30fc\u30b9\u3002https://t.co/JjtoSVLjhK"
    },
    "86": {
      "comment": "@7ciaod \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\u3002\u6771\u4eac\u30ac\u30b9\u96fb\u8a71\u3057\u305f\u3089\u8272\u3005\u6559\u3048\u3066\u304f\u308c\u307e\u3057\u305f"
    },
    "87": {
      "comment": "\u30af\u30c3\u30af\u30d1\u30c3\u30c9UI\u5909\u308f\u3063\u3066\u308b\u2026\uff01\u3002\u30b7\u30f3\u30d7\u30eb\u2026\uff01\u3002\u524d\u306e\u3067\u826f\u304b\u3063\u305f\u3093\u3060\u304c\u3002\u3002\u30af\u30c3\u30af\u30d1\u30c3\u30c9\u306f\u8ab2\u91d1\u3057\u3066\u308b\u3093\u3060\u3051\u3069\uff08\u6614\u6771\u4eac\u30ac\u30b9\u306e\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u3067\u7121\u6599\u3060\u3063\u305f\u6642\u671f\u304c\u3042\u308a\u305d\u306e\u307e\u307e\u7d99\u7d9a\uff09\u4f7f\u3044\u306b\u304f\u304b\u3063\u305f\u3089\u3084\u3081\u3088\u3046\u2026\u3002\u6700\u8fd1\u306f\u3042\u304b\u308a\u3055\u3093\u3084\u3086\u308a\u3055\u3093\u306e\u30ec\u30b7\u30d4\u672c\u3084\u30c4\u30a4\u30fc\u30c8\u691c\u7d22\u3067\u3051\u3063\u3053\u3046\u4e8b\u8db3\u308a\u3066\u308b\u3057"
    },
    "88": {
      "comment": "\u3010\u65e5\u672c\u7dd1\u8336\u30bb\u30f3\u30bf\u30fc\u00d7\u6771\u4eac\u30ac\u30b9\u3011\u9b54\u6cd5\u306e\u3072\u3068\u632f\u308a\u300c\u30af\u30ec\u30a4\u30b8\u30fc\u30bd\u30eb\u30c8\u300d\u3067\u5f69\u308b\uff01\u30cf\u30ed\u30a6\u30a3\u30f3 ... https://t.co/Ohc5oOk4JN"
    },
    "89": {
      "comment": "\u65e5\u672c\u30ac\u30b9\u5354\u4f1a\u304c\u540d\u79f0\u3092\u8a2d\u5b9a\u3057\u305f\u3053\u3068\u3092\u53d7\u3051\u305f\u30e1\u30cb\u30e5\u30fc\u306a\u3093\u3060\u3051\u3069\u3001\u500b\u4eba\u7684\u306b\u306f\u3001\u3046\u301c\u3080\u3063\u3066\u611f\u3058\u3002\u3002\u3002\u78ba\u304b\u306b\u3001\u6e29\u5bfe\u6cd5\u306e\u5831\u544a\u3067\u306f\u4f7f\u7528\u3067\u304d\u308b\u3051\u3069\u3002\u3002\u30ab\u30fc\u30dc\u30f3\u30af\u30ec\u30b8\u30c3\u30c8\u3092\u6d3b\u7528\u3057\u305f\u90fd\u5e02\u30ac\u30b9\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u306e\u7dcf\u79f0\u300c\u30ab\u30fc\u30dc\u30f3\u30aa\u30d5\u30bb\u30c3\u30c8\u90fd\u5e02\u30ac\u30b9\u300d\u306e\u4f7f\u7528\u958b\u59cb\u306b\u3064\u3044\u3066 | \u6771\u4eac\u30ac\u30b9 https://t.co/WhzNTCabwk"
    },
    "90": {
      "comment": "@400Xdance \u6771\u4eac\u30ac\u30b9\u306e\u30b7\u30e7\u30fc\u30c8\u30c9\u30e9\u30de\uff1f\u30b7\u30ea\u30fc\u30ba\u307f\u305f\u3044\u306a\u3084\u3064\u3067\u3059\u306d\uff01\u3002\u3002\u30b8\u30fc\u30f3\u3063\u3066\u304d\u307e\u3057\u305f\uff01\u3002\u3002\u304e\u3053\u3061\u306a\u3044\u5bb6\u65cf\u611b\u3063\u3066\u611f\u52d5\u3057\u307e\u3059\ud83e\udd7a"
    },
    "91": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306e\u30cf\u30a6\u30b9\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u306f\u5fd9\u3057\u3044\u3042\u306a\u305f\u306b\u304b\u308f\u3063\u3066\u304a\u3046\u3061\u3092\u30d4\u30ab\u30d4\u30ab\uff01\u3000\u300cPR\u300d https://t.co/C9KcyPH5oK"
    },
    "92": {
      "comment": "\u4eca\u3001\u7a81\u7136\u3001\u6771\u4eac\u30ac\u30b9\u306e\u70b9\u691c\u3067\u5bb6\u306e\u4e2d\u5165\u3089\u305b\u3066\u4e0b\u3055\u3044\u3063\u3066\u6765\u305f\u3051\u3069\u3001\u305d\u3093\u306a\u8a71\u3084\u901a\u77e5\u6765\u3066\u306a\u3044\u3057\u5171\u50cd\u304d\u306e\u5bb6\u5ead\u304c\u591a\u3044\u306e\u306b\u7121\u7406\u3058\u3083\u306a\u3044\uff1f\u3002\u3002\u6771\u4eac\u30ac\u30b9\u306e\u4eba\u3058\u3083\u306a\u304f\u3001\u4e0b\u8acb\u3051\u306e\u30a8\u30cd\u30b9\u30bf\u725b\u4e45\u3063\u3066\u3053\u3053\u3001\u9f8d\u30b1\u5d0e\u3060\u3051\u3069\uff1f\u3002\u7686\u3055\u3093\u306e\u304a\u5b85\u306b\u3082\u6765\u3066\u308b\uff1f\u3002#\u9f8d\u30b1\u5d0e\u3002#\u6771\u4eac\u30ac\u30b9"
    },
    "93": {
      "comment": "\u5c31\u8077\u304a\u3059\u3059\u3081\u4f01\u696d\u3002\u30fb\u5e73\u548c\u4e0d\u52d5\u7523\u3002\u30fb\u4e09\u83f1\u5730\u6240\u3002\u30fb\u6c96\u7e04\u632f\u8208\u958b\u767a\u91d1\u878d\u516c\u5eab\u3002\u30fb\u6771\u4eac\u30ac\u30b9\u4e0d\u52d5\u7523\u3002\u30fb\u30c0\u30a4\u30d3\u30eb\u3002\u30fb\u65e5\u672c\u8a3c\u5238\u91d1\u878d\u3002\u30fbJPX"
    },
    "94": {
      "comment": "\ud83d\udce2\u30aa\u30f3\u30e9\u30a4\u30f3\u30bb\u30df\u30ca\u30fc\u544a\u77e5\u30022024\u5e749\u67084\u65e5\uff08\u6c34\uff0912\u6642\uff5e13\u6642\u3002https://t.co/pVnprs7QWe\u3002\u30028\u6708\u306b\u7d9a\u3044\u30662\u56de\u76ee\uff01\u6771\u4eac\u30ac\u30b9\u306e\u30e1\u30c7\u30a3\u30a2\u300c\u307f\u3089\u3044\u307b\u3077\u3089\u3063\u3068\u300d\u304c\u4e3b\u50ac\u3059\u308b\u9632\u707d\u30bb\u30df\u30ca\u30fc\u3067\u3001\u5bb6\u5ead\u306e\u9632\u707d\u306b\u95a2\u3059\u308b\u304a\u8a71\u3092\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002YouTube\u3067\u3054\u8996\u8074\u3044\u305f\u3060\u3051\u307e\u3059\u306e\u3067\u3001\u304a\u663c\u4f11\u307f\u306b\u305c\u3072\u3054\u89a7\u304f\u3060\u3055\u3044\u3002"
    },
    "95": {
      "comment": "\u306a\u306b\u3053\u306e\u6771\u4eac\u30ac\u30b9\u306eCM\u3000\u6c17\u6301\u3061\u60aa\u3044\ud83e\udd22\u3000\u6cd5\u5247\u3076\u3063\u523a\u3055\u3063\u3066\u3082\u77e5\u3089\u3093\u305e\ud83d\ude44\u3000\u3002\u3002#\u6771\u4eac\u30ac\u30b9\u3000#\u97d3\u56fd\u30db\u30eb\u30db\u30eb\u3084\u3081\u308d\u3002\u3002https://t.co/sObhSuzr6c"
    },
    "96": {
      "comment": "50% off + 1 Ubisoft \ud83c\udf81\u3002#playitcloud #cloudgaming"
    },
    "97": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u306e\u30de\u30c3\u30b9\u30eb\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3063\u3066\u3069\u3093\u306a\u3093\uff1f\uff1f\uff1f\u3068\u601d\u3063\u3066\u3057\u307e\u3063\u305f\u3002 https://t.co/9ILilWJXAB"
    },
    "98": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u3001\u6d77\u5916\u6d6e\u4f53\u5f0f\u6d0b\u4e0a\u98a8\u529b\u767a\u96fb\u4e8b\u696d\u306b\u53c2\u753b\u3000\u30dd\u30eb\u30c8\u30ac\u30eb\u4f01\u696d\u306b\u6295\u8cc7\u3002https://t.co/Kqp47oT8n5"
    },
    "99": {
      "comment": "\u3053\u308c\u7740\u3066\u6771\u4eac\u30ac\u30b9\u91ce\u7403\u90e8\u306e\u5fdc\u63f4\u884c\u3051\u3070\u3044\u3044\u3093\u3067\u3059\u306d\ud83d\udd35\ud83d\udd34"
    },
    "100": {
      "comment": "\u300c\u88ab\u707d\u4e2d\u306f\u3001\u7518\u3044\u3082\u306e\u304c\u98df\u3079\u305f\u304b\u3063\u305f\u2026\ud83e\udd72\u300d\u3002\u304a\u83d3\u5b50\u304c\u3042\u308b\u3068\u4e0d\u5b89\u306a\u6c17\u6301\u3061\u3082\u5c11\u3057\u548c\u3089\u3050\u304b\u3082\ud83c\udf6a\u3002\u3002\u666e\u6bb5\u98df\u3079\u3066\u3044\u308b\u3082\u306e\u3084\u3001\u65e5\u6301\u3061\u306e\u3059\u308b\u3002\u3007\u3007\u306a\u3069\u3082\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u5fc3\u304c\u5b89\u5fc3\u3067\u304d\u305d\u3046\u3067\u3059\u263a\ufe0f\u3002\u3002https://t.co/4H2xjti3Av\u3002#\u6771\u4eac\u30ac\u30b9 #\u30a6\u30c1\u30b3\u30c8 #\u9632\u707d\u9031\u9593 #\u975e\u5e38\u98df\u3002@mayusan9"
    },
    "101": {
      "comment": "SOMOSOMO\u3068\u6771\u4eac\u30ac\u30b9\u306e\u5bfe\u30d0\u30f3\u3092\u671f\u5f85\u3057\u306a\u304c\u3089\u3001\u4eca\u9031\u306e\u30d7\u30ec\u30a4\u30ea\u30b9\u30c8\u3082\u6771\u4eac\u30ac\u30b9\u306eCM\u3067\u7d42\u4e86\u3002#FM\u305f\u3061\u304b\u308f \u3002#\u30a2\u30a4\u30c9\u30eb\u7b2c\u56db\u4f1a\u8b70\u5ba4 \u3002#\u96fb\u52d5\u30ad\u30c3\u30af\u30dc\u30fc\u30c9\u306a\u3089SWALLOW"
    },
    "102": {
      "comment": "\u3010\u30ec\u30e2\u30f3\u30ac\u30b9\u3011https://t.co/8SvhOthKC5 #\u7bc0\u7d04 #\u90fd\u5e02\u30ac\u30b9 #\u6771\u4eac\u30ac\u30b9\u3002\u6771\u4eac\u90fd\u3001\u795e\u5948\u5ddd\u770c\u3001\u57fc\u7389\u770c\u306b\u304a\u4f4f\u307e\u3044\u3067\u3002\u6771\u4eac\u30ac\u30b9\u306e\u90fd\u5e02\u30ac\u30b9\u3092\u3054\u5229\u7528\u4e2d\u306e\u65b9\uff1f\u3002[\u30ec\u30e2\u30f3\u30ac\u30b9]\u306e\u90fd\u5e02\u30ac\u30b9\u306f\u3002\u6771\u4eac\u30ac\u30b9\u306e\u4e00\u822c\u5951\u7d04\u306b\u6bd4\u3079\u3002\u57fa\u6e96\u5358\u4f4d\u6599\u91d1(\u5f93\u91cf\u6599\u91d1)\u304c\u3002\uff15\uff05\u5b89\u304f\u306a\u308a\u307e\u3059\u3088\uff01\u3002\u30d7\u30ec\u30df\u30a2\u30e0\u5272\u5f15\u3082\u3042\u308b\u306e\u3067\u3002\u4f7f\u7528\u91cf\u306e\u591a\u3044\u65b9\u306f\u5fc5\u898b\uff01"
    },
    "103": {
      "comment": "\u8cde\u5473\u671f\u9650\u5207\u308c\u306b\u306a\u308b\u524d\u306b\uff01\u3002\u4f7f\u308f\u305a\u306b\u6e08\u3093\u3060 #\u975e\u5e38\u98df \u3092\u304a\u3044\u3057\u304f\u5473\u308f\u3046\ud83d\ude0b\u3002\u3002#\u30a2\u30eb\u30d5\u30a1\u7c73 \u3092\u4f7f\u3063\u305f\u30aa\u30e0\u30e9\u30a4\u30b9\u3002#\u4e7e\u30d1\u30f3 \u3092\u4f7f\u3063\u305f\u30c1\u30e7\u30b3\u30b5\u30e9\u30df\ud83c\udf6b\u306a\u3069\u3002\u30d7\u30ed\u76f4\u4f1d\u306e\u30ec\u30b7\u30d4\u3082\u76db\u308a\u3060\u304f\u3055\u3093\u3067\u3059\ud83c\udfb5\ud83c\udf5a\u3002\u3002https://t.co/3NxRzeHJwj\u3002#\u6771\u4eac\u30ac\u30b9 #\u30a6\u30c1\u30b3\u30c8 #\u9632\u707d\u9031\u9593 #\u30ed\u30fc\u30ea\u30f3\u30b0\u30b9\u30c8\u30c3\u30af"
    },
    "104": {
      "comment": "\u3010\u65e5\u672c\u7dd1\u8336\u30bb\u30f3\u30bf\u30fc\u00d7\u6771\u4eac\u30ac\u30b9\u3011\u9b54\u6cd5\u306e\u3072\u3068\u632f\u308a\u300c\u30af\u30ec\u30a4\u30b8\u30fc\u30bd\u30eb\u30c8\u300d\u3067\u5f69\u308b\uff01\u30cf\u30ed\u30a6\u30a3\u30f3\u30d1\u30fc\u30c6\u30a3\u30fc\u30cf\u30ed\u30a6\u30a3\u30f3\u7279\u5225\u30e1\u30cb\u30e5\u30fc\u3092\u697d\u3057\u3081\u308b\u6599\u7406\u6559\u5ba4\u3092\u958b\u50ac https://t.co/YXuoz8vwfO"
    },
    "105": {
      "comment": "\u5e83\u5cf6\u6771\u6d0b\u30ab\u30fc\u30d72022\u5e74\u5ea6\u3002\u30c9\u30e9\u30d5\u30c8\u6307\u540d\u9078\u624b\u30021\u4f4d\u3000\u6589\u85e4\u512a\u6c70 (\u82eb\u5c0f\u7267\u4e2d\u592e\u9ad8\u3000\u6295\u624b)\u30022\u4f4d\u3000\u5185\u7530\u6e58\u5927 (\u5229\u6839\u5546\u696d\u9ad8\u3000\u5185\u91ce\u624b)\u30023\u4f4d\u3000\u76ca\u7530\u6b66\u5c1a (\u6771\u4eac\u30ac\u30b9\u3000\u6295\u624b)\u30024\u4f4d\u3000\u6e05\u6c34\u53f6\u4eba (\u9ad8\u5d0e\u5065\u5eb7\u798f\u7949\u5927\u5b66\u9ad8\u5d0e\u9ad8\u3000\u6355\u624b)\u30025\u4f4d\u3000\u6cb3\u91ce\u4f73 (\u5927\u962a\u30ac\u30b9\u3000\u6295\u624b)\u30026\u4f4d\u3000\u9577\u8c37\u90e8\u9280\u6b21 (\u30c8\u30e8\u30bf\u81ea\u52d5\u8eca\u3000\u6295\u624b)"
    },
    "106": {
      "comment": "\u5bbf\u820e\u5185\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001\u5f7c\u3089\u306e\u6301\u3063\u3066\u3044\u305f\u306f\u305a\u306e\u8cb4\u91cd\u54c1\u3084\u91d1\u92ad\u306f\u7121\u304f\u306a\u3063\u3066\u304a\u308a\u3001\u7c97\u672b\u306a\u3082\u306e\u3057\u304b\u6b8b\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3002\u3002\u3053\u306e\u88cf\u306b\u306f\u6771\u4eac\u30ac\u30b9\u304c\u3042\u308a\u30019\u67083\u65e5\u306e\u671d\u3068\u663c\u3001100\u4eba\u7a0b\u306e\u65e5\u672c\u4eba\u52b4\u50cd\u8005\u304c\u62bc\u3057\u304b\u3051\u3066\u4e2d\u56fd\u4eba\u3092\u6bba\u3057\u3066\u304a\u308a\u3001\u305d\u306e\u6d41\u308c\u3067\u3053\u306e\u5bbf\u820e\u3082\u8972\u308f\u308c\u305f\u3082\u306e\u3068\u8003\u3048\u3089\u308c\u3066\u3044\u308b\u3002\uff08\u5916\u52d9\u7701\u5916\u4ea4\u53f2\u6599\u9928\u6240\u8535\u8cc7\u6599\uff09"
    },
    "107": {
      "comment": "\u6771\u4eac\u30ac\u30b9\u3067\u3093\u304d 12,096\u5186(445kWh)\u3002looop\u3067\u3093\u304d      16,528\u5186(415Wh)\u3002\u3002\u3069\u3061\u3089\u30828\u6708\u3002\u3002looop\u3067\u3093\u304d\u4e57\u308a\u63db\u3048\u305f\u3089\u9ad8\u304f\u306a\u3063\u305f\u2639\ufe0f"
    },
    "108": {
      "comment": "9/2 \u9006\u65e5\u6b69\u65e5\u6570 1\u65e5\u3002\u30029531 \u6771\u4eac\u30ac\u30b9 0.10\u5186\u30029532 \u5927\u962a\u30ac\u30b9 0.05\u5186\u30029543 \u9759\u5ca1\u30ac\u30b9 0.05\u5186\u3002https://t.co/hP4eZ96kZQ"
    },
    "109": {
      "comment": "\u3010\u30b5\u30b9\u30c6\u30ca\u30c3\u30b8\u6559\u80b2\u306e\u7814\u4fee\u3000\u79e6\u91ce\u5e02\u306e\u5c0f\u5b66\u6821\u3067\u6388\u696d\u5b9f\u8df5\u3078/\u6771\u4eac\u30ac\u30b9\u3011\u6771\u4eac\u30ac\u30b9\u306f8\u670822\u65e5\u3001\u7701\u30a8\u30cd\u884c\u52d5\u3092\u4fc3\u3059\u6559\u80b2\u30d7\u30ed\u30b0\u30e9\u30e0\u300c\u30b5\u30b9\u30c6\u30ca\u30c3\u30b8\u6559\u80b2\u300d\u306e\u6307\u5c0e\u8005\u7814\u4fee\u4f1a\u3092\u6771\u4eac\u90fd\u677f\u6a4b\u533a\u306b\u3042\u308b\u6771\u4eac\u5bb6\u653f\u5927\u5b66\u3067\u958b\u50ac\u3057\u305f\u3002\u795e\u5948\u5ddd\u770c\u79e6\u91ce\u5e02\u5185\u306e\u5c0f\u5b66\u68213\u6821\u306e\u6559\u54e113\u4eba\u304c\u53d7\u8b1b\u3057\u2026https://t.co/7Nl9SaMrjR"
    },
    "110": {
      "comment": "@raccolta_BDC \u3053\u306e\u524d\u306e\u6771\u4eac\u30ac\u30b9\u6226\u5916\u3057\u3066\u307e\u3057\u305f\u3051\u3069\ud83d\ude05"
    },
    "111": {
      "comment": "@moonriver91725 \u3042\u3089\u3089\ud83d\ude16\u3002\u6771\u4eac\u30ac\u30b9\u3055\u3093\u306f\u6bce\u5e74\u70b9\u691c\u304c\u3042\u308a\u3001\u4e8b\u524d\u306b\u9023\u7d61\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3002\u66f4\u306b\u4e0b\u8acb\u3051\u304b\u306a\uff1f\u3002\u30ec\u30f3\u30b8\u30d5\u30fc\u30c9\u3082\u30a8\u30cd\u30b9\u30bf\u3055\u3093\u306a\u306f\u305a\u306a\u3093\u3060\u3051\u3069\ud83d\udca6\u3002\u5bfe\u5fdc\u304c\u30a4\u30de\u30a4\u30c1\u306a\u65b9\u306b\u5f53\u305f\u3063\u3066\u3057\u307e\u3063\u305f\u3093\u3067\u3059\u306d\ud83d\ude31"
    },
    "112": {
      "comment": "\u4eca\u65e5\u306f #\u4e32\u306e\u65e5 \ud83d\uddd3\ufe0f\u3002\u4e32\u6599\u7406\u3068\u624b\u4f5c\u308a\u306e #\u30cf\u30a4\u30dc\u30fc\u30eb \u3067\u4e7e\u676f\uff01\ud83c\udf7b\u3002\u3002\u30b0\u30e9\u30b9\u306b\u6c37\u3092\u304e\u3063\u3057\u308a\u8a70\u3081\u3066\u2026\ud83e\uddca\ud83e\udd43\u3002\u304a\u5e97\u306e\u3088\u3046\u306a\u7f8e\u5473\u3057\u3055\u304c\u3002\u81ea\u5b85\u3067\u7c21\u5358\u306b\u5b8c\u6210\u3057\u307e\u3059\ud83d\ude0b\ud83c\udfb5\u3002\u3002https://t.co/Imk5vZP9hc\u3002#\u6771\u4eac\u30ac\u30b9 #\u30a6\u30c1\u30b3\u30c8 #\u4eca\u65e5\u306f\u4f55\u306e\u65e5 #\u30a6\u30a4\u30b9\u30ad\u30fc\u3002@asahibeer_jp"
    },
    "113": {
      "comment": "\u3010\u65e5\u672c\u7dd1\u8336\u30bb\u30f3\u30bf\u30fc\u00d7\u6771\u4eac\u30ac\u30b9\u3011\u9b54\u6cd5\u306e\u3072\u3068\u632f\u308a\u300c\u30af\u30ec\u30a4\u30b8\u30fc\u30bd\u30eb\u30c8\u300d\u3067\u5f69\u308b\uff01\u30cf\u30ed\u30a6\u30a3\u30f3\u30d1\u30fc\u30c6\u30a3\u30fc\u30cf\u30ed\u30a6\u30a3\u30f3\u7279\u5225\u30e1\u30cb\u30e5\u30fc\u3092\u697d\u3057\u3081\u308b\u6599\u7406\u6559\u5ba4\u3092\u958b\u50ac https://t.co/kH5pXU3eTJ"
    },
    "114": {
      "comment": "\u307e\u3060\u307e\u3060\u6691\u3044\u65e5\u304c\u7d9a\u304d\u307e\u3059\u306d\ud83d\ude33\u2728\u3002\u3055\u3063\u3071\u308a\u3057\u305f\u30d5\u30eb\u30fc\u30c4\u30bc\u30ea\u30fc\u3067\u6dbc\u307f\u307e\u305b\u3093\u304b\ud83c\udf90\u3002\u3002\u70ad\u9178\u304c\u30a2\u30af\u30bb\u30f3\u30c8\u306e\u300c\u30b7\u30e5\u30ef\u30b7\u30e5\u30ef\u3059\u3044\u304b\u30bc\u30ea\u30fc\u300d\u3002\u300c\u30a2\u30c3\u30d7\u30eb\u30b5\u30a4\u30c0\u30fc\u30bc\u30ea\u30fc\u300d\u3067\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3067\u3059\ud83c\udfb5\u3002\u3002https://t.co/F6QXX60mKq\u3002#\u6771\u4eac\u30ac\u30b9 #\u30a6\u30c1\u30b3\u30c8 #\u624b\u4f5c\u308a\u304a\u3084\u3064 #\u590f\u30ec\u30b7\u30d4"
    },
    "115": {
      "comment": "@moonriver91725 \u3042\uff01\u3002\u30a8\u30cd\u30b9\u30bf\u3055\u3093\u306f\u6771\u4eac\u30ac\u30b9\u306e\u4e2d\u306e\u70b9\u691c\u3059\u308b\u4f1a\u793e\u3067\u3059\u306d\ud83d\ude33\u3002\u9f8d\u30b1\u5d0e\u306f\u725b\u4e45\u306b\u5408\u4f75\u3057\u307e\u3057\u305f\u3088\uff01"
    },
    "116": {
      "comment": "9/14(\u571f) \u56fd\u7acb\u7af6\u6280\u5834\u3000\u540d\u53e4\u5c4b\u6226\u3002\u300e\u6771\u4eac\u30ac\u30b9 Day\u300f\u3002\u30021.\u300c\u7279\u88fd\u30d9\u30fc\u30b9\u30dc\u30fc\u30eb\u30b7\u30e3\u30c4\u300d\u30d7\u30ec\u30bc\u30f3\u30c8\u30022.\u300c\uff1dLOVE\u300d\u30cf\u30fc\u30d5\u30bf\u30a4\u30e0\u30b9\u30da\u30b7\u30e3\u30eb\u30e9\u30a4\u30d6\u30023. \u300c\u30d1\u30c3\u30c1\u30e7\u30fb\u96fb\u30d1\u30c3\u30c1\u30e7\u30fb\u6c34\u30d1\u30c3\u30c1\u30e7\u300d\u304c\u6765\u5834\uff01\u00a0\u2190new\u3002\u3002https://t.co/LQEdpHFsNy https://t.co/st9oZjo5Ru"
    },
    "117": {
      "comment": "\u307e\u3055\u306b\u4eca\u65e5\u300180\u4ee3\u306e\u6bcd\u306b\u983c\u307e\u308c\u3066\u6709\u6599\u306e\u691c\u91dd\u7968\u3092\u30cd\u30c3\u30c8\u3067\u7533\u3057\u8fbc\u3093\u3060\u3002\u30cd\u30c3\u30c8\u3067\u7533\u3057\u8fbc\u3081\u308b\u3068\u77e5\u3089\u306a\u3044\u6bcd\u306f\u300c\u96fb\u8a71\u3057\u308d\u300d\u3068\u3046\u308b\u3055\u304b\u3063\u305f\u3002\u6211\u304c\u5bb6\u306f\u30ac\u30b9\u3082\u96fb\u6c17\u3082\u6771\u4eac\u30ac\u30b9\u3067\u3001ID\u3092\u3064\u304f\u3089\u306a\u304f\u3066\u3082\u300c\u304a\u5ba2\u69d8\u756a\u53f7\u300d\u3067\u7533\u3057\u8fbc\u307f\u304c\u3067\u304d\u305f\u3002\u9ad8\u9f62\u306e\u3054\u5bb6\u5ead\u306f\u3053\u3046\u3044\u3046\u696d\u8005\u3068\u5951\u7d04\u3059\u308b\u306e\u304c\u3044\u3044\u306e\u3067\u306f\u3002"
    },
    "118": {
      "comment": "\u30109/3\u8ffd\u8a18\u30119/14(\u571f) \u540d\u53e4\u5c4b\u6226\u300e\u6771\u4eac\u30ac\u30b9 Day\u300f\u958b\u50ac\u306e\u304a\u77e5\u3089\u305b\uff5c\u30cb\u30e5\u30fc\u30b9\uff5cFC\u6771\u4eac\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30db\u30fc\u30e0\u30da\u30fc\u30b8 https://t.co/2to6wpWshf \u3002\u30d9\u30fc\u30b9\u30dc\u30fc\u30eb\u30b7\u30e3\u30c4\u3068\u805e\u3044\u3066\u91ce\u7403\u90e8\u306e\u30e6\u30cb\u30d5\u30a9\u30fc\u30e0\u306a\u3089\u306a\u3042\u3068\u601d\u3063\u3066\u3057\u307e\u3063\u305f\u3002"
    },
    "119": {
      "comment": "\u5c71\u68a8\u770c\u9ad8\u6821\u91ce\u7403\u51fa\u8eab\u9078\u624b\u3002\u3002\u6295\u624b\u3002\u4f50\u85e4\u5e79(\u65e5\u672c\u88fd\u9244\u304b\u305a\u3055\u30de\u30b8\u30c3\u30af)\u3002\u82e5\u5c71\u6075\u6597(\u6771\u6d77\u5927)\u3002\u5c71\u7530\u60a0\u5e0c(\u795e\u533b\u5927)\u3002\u3002\u6355\u624b\u3002\u4e80\u7530\u5553\u592a(\u8aad\u58f2\u30b8\u30e3\u30a4\u30a2\u30f3\u30c4)\u3002\u3002\u5185\u3002\u6a58\u7530\u9678\u6597(\u65e5\u5927)\u3002\u3002\u5916\u3002\u7027\u6fa4\u864e\u592a\u6717(ENEOS)\u3002\u4e2d\u5c3e\u52c7\u4ecb(\u6771\u4eac\u30ac\u30b9)\u3002\u91ce\u6751\u5065\u592a(\u65e9\u7a32\u7530\u5927\u5b66)\u3002\u30a8\u30c9\u30dd\u30ed \u30b1\u30a4\u30f3(\u5927\u962a\u5b66\u9662\u5927)\u3002\u85e4\u6fa4\u6f64\u54c9(\u685c\u7f8e\u6797\u5927)\u3002https://t.co/TOJdroLmCW"
    },
    "120": {
      "comment": "@pppnnp99 TGS\u3063\u3066\u4f55\uff1f\uff1f\u3002\u6771\u4eac\u30ac\u30b9\u3057\u304b\u601d\u3044\u3064\u304b\u306a\u3044\ud83d\ude43"
    }
  },
  "translations": {
    "Tokyu Power and Tokyo Gas are the two major players in the highly competitive capital region, according to an article on the Denki Shimbun website dated September 2, 2024. #clip_energy": [
      "\u6771\u6025\u30d1\u30ef\u30fc\u3068\u6771\u4eac\u30ac\u30b9\u306f\u3001\u96fb\u6c17\u65b0\u805e\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306b\u63b2\u8f09\u3055\u308c\u305f\u8a18\u4e8b\u306b\u3088\u308b\u3068\u3001\u7af6\u4e89\u306e\u6fc0\u3057\u3044\u9996\u90fd\u570f\u3067\u306e2\u5927\u30d7\u30ec\u30fc\u30e4\u30fc\u3067\u3059\u3002\u8a18\u4e8b\u306e\u65e5\u4ed8\u306f2024\u5e749\u67082\u65e5\u3067\u3059\u3002#clip_energy"
    ],
    "The user is sharing a moment from a game between Obic Seagulls and Tokyo Gas. They are particularly highlighting the cheerleaders of Obic Seagulls. The user has also used hashtags related to American football and photography.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u30aa\u30fc\u30d3\u30c3\u30af\u30b7\u30fc\u30ac\u30eb\u30ba\u3068\u6771\u4eac\u30ac\u30b9\u306e\u8a66\u5408\u304b\u3089\u306e\u4e00\u30b3\u30de\u3092\u5171\u6709\u3057\u3066\u3044\u307e\u3059\u3002\u7279\u306b\u30aa\u30fc\u30d3\u30c3\u30af\u30b7\u30fc\u30ac\u30eb\u30ba\u306e\u30c1\u30a2\u30ea\u30fc\u30c0\u30fc\u3092\u5f37\u8abf\u3057\u3066\u3044\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306f\u30a2\u30e1\u30ea\u30ab\u30f3\u30d5\u30c3\u30c8\u30dc\u30fc\u30eb\u3068\u5199\u771f\u306b\u95a2\u9023\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u3082\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "@RINSONG_0110 believes that when it comes to infrastructure, Tokyo Electric Power Company and TOKYOGAS are the safest options. They express skepticism towards new, unknown power companies.": [
      "@RINSONG_0110\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u306b\u95a2\u3057\u3066\u306f\u6771\u4eac\u96fb\u529b\u3068\u6771\u4eac\u30ac\u30b9\u304c\u6700\u3082\u5b89\u5168\u306a\u9078\u629e\u80a2\u3060\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u65b0\u3057\u304f\u672a\u77e5\u306e\u96fb\u529b\u4f1a\u793e\u306b\u5bfe\u3057\u3066\u61d0\u7591\u7684\u306a\u610f\u898b\u3092\u8868\u660e\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "A user shared a link to a commercial for TOKYOGAS featuring actor Go Ayano, titled 'Pipitto Stove Ayano Grill', on YouTube.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u4ff3\u512a\u306e\u7dbe\u91ce\u525b\u304c\u51fa\u6f14\u3059\u308b\u6771\u4eac\u30ac\u30b9\u306eCM\u300c\u30d4\u30d4\u30c3\u3068\u30b9\u30c8\u30fc\u30d6\u7dbe\u91ce\u30b0\u30ea\u30eb\u300d\u306eYouTube\u3078\u306e\u30ea\u30f3\u30af\u3092\u5171\u6709\u3057\u307e\u3057\u305f\u3002"
    ],
    "The user understands if this is about TOKYOGAS, but mentions that they watched Vissel Kobe in the same season.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u3053\u308c\u304c\u6771\u4eac\u30ac\u30b9\u306b\u3064\u3044\u3066\u306e\u8a71\u3067\u3042\u308c\u3070\u7406\u89e3\u3057\u307e\u3059\u304c\u3001\u540c\u3058\u30b7\u30fc\u30ba\u30f3\u306b\u30f4\u30a3\u30c3\u30bb\u30eb\u795e\u6238\u3092\u89b3\u6226\u3057\u305f\u3068\u8a00\u53ca\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "The user registered on the TOKYOGAS website to view their electricity and gas usage online due to the paperless transition from October. They viewed their power usage in a graph format, where the bar represents their current month's usage and the white circle represents the average usage of other households.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f10\u6708\u304b\u3089\u306e\u30da\u30fc\u30d1\u30fc\u30ec\u30b9\u5316\u306b\u4f34\u3044\u3001\u96fb\u6c17\u3068\u30ac\u30b9\u306e\u4f7f\u7528\u91cf\u3092\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u6771\u4eac\u30ac\u30b9\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306b\u767b\u9332\u3057\u307e\u3057\u305f\u3002\u5f7c\u3089\u306f\u96fb\u529b\u4f7f\u7528\u91cf\u3092\u30b0\u30e9\u30d5\u5f62\u5f0f\u3067\u78ba\u8a8d\u3057\u3001\u30d0\u30fc\u306f\u73fe\u5728\u306e\u6708\u306e\u4f7f\u7528\u91cf\u3092\u3001\u767d\u3044\u5186\u306f\u4ed6\u306e\u4e16\u5e2f\u306e\u5e73\u5747\u4f7f\u7528\u91cf\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "The user visited a Docomo shop at 1 PM to get assistance in consolidating their Softbank electricity to TOKYOGAS. The process took a lot of time, delaying their Docomo transfer work. They also had to urgently change their address from Softbank to Gmail for some urgent matters. They left the Docomo shop after 7 PM and arrived home at 8 PM, having woken up at 11 AM.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u5348\u5f8c1\u6642\u306b\u30c9\u30b3\u30e2\u30b7\u30e7\u30c3\u30d7\u3092\u8a2a\u308c\u3001\u30bd\u30d5\u30c8\u30d0\u30f3\u30af\u306e\u96fb\u6c17\u3092\u6771\u4eac\u30ac\u30b9\u306b\u7d71\u5408\u3059\u308b\u305f\u3081\u306e\u652f\u63f4\u3092\u6c42\u3081\u307e\u3057\u305f\u3002\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u306f\u591a\u304f\u306e\u6642\u9593\u304c\u304b\u304b\u308a\u3001\u30c9\u30b3\u30e2\u3078\u306e\u8ee2\u9001\u4f5c\u696d\u304c\u9045\u308c\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u6025\u304e\u306e\u4e8b\u9805\u306e\u305f\u3081\u306b\u30bd\u30d5\u30c8\u30d0\u30f3\u30af\u304b\u3089Gmail\u3078\u306e\u4f4f\u6240\u5909\u66f4\u3082\u6025\u3044\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u5f7c\u3089\u306f\u5348\u5f8c7\u6642\u306b\u30c9\u30b3\u30e2\u30b7\u30e7\u30c3\u30d7\u3092\u51fa\u3066\u3001\u5348\u5f8c8\u6642\u306b\u5bb6\u306b\u5230\u7740\u3057\u307e\u3057\u305f\u3002\u8d77\u5e8a\u306f\u5348\u524d11\u6642\u3067\u3057\u305f\u3002"
    ],
    "Although Tokyo Gas has long been the leader in the urban gas industry, Osaka Gas has surpassed Tokyo Gas in market capitalization since around March this year. As of August 30, Tokyo Gas is valued at 1.4592 trillion yen, while Osaka Gas is valued at 1.4732 trillion yen, making Osaka Gas more valuable as a company.": [
      "\u6771\u4eac\u30ac\u30b9\u306f\u9577\u3089\u304f\u90fd\u5e02\u30ac\u30b9\u696d\u754c\u306e\u30ea\u30fc\u30c0\u30fc\u3067\u3057\u305f\u304c\u3001\u4eca\u5e74\u306e3\u6708\u9803\u304b\u3089\u5927\u962a\u30ac\u30b9\u304c\u6771\u4eac\u30ac\u30b9\u3092\u6642\u4fa1\u7dcf\u984d\u3067\u4e0a\u56de\u3063\u3066\u3044\u307e\u3059\u30028\u670830\u65e5\u73fe\u5728\u3001\u6771\u4eac\u30ac\u30b9\u306e\u6642\u4fa1\u7dcf\u984d\u306f1\u51464592\u5104\u5186\u3001\u5927\u962a\u30ac\u30b9\u306e\u6642\u4fa1\u7dcf\u984d\u306f1\u51464732\u5104\u5186\u3067\u3001\u5927\u962a\u30ac\u30b9\u306e\u65b9\u304c\u4f01\u696d\u3068\u3057\u3066\u306e\u4fa1\u5024\u304c\u9ad8\u3044\u3067\u3059\u3002"
    ],
    "Currently, it seems barely possible to reach Northern Kanto. It's difficult to travel as far as Shizuoka, and it might not be possible to go to Okazaki anymore. I remember comfortably watching the club championship in Tokorozawa from the relaxed sofa behind the net. This applies to the second preliminary round of the city competition and the sports newspaper. The first match between Seibu's second team and Tokyo Gas was also in the dome.": [
      "\u73fe\u5728\u3001\u5317\u95a2\u6771\u306b\u5230\u9054\u3059\u308b\u306e\u306f\u307b\u3068\u3093\u3069\u53ef\u80fd\u306a\u3088\u3046\u3067\u3059\u3002\u9759\u5ca1\u307e\u3067\u65c5\u884c\u3059\u308b\u306e\u306f\u96e3\u3057\u304f\u3001\u5ca1\u5d0e\u306b\u884c\u304f\u3053\u3068\u306f\u3082\u3046\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u79c1\u306f\u30cd\u30c3\u30c8\u88cf\u306e\u30ea\u30e9\u30c3\u30af\u30b9\u3057\u305f\u30bd\u30d5\u30a1\u304b\u3089\u6240\u6ca2\u3067\u306e\u30af\u30e9\u30d6\u9078\u624b\u6a29\u3092\u5feb\u9069\u306b\u89b3\u6226\u3057\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u5e02\u306e\u7af6\u6280\u306e\u7b2c\u4e8c\u4e88\u9078\u30e9\u30a6\u30f3\u30c9\u3068\u30b9\u30dd\u30fc\u30c4\u65b0\u805e\u306b\u3082\u5f53\u3066\u306f\u307e\u308a\u307e\u3059\u3002\u897f\u6b66\u306e\u4e8c\u8ecd\u3068\u6771\u4eac\u30ac\u30b9\u3068\u306e\u521d\u6226\u3082\u30c9\u30fc\u30e0\u3067\u3057\u305f\u3002"
    ],
    "A user found their 'Kenta-kun' daily schedule, which they had kept in their pocket, had dried out and hardened under the hood. They expressed a desire for it, despite being told by TOKYOGAS that it's only suitable for detached houses.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u30dd\u30b1\u30c3\u30c8\u306b\u5165\u308c\u3066\u3044\u305f'\u30b1\u30f3\u30bf\u304f\u3093'\u306e\u65e5\u8ab2\u8868\u304c\u30d5\u30fc\u30c9\u306e\u4e0b\u3067\u4e7e\u71e5\u3057\u3066\u786c\u5316\u3057\u3066\u3057\u307e\u3063\u305f\u3053\u3068\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\u6771\u4eac\u30ac\u30b9\u304b\u3089\u4e00\u6238\u5efa\u3066\u306e\u5bb6\u306b\u3057\u304b\u9069\u3057\u3066\u3044\u306a\u3044\u3068\u8a00\u308f\u308c\u3066\u3082\u3001\u305d\u308c\u3092\u6b32\u3057\u304c\u3063\u3066\u3044\u307e\u3059\u3002"
    ],
    "Discussing Tokyo Gas's demand response service, which supports the future. Topics include energy storage, renewable energy, sustainability, energy efficiency, power supply, smart homes, and eco-life. #TokyoGas #DemandResponse #EnergyStorage #RenewableEnergy #Sustainability #Igniture #EnergyEfficiency #PowerSupply #SmartHome #EcoLife. @solarpower2035": [
      "\u6771\u4eac\u30ac\u30b9\u306e\u9700\u8981\u5fdc\u7b54\u30b5\u30fc\u30d3\u30b9\u306b\u3064\u3044\u3066\u8b70\u8ad6\u3057\u3001\u672a\u6765\u3092\u652f\u3048\u307e\u3059\u3002\u30c8\u30d4\u30c3\u30af\u30b9\u306b\u306f\u30a8\u30cd\u30eb\u30ae\u30fc\u8caf\u8535\u3001\u518d\u751f\u53ef\u80fd\u30a8\u30cd\u30eb\u30ae\u30fc\u3001\u6301\u7d9a\u53ef\u80fd\u6027\u3001\u30a8\u30cd\u30eb\u30ae\u30fc\u52b9\u7387\u3001\u96fb\u529b\u4f9b\u7d66\u3001\u30b9\u30de\u30fc\u30c8\u30db\u30fc\u30e0\u3001\u30a8\u30b3\u30e9\u30a4\u30d5\u304c\u542b\u307e\u308c\u307e\u3059\u3002#\u6771\u4eac\u30ac\u30b9 #\u9700\u8981\u5fdc\u7b54 #\u30a8\u30cd\u30eb\u30ae\u30fc\u8caf\u8535 #\u518d\u751f\u53ef\u80fd\u30a8\u30cd\u30eb\u30ae\u30fc #\u6301\u7d9a\u53ef\u80fd\u6027 #\u30a4\u30b0\u30cb\u30c1\u30e3\u30fc #\u30a8\u30cd\u30eb\u30ae\u30fc\u52b9\u7387 #\u96fb\u529b\u4f9b\u7d66 #\u30b9\u30de\u30fc\u30c8\u30db\u30fc\u30e0 #\u30a8\u30b3\u30e9\u30a4\u30d5\u3002@solarpower2035"
    ],
    "Halftime in the game between Obic Seagulls and Tokyo Gas. #seacheer #ObicSeagulls #AmericanFootball": [
      "\u30aa\u30fc\u30d3\u30c3\u30af\u30b7\u30fc\u30ac\u30eb\u30ba\u3068\u6771\u4eac\u30ac\u30b9\u306e\u8a66\u5408\u306e\u30cf\u30fc\u30d5\u30bf\u30a4\u30e0\u3067\u3059\u3002#seacheer #\u30aa\u30fc\u30d3\u30c3\u30af\u30b7\u30fc\u30ac\u30eb\u30ba #\u30a2\u30e1\u30ea\u30ab\u30f3\u30d5\u30c3\u30c8\u30dc\u30fc\u30eb"
    ],
    "The user is expressing frustration and fear due to receiving emails from various addresses, including those claiming to be from ION card, Amazon, TOKYOGAS, and Sagawa Express, despite not having an ION card. They have registered the email address @kita9.ed.jp as spam due to the inconvenience.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u3001ION\u30ab\u30fc\u30c9\u3001Amazon\u3001TOKYOGAS\u3001\u4f50\u5ddd\u6025\u4fbf\u306a\u3069\u304b\u3089\u306e\u30e1\u30fc\u30eb\u3092\u53d7\u3051\u53d6\u3063\u3066\u3044\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001ION\u30ab\u30fc\u30c9\u3092\u6301\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30d5\u30e9\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3068\u6050\u6016\u3092\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u4e0d\u4fbf\u3055\u304b\u3089\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9@kita9.ed.jp\u3092\u30b9\u30d1\u30e0\u3068\u3057\u3066\u767b\u9332\u3057\u307e\u3057\u305f\u3002"
    ],
    "Tokyo Gas's house cleaning service will make your home sparkle, a perfect solution for busy individuals. (PR)": [
      "\u6771\u4eac\u30ac\u30b9\u306e\u5bb6\u5ead\u7528\u6e05\u6383\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u3042\u306a\u305f\u306e\u5bb6\u3092\u30d4\u30ab\u30d4\u30ab\u306b\u3057\u307e\u3059\u3002\u5fd9\u3057\u3044\u500b\u4eba\u306b\u3068\u3063\u3066\u306f\u5b8c\u74a7\u306a\u89e3\u6c7a\u7b56\u3067\u3059\u3002(PR)"
    ],
    "Tokyo Gas is performing strongly, on par with Obic.": [
      "\u6771\u4eac\u30ac\u30b9\u306f\u30aa\u30fc\u30d3\u30c3\u30af\u3068\u540c\u7b49\u306e\u5f37\u3055\u3092\u767a\u63ee\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Discussing the differences between gas and electric clothes dryers, particularly in terms of finish and time efficiency. #TOKYOGAS #HomeAppliances #TimeSaving": [
      "\u30ac\u30b9\u3068\u96fb\u6c17\u306e\u8863\u985e\u4e7e\u71e5\u6a5f\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u8b70\u8ad6\u3057\u3001\u7279\u306b\u4ed5\u4e0a\u304c\u308a\u3068\u6642\u9593\u52b9\u7387\u306e\u89b3\u70b9\u304b\u3089\u3002#TOKYOGAS #\u5bb6\u96fb #\u6642\u77ed"
    ],
    "The user is frustrated that Tokyo Gas's energy-saving points double on Mondays, a day they have off and therefore can't save much energy. They wish the doubling would occur from Tuesday to Saturday instead, and question if the day is chosen randomly.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u7701\u30a8\u30cd\u30dd\u30a4\u30f3\u30c8\u304c\u6708\u66dc\u65e5\u306b2\u500d\u306b\u306a\u308b\u3053\u3068\u306b\u30d5\u30e9\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u611f\u3058\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u4f11\u307f\u306e\u65e5\u3067\u3042\u308b\u305f\u3081\u3001\u3042\u307e\u308a\u30a8\u30cd\u30eb\u30ae\u30fc\u3092\u7bc0\u7d04\u3067\u304d\u306a\u3044\u3068\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u500d\u5897\u304c\u706b\u66dc\u65e5\u304b\u3089\u571f\u66dc\u65e5\u307e\u3067\u306b\u306a\u308b\u3053\u3068\u3092\u671b\u307f\u3001\u305d\u306e\u65e5\u304c\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u3070\u308c\u308b\u306e\u304b\u7591\u554f\u306b\u601d\u3063\u3066\u3044\u307e\u3059\u3002"
    ],
    "A user expresses dissatisfaction with TOKYOGAS, a large corporation, for spreading distrust through their advertising language, describing it as too vulgar.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u5927\u4f01\u696d\u3067\u3042\u308bTOKYOGAS\u304c\u5e83\u544a\u8a00\u8a9e\u3092\u901a\u3058\u3066\u4e0d\u4fe1\u611f\u3092\u5e83\u3081\u3066\u3044\u308b\u3053\u3068\u306b\u4e0d\u6e80\u3092\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3092\u3042\u307e\u308a\u306b\u3082\u4e0b\u54c1\u3068\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "This is a game highlight of 2024 Autumn-1 vs. TOKYOGAS, available on YouTube.": [
      "\u3053\u308c\u306f2024\u5e74\u79cb-1\u5bfeTOKYOGAS\u306e\u30b2\u30fc\u30e0\u30cf\u30a4\u30e9\u30a4\u30c8\u3067\u3001YouTube\u3067\u3054\u89a7\u3044\u305f\u3060\u3051\u307e\u3059\u3002"
    ],
    "Tokyu Power and Tokyo Gas are the two major players in the highly competitive capital region of Japan.": [
      "\u6771\u6025\u30d1\u30ef\u30fc\u3068\u6771\u4eac\u30ac\u30b9\u306f\u3001\u7af6\u4e89\u306e\u6fc0\u3057\u3044\u65e5\u672c\u306e\u9996\u90fd\u570f\u3067\u306e\u4e8c\u5927\u30d7\u30ec\u30fc\u30e4\u30fc\u3067\u3059\u3002"
    ],
    "@Hinata_nanokaho suggests that while new power systems might be cheaper, they are currently unstable and it might be better to avoid them. They are unsure about Rakuten and similar systems, and recommend researching before making a decision.": [
      "@Hinata_nanokaho\u306f\u3001\u65b0\u3057\u3044\u96fb\u529b\u30b7\u30b9\u30c6\u30e0\u304c\u5b89\u4fa1\u3067\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u73fe\u5728\u306f\u4e0d\u5b89\u5b9a\u3067\u3042\u308a\u3001\u305d\u308c\u3089\u3092\u907f\u3051\u308b\u65b9\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u63d0\u6848\u3057\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u697d\u5929\u306a\u3069\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u3064\u3044\u3066\u78ba\u4fe1\u304c\u6301\u3066\u305a\u3001\u6c7a\u5b9a\u3092\u4e0b\u3059\u524d\u306b\u8abf\u67fb\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Tokyo Gas is terrible.": [
      "\u6771\u4eac\u30ac\u30b9\u306f\u3072\u3069\u3044\u3002"
    ],
    "The user is sharing a Tokyo Gas commercial featuring Ayano Go and Ayakoji Kimimaro on YouTube.": [
      "\u30e6\u30fc\u30b6\u30fc\u306fYouTube\u3067\u7dbe\u91ce\u525b\u3068\u7dbe\u5c0f\u8def\u516c\u9ebf\u304c\u51fa\u6f14\u3059\u308b\u6771\u4eac\u30ac\u30b9\u306e\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u3092\u5171\u6709\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "During hot weather, it's a great time to make mixed rice dishes with seasonal ingredients like corn. You can enjoy summer flavors with ethnic seasonings. #TOKYOGAS #HomeCooking #SummerRecipe #QuickMeal": [
      "\u6691\u3044\u5929\u6c17\u306e\u6642\u306f\u3001\u30b3\u30fc\u30f3\u306a\u3069\u306e\u5b63\u7bc0\u306e\u98df\u6750\u3092\u4f7f\u3063\u305f\u6df7\u305c\u3054\u98ef\u3092\u4f5c\u308b\u306e\u304c\u6700\u9069\u3067\u3059\u3002\u30a8\u30b9\u30cb\u30c3\u30af\u306a\u8abf\u5473\u6599\u3067\u590f\u306e\u5473\u3092\u697d\u3057\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002#TOKYOGAS #HomeCooking #SummerRecipe #QuickMeal"
    ],
    "Today is #ShoeDay \ud83d\udc60. Is it okay to put tape on new shoes? The key to making them last longer lies in the soles\u2728\ud83d\udc40. We introduce professional maintenance methods\ud83c\udf89. #TOKYOGAS #HomeThings #HowToPolishShoes #ShoeCare": [
      "\u4eca\u65e5\u306f#ShoeDay \ud83d\udc60\u3002\u65b0\u3057\u3044\u9774\u306b\u30c6\u30fc\u30d7\u3092\u8cbc\u3063\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u304b\uff1f\u305d\u308c\u3089\u3092\u9577\u6301\u3061\u3055\u305b\u308b\u9375\u306f\u30bd\u30fc\u30eb\u306b\u3042\u308a\u307e\u3059\u2728\ud83d\udc40\u3002\u30d7\u30ed\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\ud83c\udf89\u3002#TOKYOGAS #HomeThings #HowToPolishShoes #ShoeCare"
    ],
    "The user received a 1000 yen Amazon gift card from Tokyo Gas's energy-saving campaign and was glad to notice it before the deadline.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u6771\u4eac\u30ac\u30b9\u306e\u7701\u30a8\u30cd\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u304b\u30891000\u5186\u306eAmazon\u30ae\u30d5\u30c8\u30ab\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u308a\u3001\u671f\u9650\u524d\u306b\u305d\u308c\u306b\u6c17\u3065\u3044\u3066\u559c\u3093\u3067\u3044\u307e\u3057\u305f\u3002"
    ],
    "From Kaho High School to Hokkaido University and then to Tokyo Gas, and now from Munakata High School to Hokkaido University and then to Osaka Gas.": [
      "\u52a0\u53e4\u9ad8\u6821\u304b\u3089\u5317\u6d77\u9053\u5927\u5b66\u3001\u305d\u3057\u3066\u6771\u4eac\u30ac\u30b9\u3078\u3001\u305d\u3057\u3066\u4eca\u306f\u5b97\u50cf\u9ad8\u6821\u304b\u3089\u5317\u6d77\u9053\u5927\u5b66\u3001\u305d\u3057\u3066\u5927\u962a\u30ac\u30b9\u3078\u3002"
    ],
    "Lemon Gas offers a 5% cheaper standard unit fee compared to the general contract of Tokyo Gas. This is beneficial for residents in Tokyo, Kanagawa, and Saitama prefectures who are currently using Tokyo Gas. They also offer a premium discount, making it a must-see for those with high usage.": [
      "\u30ec\u30e2\u30f3\u30ac\u30b9\u306f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u4e00\u822c\u5951\u7d04\u306b\u6bd4\u3079\u3066\u6a19\u6e96\u5358\u4fa1\u304c5\uff05\u5b89\u3044\u3002\u3053\u308c\u306f\u3001\u73fe\u5728\u6771\u4eac\u30ac\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u6771\u4eac\u3001\u795e\u5948\u5ddd\u3001\u57fc\u7389\u770c\u306e\u4f4f\u6c11\u306b\u3068\u3063\u3066\u6709\u76ca\u3067\u3059\u3002\u307e\u305f\u3001\u30d7\u30ec\u30df\u30a2\u30e0\u5272\u5f15\u3082\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001\u4f7f\u7528\u91cf\u304c\u591a\u3044\u4eba\u306b\u3068\u3063\u3066\u306f\u5fc5\u898b\u3067\u3059\u3002"
    ],
    "The quarterback of Tokyo Gas still maintains a physique similar to JaMarcus Russell.": [
      "\u6771\u4eac\u30ac\u30b9\u306e\u30af\u30a9\u30fc\u30bf\u30fc\u30d0\u30c3\u30af\u306f\u3001\u30b8\u30e3\u30de\u30fc\u30ab\u30b9\u30fb\u30e9\u30c3\u30bb\u30eb\u3068\u540c\u3058\u3088\u3046\u306a\u4f53\u683c\u3092\u7dad\u6301\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "On the fourth day of the Paris Paralympics, Keiichi Kimura from TOKYOGAS won the men's 50-meter freestyle swimming event for visually impaired (S11) competitors.": [
      "\u30d1\u30ea\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u306e4\u65e5\u76ee\u3001TOKYOGAS\u306e\u6728\u6751\u656c\u4e00\u304c\u8996\u899a\u969c\u5bb3\u8005\uff08S11\uff09\u306e\u7537\u5b5050\u30e1\u30fc\u30c8\u30eb\u81ea\u7531\u5f62\u6c34\u6cf3\u3067\u512a\u52dd\u3057\u307e\u3057\u305f\u3002"
    ],
    "User acknowledges the importance of gas during power outages, positively impacting TOKYOGAS (9531), which saw a 0.58% increase.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u505c\u96fb\u6642\u306e\u30ac\u30b9\u306e\u91cd\u8981\u6027\u3092\u8a8d\u8b58\u3057\u3001TOKYOGAS\uff089531\uff09\u306b\u30d7\u30e9\u30b9\u306e\u5f71\u97ff\u3092\u4e0e\u3048\u30010.58\uff05\u306e\u5897\u52a0\u3092\u898b\u307e\u3057\u305f\u3002"
    ],
    "The September seasonal bath is #ChrysanthemumBath. It's okay to use fresh chrysanthemums. It's a very easy seasonal bath. How about it for today's #BathTime? #TokyoGas #HomeLife #ThisMonth'sBath #SeasonalEvent": [
      "9\u6708\u306e\u5b63\u7bc0\u306e\u98a8\u5442\u306f#\u83ca\u306e\u98a8\u5442\u3067\u3059\u3002\u65b0\u9bae\u306a\u83ca\u3092\u4f7f\u3063\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\u3068\u3066\u3082\u7c21\u5358\u306a\u5b63\u7bc0\u306e\u98a8\u5442\u3067\u3059\u3002\u4eca\u65e5\u306e#BathTime\u306b\u3044\u304b\u304c\u3067\u3059\u304b\uff1f#\u6771\u4eac\u30ac\u30b9 #\u30db\u30fc\u30e0\u30e9\u30a4\u30d5 #\u4eca\u6708\u306e\u98a8\u5442 #\u5b63\u7bc0\u306e\u30a4\u30d9\u30f3\u30c8"
    ],
    "@WCtcJBdXGSOogpC is questioning the motives of a woman who switched jobs from Tokyo Electric Power to Tokyo Gas.": [
      "@WCtcJBdXGSOogpC\u306f\u3001\u6771\u4eac\u96fb\u529b\u304b\u3089\u6771\u4eac\u30ac\u30b9\u306b\u8ee2\u8077\u3057\u305f\u5973\u6027\u306e\u52d5\u6a5f\u3092\u7591\u554f\u8996\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "When considering the final Olympic ice hockey qualifiers (requiring three consecutive victories), one can look at the example of Tokyo Gas (JFL) who achieved three straight wins against Nagoya Grampus, Yokohama Marinos, and Shonan Bellmare.": [
      "\u6700\u7d42\u7684\u306a\u30aa\u30ea\u30f3\u30d4\u30c3\u30af\u30a2\u30a4\u30b9\u30db\u30c3\u30b1\u30fc\u306e\u4e88\u9078\uff083\u9023\u52dd\u304c\u5fc5\u8981\uff09\u3092\u8003\u3048\u308b\u3068\u304d\u3001\u540d\u53e4\u5c4b\u30b0\u30e9\u30f3\u30d1\u30b9\u3001\u6a2a\u6d5c\u30de\u30ea\u30ce\u30b9\u3001\u6e58\u5357\u30d9\u30eb\u30de\u30fc\u30ec\u306b\u5bfe\u3057\u30663\u9023\u52dd\u3092\u9054\u6210\u3057\u305f\u6771\u4eac\u30ac\u30b9\uff08JFL\uff09\u306e\u4f8b\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"
    ],
    "User is unsure about what disaster preparedness items to gather. They suggest starting with poly bags, which they claim are excellent disaster management tools. They introduce three types of poly bags and how to use them. They also share a link for more information. The hashtags used are related to Tokyo Gas, home matters, disaster prevention week, and power outage measures.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u3069\u306e\u9632\u707d\u7528\u54c1\u3092\u96c6\u3081\u308b\u3079\u304d\u304b\u308f\u304b\u3089\u306a\u3044\u3002\u5f7c\u3089\u306f\u30dd\u30ea\u30d0\u30c3\u30b0\u304b\u3089\u59cb\u3081\u308b\u3053\u3068\u3092\u63d0\u6848\u3057\u3001\u305d\u308c\u304c\u512a\u308c\u305f\u707d\u5bb3\u7ba1\u7406\u30c4\u30fc\u30eb\u3067\u3042\u308b\u3068\u4e3b\u5f35\u3057\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f3\u7a2e\u985e\u306e\u30dd\u30ea\u30d0\u30c3\u30b0\u3068\u305d\u306e\u4f7f\u7528\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u8a73\u7d30\u60c5\u5831\u306e\u30ea\u30f3\u30af\u3082\u5171\u6709\u3057\u3066\u3044\u307e\u3059\u3002\u4f7f\u7528\u3055\u308c\u305f\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306f\u6771\u4eac\u30ac\u30b9\u3001\u5bb6\u5ead\u306e\u554f\u984c\u3001\u9632\u707d\u9031\u9593\u3001\u505c\u96fb\u5bfe\u7b56\u306b\u95a2\u9023\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Tokyo Gas seems to be a major customer of Whelen, as they are predominantly adopting Whelen's compact Siren model.": [
      "\u6771\u4eac\u30ac\u30b9\u306fWhelen\u306e\u4e3b\u8981\u306a\u9867\u5ba2\u306e\u3088\u3046\u3067\u3001\u5f7c\u3089\u306f\u4e3b\u306bWhelen\u306e\u30b3\u30f3\u30d1\u30af\u30c8\u306a\u30b5\u30a4\u30ec\u30f3\u30e2\u30c7\u30eb\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "@x_azuk_x reported that the Tokyo Gas inspection was conducted and everything was safe. They also mentioned that there was no smell in any other rooms, indicating that all areas were checked.": [
      "@x_azuk_x\u306f\u6771\u4eac\u30ac\u30b9\u306e\u691c\u67fb\u304c\u884c\u308f\u308c\u3001\u3059\u3079\u3066\u304c\u5b89\u5168\u3067\u3042\u3063\u305f\u3068\u5831\u544a\u3057\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u4ed6\u306e\u90e8\u5c4b\u306b\u306f\u81ed\u3044\u304c\u306a\u304b\u3063\u305f\u3068\u3082\u8ff0\u3079\u3066\u304a\u308a\u3001\u3059\u3079\u3066\u306e\u30a8\u30ea\u30a2\u304c\u30c1\u30a7\u30c3\u30af\u3055\u308c\u305f\u3053\u3068\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "The author has rewritten a blog post introducing two high-dividend stocks in the electricity and gas industry: Denko Kaihatsu (9513) and Tokyo Gas (9531). They have added images where needed and clarified confusing text. They suggest using this as a reference for investment.": [
      "\u8457\u8005\u306f\u96fb\u6c17\u3068\u30ac\u30b9\u696d\u754c\u306e2\u3064\u306e\u9ad8\u914d\u5f53\u682a\u3001\u96fb\u5de5\u958b\u767a\uff089513\uff09\u3068\u6771\u4eac\u30ac\u30b9\uff089531\uff09\u3092\u7d39\u4ecb\u3059\u308b\u30d6\u30ed\u30b0\u8a18\u4e8b\u3092\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\u3002\u5fc5\u8981\u306a\u3068\u3053\u308d\u306b\u753b\u50cf\u3092\u8ffd\u52a0\u3057\u3001\u6df7\u4e71\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u3092\u660e\u78ba\u306b\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u3092\u6295\u8cc7\u306e\u53c2\u8003\u306b\u3059\u308b\u3053\u3068\u3092\u63d0\u6848\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Tokyo Gas Co., Ltd. and Tokyo Electric Power Energy Partner Co., Ltd. each handle electricity and gas. This seems complicated.": [
      "\u6771\u4eac\u30ac\u30b9\u682a\u5f0f\u4f1a\u793e\u3068\u6771\u4eac\u96fb\u529b\u30a8\u30cd\u30eb\u30ae\u30fc\u30d1\u30fc\u30c8\u30ca\u30fc\u682a\u5f0f\u4f1a\u793e\u306f\u305d\u308c\u305e\u308c\u96fb\u6c17\u3068\u30ac\u30b9\u3092\u6271\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u8907\u96d1\u306b\u601d\u3048\u307e\u3059\u3002"
    ],
    "The user is discussing the Lions baseball team, expressing regret that they missed out on acquiring Misho. They mention that the other candidates for center fielder are Nakao and Chinen from Tokyo Gas. They suggest that keeping Kaneko as a backup or relief might have been a good idea, but they also acknowledge that Akiyama is returning.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u30e9\u30a4\u30aa\u30f3\u30ba\u306e\u91ce\u7403\u30c1\u30fc\u30e0\u306b\u3064\u3044\u3066\u8a71\u3057\u3001\u4e09\u7363\u3092\u7372\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u5f8c\u6094\u3057\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u30bb\u30f3\u30bf\u30fc\u30d5\u30a3\u30fc\u30eb\u30c0\u30fc\u306e\u4ed6\u306e\u5019\u88dc\u8005\u3068\u3057\u3066\u6771\u4eac\u30ac\u30b9\u306e\u4e2d\u5c3e\u3068\u77e5\u5ff5\u3092\u6319\u3052\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u91d1\u5b50\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3084\u30ea\u30ea\u30fc\u30d5\u3068\u3057\u3066\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u826f\u3044\u30a2\u30a4\u30c7\u30a2\u3060\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u63d0\u6848\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u79cb\u5c71\u304c\u623b\u3063\u3066\u304f\u308b\u3053\u3068\u3082\u8a8d\u3081\u3066\u3044\u307e\u3059\u3002"
    ],
    "Despite the existence of Tokyo Gas and Toho Gas, there is no Osaka Gas, but there is Kansai Electric Power. This raises questions about a possible conspiracy.": [
      "\u6771\u4eac\u30ac\u30b9\u3068\u6771\u90a6\u30ac\u30b9\u306e\u5b58\u5728\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u5927\u962a\u30ac\u30b9\u306f\u306a\u304f\u3001\u95a2\u897f\u96fb\u529b\u306f\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u53ef\u80fd\u6027\u306e\u3042\u308b\u9670\u8b00\u306b\u3064\u3044\u3066\u306e\u7591\u554f\u3092\u63d0\u8d77\u3057\u307e\u3059\u3002"
    ],
    "Once the room coordination is somewhat complete, I plan to request air conditioner cleaning. I trust the cleaning services of TOKYOGAS.": [
      "\u90e8\u5c4b\u306e\u30b3\u30fc\u30c7\u30a3\u30cd\u30fc\u30c8\u304c\u3042\u308b\u7a0b\u5ea6\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30a8\u30a2\u30b3\u30f3\u306e\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u3092\u4f9d\u983c\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002TOKYOGAS\u306e\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u3092\u4fe1\u983c\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Keiichi Kimura, a 33-year-old competitive swimmer from TOKYOGAS, won the gold medal in the men's 50-meter freestyle (visual impairment S11) at the fourth day of the Paris Paralympics on August 31, with a time of 25.98 seconds.": [
      "TOKYOGAS\u306e\u7af6\u6cf3\u9078\u624b\u3067\u3042\u308b33\u6b73\u306e\u6728\u6751\u6176\u4e00\u3055\u3093\u304c\u30018\u670831\u65e5\u306e\u30d1\u30ea\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u306e4\u65e5\u76ee\u306b\u3001\u7537\u5b5050\u30e1\u30fc\u30c8\u30eb\u81ea\u7531\u5f62\uff08\u8996\u899a\u969c\u5bb3S11\uff09\u306725.98\u79d2\u306e\u30bf\u30a4\u30e0\u3067\u91d1\u30e1\u30c0\u30eb\u3092\u7372\u5f97\u3057\u307e\u3057\u305f\u3002"
    ],
    "@ayqtsuji is discussing the electricity and gas set from TOKYOGAS. They mention that while the set might be slightly cheaper, they feel there might not be much difference no matter which company one chooses to use.": [
      "@ayqtsuji\u306fTOKYOGAS\u304b\u3089\u306e\u96fb\u6c17\u3068\u30ac\u30b9\u306e\u30bb\u30c3\u30c8\u306b\u3064\u3044\u3066\u8a71\u3057\u3066\u3044\u307e\u3059\u3002\u30bb\u30c3\u30c8\u306f\u5c11\u3057\u5b89\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u3069\u306e\u4f1a\u793e\u3092\u9078\u3093\u3067\u3082\u3042\u307e\u308a\u9055\u3044\u306f\u306a\u3044\u3068\u611f\u3058\u3066\u3044\u308b\u3068\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002"
    ],
    "A user complained about TOKYOGAS's smoke detector, stating they were charged a lease fee without being informed about the cost beforehand. They are wondering if anything can be done about it now.": [
      "\u30e6\u30fc\u30b6\u30fc\u306fTOKYOGAS\u306e\u7159\u611f\u77e5\u5668\u306b\u3064\u3044\u3066\u4e0d\u6e80\u3092\u8ff0\u3079\u3001\u4e8b\u524d\u306b\u8cbb\u7528\u306b\u3064\u3044\u3066\u77e5\u3089\u3055\u308c\u305a\u306b\u30ea\u30fc\u30b9\u6599\u304c\u8acb\u6c42\u3055\u308c\u305f\u3068\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002\u4eca\u304b\u3089\u4f55\u304b\u5bfe\u7b56\u304c\u53d6\u308c\u308b\u304b\u3069\u3046\u304b\u7591\u554f\u306b\u601d\u3063\u3066\u3044\u307e\u3059\u3002"
    ],
    "@o2VseNrtPRwVAOF criticizes the president of TOKYOGAS, comparing large corporations to large ships that can continue to operate for a while even if the leadership is incompetent. They believe this is especially true for gas companies.": [
      "@o2VseNrtPRwVAOF\u306fTOKYOGAS\u306e\u793e\u9577\u3092\u6279\u5224\u3057\u3001\u5927\u4f01\u696d\u3092\u30ea\u30fc\u30c0\u30fc\u30b7\u30c3\u30d7\u304c\u7121\u80fd\u3067\u3082\u3057\u3070\u3089\u304f\u904b\u55b6\u3092\u7d9a\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5927\u304d\u306a\u8239\u306b\u4f8b\u3048\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u3053\u308c\u304c\u7279\u306b\u30ac\u30b9\u4f1a\u793e\u306b\u5f53\u3066\u306f\u307e\u308b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002"
    ],
    "What is Tokyo Gas's demand response service that supports the future? Topics include: demand response, storage batteries, renewable energy, sustainability, Igniture, energy efficiency, power supply, smart homes, and eco-life.": [
      "\u6771\u4eac\u30ac\u30b9\u306e\u5c06\u6765\u3092\u652f\u3048\u308b\u9700\u8981\u5fdc\u7b54\u30b5\u30fc\u30d3\u30b9\u3068\u306f\u4f55\u3067\u3059\u304b\uff1f\u30c8\u30d4\u30c3\u30af\u306b\u306f\u3001\u9700\u8981\u5fdc\u7b54\u3001\u84c4\u96fb\u6c60\u3001\u518d\u751f\u53ef\u80fd\u30a8\u30cd\u30eb\u30ae\u30fc\u3001\u6301\u7d9a\u53ef\u80fd\u6027\u3001Igniture\u3001\u30a8\u30cd\u30eb\u30ae\u30fc\u52b9\u7387\u3001\u96fb\u529b\u4f9b\u7d66\u3001\u30b9\u30de\u30fc\u30c8\u30db\u30fc\u30e0\u3001\u30a8\u30b3\u30e9\u30a4\u30d5\u304c\u542b\u307e\u308c\u307e\u3059\u3002"
    ],
    "Tokyo Gas is conducting a demonstration project in Yokohama City, utilizing reclaimed water and digested gas from sewage facilities to produce e-methane.": [
      "\u6771\u4eac\u30ac\u30b9\u306f\u3001\u4e0b\u6c34\u51e6\u7406\u65bd\u8a2d\u304b\u3089\u306e\u518d\u751f\u6c34\u3068\u6d88\u5316\u30ac\u30b9\u3092\u5229\u7528\u3057\u3066e-\u30e1\u30bf\u30f3\u3092\u751f\u7523\u3059\u308b\u3001\u6a2a\u6d5c\u5e02\u3067\u306e\u5b9f\u8a3c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002"
    ],
    "The Tokyo Gas radio commercial, known for its excellence, has had a critical impact on my household. It accurately portrays a woman persuading a reluctant family member to take a bath. Today, when I hesitated to take a bath, I was asked, 'What? Is it Tokyo Gas again today?'": [
      "\u512a\u308c\u305f\u6771\u4eac\u30ac\u30b9\u306e\u30e9\u30b8\u30aa\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u306f\u3001\u79c1\u306e\u5bb6\u5ead\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u307e\u3057\u305f\u3002\u305d\u308c\u306f\u6b63\u78ba\u306b\u3001\u98a8\u5442\u306b\u5165\u308b\u306e\u3092\u305f\u3081\u3089\u3063\u3066\u3044\u308b\u5bb6\u65cf\u3092\u8aac\u5f97\u3059\u308b\u5973\u6027\u3092\u63cf\u3044\u3066\u3044\u307e\u3059\u3002\u4eca\u65e5\u3001\u79c1\u304c\u98a8\u5442\u306b\u5165\u308b\u306e\u3092\u305f\u3081\u3089\u3063\u305f\u3068\u304d\u3001'\u4f55\uff1f\u4eca\u65e5\u3082\u6771\u4eac\u30ac\u30b9\u304b\uff1f'\u3068\u805e\u304b\u308c\u307e\u3057\u305f\u3002"
    ],
    "A two-minute promotional video featuring Ienaga was aired on NHK. The sudden appearance of Mr. Machida on the TV screen was heart-pounding and felt like time had stopped. I wonder if people in Kanto, who can watch Tokyo Gas commercials, always get to experience this. It must be nice.": [
      "\u5bb6\u6c38\u3055\u3093\u3092\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u3057\u305f2\u5206\u9593\u306e\u30d7\u30ed\u30e2\u30fc\u30b7\u30e7\u30f3\u30d3\u30c7\u30aa\u304cNHK\u3067\u653e\u9001\u3055\u308c\u307e\u3057\u305f\u3002\u753a\u7530\u3055\u3093\u304c\u7a81\u7136\u30c6\u30ec\u30d3\u753b\u9762\u306b\u73fe\u308c\u305f\u306e\u306f\u30c9\u30ad\u30c9\u30ad\u3057\u3066\u6642\u9593\u304c\u6b62\u307e\u3063\u305f\u3088\u3046\u306b\u611f\u3058\u307e\u3057\u305f\u3002\u6771\u4eac\u30ac\u30b9\u306e\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u95a2\u6771\u306e\u4eba\u3005\u306f\u3001\u3053\u308c\u3092\u3044\u3064\u3082\u4f53\u9a13\u3067\u304d\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u305d\u308c\u306f\u7d20\u6674\u3089\u3057\u3044\u3053\u3068\u3067\u3057\u3087\u3046\u3002"
    ],
    "The commercials of TOKYOGAS are excellent, they always move me to tears or give me goosebumps.": [
      "TOKYOGAS\u306e\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u306f\u7d20\u6674\u3089\u3057\u304f\u3001\u3044\u3064\u3082\u79c1\u3092\u6d99\u306b\u6253\u3061\u9707\u3048\u3055\u305b\u305f\u308a\u3001\u9ce5\u808c\u3092\u7acb\u305f\u305b\u305f\u308a\u3057\u307e\u3059\u3002"
    ],
    "@1CZWiWBfJDuO67R had an experience in Yokohama where they were made to participate in an evacuation drill when they went for an underground survey with TOKYOGAS on September 1. They believe it was in the early afternoon.": [
      "@1CZWiWBfJDuO67R\u306f\u30019\u67081\u65e5\u306bTOKYOGAS\u3068\u5730\u4e0b\u8abf\u67fb\u306b\u884c\u3063\u305f\u969b\u306b\u3001\u6a2a\u6d5c\u3067\u907f\u96e3\u8a13\u7df4\u306b\u53c2\u52a0\u3055\u305b\u3089\u308c\u305f\u7d4c\u9a13\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f\u5348\u5f8c\u65e9\u304f\u3060\u3063\u305f\u3068\u5f7c\u3089\u306f\u4fe1\u3058\u3066\u3044\u307e\u3059\u3002"
    ],
    "Keiichi Kimura, an alumnus of Nihon University and currently with Tokyo Gas, won a gold medal in the men's 50m freestyle (visual impairment S11) at the Paris Paralympics. He set a new Japanese record with his win. Congratulations to Kimura.": [
      "\u65e5\u672c\u5927\u5b66\u306e\u5352\u696d\u751f\u3067\u73fe\u5728\u6771\u4eac\u30ac\u30b9\u306b\u6240\u5c5e\u3057\u3066\u3044\u308b\u6728\u6751\u656c\u4e00\u306f\u3001\u30d1\u30ea\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u306e\u7537\u5b5050m\u81ea\u7531\u5f62\uff08\u8996\u899a\u969c\u5bb3S11\uff09\u3067\u91d1\u30e1\u30c0\u30eb\u3092\u7372\u5f97\u3057\u307e\u3057\u305f\u3002\u5f7c\u306e\u52dd\u5229\u3067\u65b0\u305f\u306a\u65e5\u672c\u8a18\u9332\u3092\u6a39\u7acb\u3057\u307e\u3057\u305f\u3002\u6728\u6751\u3055\u3093\u3001\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002"
    ],
    "The user expresses concern about TOKYOGAS, stating that despite only using 37 cubic meters of gas, their meter was replaced again. They question if this is a scheme to increase profits. They also express distrust towards capitalists, politicians, and bureaucrats.": [
      "\u30e6\u30fc\u30b6\u30fc\u306fTOKYOGAS\u306b\u3064\u3044\u3066\u61f8\u5ff5\u3092\u8868\u660e\u3057\u3066\u304a\u308a\u3001\u30ac\u30b9\u309237\u7acb\u65b9\u30e1\u30fc\u30c8\u30eb\u3057\u304b\u4f7f\u7528\u3057\u3066\u3044\u306a\u3044\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u30e1\u30fc\u30bf\u30fc\u304c\u518d\u5ea6\u4ea4\u63db\u3055\u308c\u305f\u3068\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u5229\u76ca\u3092\u5897\u3084\u3059\u305f\u3081\u306e\u7b56\u7565\u306a\u306e\u304b\u3068\u7591\u554f\u3092\u5448\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u5f7c\u3089\u306f\u8cc7\u672c\u5bb6\u3001\u653f\u6cbb\u5bb6\u3001\u5b98\u50da\u306b\u5bfe\u3059\u308b\u4e0d\u4fe1\u611f\u3082\u8868\u660e\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Join the Dia de los Muertos Challenge for a weight loss journey! This virtual challenge covers a 98mi(158km) circular route, beginning and concluding in Oaxaca City. Register today!": [
      "\u30c0\u30a4\u30a8\u30c3\u30c8\u306e\u65c5\u306b\u30c7\u30a3\u30a2\u30fb\u30c7\u30fb\u30ed\u30b9\u30fb\u30e0\u30a8\u30eb\u30c8\u30b9\u30fb\u30c1\u30e3\u30ec\u30f3\u30b8\u306b\u53c2\u52a0\u3057\u307e\u3057\u3087\u3046\uff01\u3053\u306e\u30d0\u30fc\u30c1\u30e3\u30eb\u30c1\u30e3\u30ec\u30f3\u30b8\u306f\u3001\u30aa\u30a2\u30cf\u30ab\u5e02\u3092\u8d77\u70b9\u3068\u7d42\u70b9\u3068\u3059\u308b98\u30de\u30a4\u30eb\uff08158km\uff09\u306e\u5faa\u74b0\u30eb\u30fc\u30c8\u3092\u30ab\u30d0\u30fc\u3057\u307e\u3059\u3002\u4eca\u65e5\u767b\u9332\u3057\u307e\u3057\u3087\u3046\uff01"
    ],
    "Keiichi Kimura, a Paralympic swimmer sponsored by Tokyo Gas, won a gold medal in the 50m freestyle at the Paris 2024 Paralympics. He is also scheduled to compete in the 100m butterfly, with the preliminary round on September 6th around 18:25 and the final round on September 7th around 3:04. Continued support is appreciated.": [
      "\u6771\u4eac\u30ac\u30b9\u304c\u30b9\u30dd\u30f3\u30b5\u30fc\u306e\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u30b9\u30a4\u30de\u30fc\u3001\u6728\u6751\u656c\u4e00\u306f\u3001\u30d1\u30ea2024\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u306e50m\u81ea\u7531\u5f62\u3067\u91d1\u30e1\u30c0\u30eb\u3092\u7372\u5f97\u3057\u307e\u3057\u305f\u3002\u5f7c\u306f\u307e\u305f\u30019\u67086\u65e5\u306e18:25\u9803\u306b\u4e88\u9078\u30019\u67087\u65e5\u306e3:04\u9803\u306b\u6c7a\u52dd\u304c\u884c\u308f\u308c\u308b100m\u30d0\u30bf\u30d5\u30e9\u30a4\u306b\u51fa\u5834\u4e88\u5b9a\u3067\u3059\u3002\u5f15\u304d\u7d9a\u304d\u306e\u5fdc\u63f4\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002"
    ],
    "The user is jokingly apologizing to TOKYOGAS for making them a topic of discussion, while affirming they will continue to pay their monthly gas and electricity bills. They also mention hashtags related to stamp festivals and championships.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u3001TOKYOGAS\u3092\u8a71\u984c\u306b\u3057\u305f\u3053\u3068\u3092\u5197\u8ac7\u534a\u5206\u3067\u8b1d\u7f6a\u3057\u3001\u6bce\u6708\u306e\u30ac\u30b9\u3068\u96fb\u6c17\u306e\u8acb\u6c42\u3092\u652f\u6255\u3044\u7d9a\u3051\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u5f7c\u3089\u306f\u5207\u624b\u796d\u308a\u3084\u9078\u624b\u6a29\u306b\u95a2\u9023\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u306b\u3064\u3044\u3066\u3082\u8a00\u53ca\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "The 4th term of the 'side project', where 20% of working hours are dedicated to participating in ventures, has begun. 36 personnel from 8 major companies including IHI, Asahi Kasei, KDDI, SOMPO Holdings, TOKYOGAS, NGK Insulators, Japan Post, and Hankyu Hanshin Real Estate have started projects at 27 startups.": [
      "\u300c\u30b5\u30a4\u30c9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u300d\u306e\u7b2c4\u671f\u304c\u59cb\u307e\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001\u52b4\u50cd\u6642\u9593\u306e20\uff05\u3092\u30d9\u30f3\u30c1\u30e3\u30fc\u306b\u53c2\u52a0\u3059\u308b\u305f\u3081\u306b\u5272\u308a\u5f53\u3066\u308b\u3082\u306e\u3067\u3059\u3002IHI\u3001\u65ed\u5316\u6210\u3001KDDI\u3001SOMPO\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9\u3001TOKYOGAS\u3001NGK\u30a4\u30f3\u30b5\u30ec\u30fc\u30bf\u30fc\u30ba\u3001\u65e5\u672c\u90f5\u4fbf\u3001\u962a\u6025\u962a\u795e\u4e0d\u52d5\u7523\u3092\u542b\u30808\u3064\u306e\u5927\u624b\u4f01\u696d\u304b\u308936\u540d\u306e\u4eba\u54e1\u304c27\u306e\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u59cb\u3057\u307e\u3057\u305f\u3002"
    ],
    "Despite initial expectations for Enefarm, it seems challenging given Tokyo Gas's lack of enthusiasm. Why are they selling toilets and batteries instead of fuel cells? It's unclear what their business focus is.": [
      "\u30a8\u30cd\u30d5\u30a1\u30fc\u30e0\u306b\u5bfe\u3059\u308b\u5f53\u521d\u306e\u671f\u5f85\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u6771\u4eac\u30ac\u30b9\u306e\u71b1\u610f\u306e\u6b20\u5982\u3092\u8003\u3048\u308b\u3068\u3001\u305d\u308c\u306f\u96e3\u3057\u3044\u3088\u3046\u3067\u3059\u3002\u306a\u305c\u5f7c\u3089\u306f\u71c3\u6599\u96fb\u6c60\u306e\u4ee3\u308f\u308a\u306b\u30c8\u30a4\u30ec\u3084\u30d0\u30c3\u30c6\u30ea\u30fc\u3092\u8ca9\u58f2\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u5f7c\u3089\u306e\u30d3\u30b8\u30cd\u30b9\u306e\u7126\u70b9\u304c\u4f55\u3067\u3042\u308b\u304b\u306f\u4e0d\u660e\u3067\u3059\u3002"
    ],
    "Keiichi Kimura, a swimmer from TOKYOGAS, won the gold medal in the men's 50m freestyle for visually impaired at the Paralympics. He is scheduled to participate in the 'Tokyo 2025 World Athletics 1 Year To Go!' event at Tokyo Dome City on September 14th, from 15:00 to 15:30. He will share his thoughts on the Paris 2024 Paralympics and his new challenges.": [
      "TOKYOGAS\u306e\u30b9\u30a4\u30de\u30fc\u3067\u3042\u308b\u6728\u6751\u656c\u4e00\u306f\u3001\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u306e\u7537\u5b5050m\u81ea\u7531\u5f62\u8996\u899a\u969c\u5bb3\u90e8\u9580\u3067\u91d1\u30e1\u30c0\u30eb\u3092\u7372\u5f97\u3057\u307e\u3057\u305f\u3002\u5f7c\u306f9\u670814\u65e5\u306e15:00\u304b\u308915:30\u306b\u6771\u4eac\u30c9\u30fc\u30e0\u30b7\u30c6\u30a3\u3067\u958b\u50ac\u3055\u308c\u308b\u300c\u6771\u4eac2025\u4e16\u754c\u9678\u4e0a1\u5e74\u524d\uff01\u300d\u30a4\u30d9\u30f3\u30c8\u306b\u53c2\u52a0\u4e88\u5b9a\u3067\u3059\u3002\u5f7c\u306f\u30d1\u30ea2024\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u3068\u65b0\u305f\u306a\u6311\u6226\u306b\u3064\u3044\u3066\u306e\u601d\u3044\u3092\u8a9e\u308b\u4e88\u5b9a\u3067\u3059\u3002"
    ],
    "UK's Octopus Energy, a new power company in the Tokyo Gas Group, discusses its strategy and the barriers to liberalization, stating that 'there's no problem even with excess debt'.": [
      "\u30a4\u30ae\u30ea\u30b9\u306eOctopus Energy\u306f\u3001\u6771\u4eac\u30ac\u30b9\u30b0\u30eb\u30fc\u30d7\u306e\u65b0\u3057\u3044\u96fb\u529b\u4f1a\u793e\u3067\u3001\u305d\u306e\u6226\u7565\u3068\u81ea\u7531\u5316\u3078\u306e\u969c\u58c1\u306b\u3064\u3044\u3066\u8a9e\u308a\u3001\u300c\u904e\u5270\u306a\u8ca0\u50b5\u304c\u3042\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u300d\u3068\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002"
    ],
    "On July 22, 2024, Koganei City and Tokyo Gas signed a partnership agreement to promote the 'Zero Carbon City' declaration, aiming for virtually zero CO2 emissions by 2050. This is a significant step towards a sustainable future.": [
      "2024\u5e747\u670822\u65e5\u3001\u5c0f\u91d1\u4e95\u5e02\u3068\u6771\u4eac\u30ac\u30b9\u306f\u3001\u300c\u30bc\u30ed\u30ab\u30fc\u30dc\u30f3\u30b7\u30c6\u30a3\u300d\u5ba3\u8a00\u3092\u63a8\u9032\u3059\u308b\u305f\u3081\u306e\u30d1\u30fc\u30c8\u30ca\u30fc\u30b7\u30c3\u30d7\u5951\u7d04\u3092\u7de0\u7d50\u3057\u30012050\u5e74\u307e\u3067\u306bCO2\u6392\u51fa\u91cf\u3092\u307b\u307c\u30bc\u30ed\u306b\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u6301\u7d9a\u53ef\u80fd\u306a\u672a\u6765\u306b\u5411\u3051\u305f\u91cd\u8981\u306a\u4e00\u6b69\u3067\u3059\u3002"
    ],
    "This game is highly addictive, especially for those who have a mouse. Try playing it for a minute to understand why it's so popular.": [
      "\u3053\u306e\u30b2\u30fc\u30e0\u306f\u975e\u5e38\u306b\u4e2d\u6bd2\u6027\u304c\u3042\u308a\u3001\u7279\u306b\u30de\u30a6\u30b9\u3092\u6301\u3063\u3066\u3044\u308b\u4eba\u306b\u3068\u3063\u3066\u306f\u305d\u3046\u3067\u3059\u3002\u306a\u305c\u3053\u308c\u304c\u4eba\u6c17\u306a\u306e\u304b\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u30011\u5206\u9593\u30d7\u30ec\u30a4\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002"
    ],
    "The user is choosing Tokyo Gas and Cosmo Electricity. They are questioning if NURO Hikari is different from Sonnet.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u6771\u4eac\u30ac\u30b9\u3068\u30b3\u30b9\u30e2\u96fb\u529b\u3092\u9078\u3093\u3067\u3044\u307e\u3059\u3002\u5f7c\u3089\u306fNURO\u5149\u304cSonnet\u3068\u306f\u7570\u306a\u308b\u304b\u3069\u3046\u304b\u7591\u554f\u306b\u601d\u3063\u3066\u3044\u307e\u3059\u3002"
    ],
    "On September 1, Keiichi Kimura, a swimmer from Shiga Prefecture and member of Tokyo Gas, won a gold medal in the men's 50m freestyle (S11 - total blindness) at the Paralympics in Paris. He set a new Japanese record with a time of 25.98 seconds, improving his previous record by 0.07 seconds. This is his second consecutive gold medal following the Tokyo Games. Congratulations to Kimura.": [
      "9\u67081\u65e5\u3001\u6ecb\u8cc0\u770c\u51fa\u8eab\u3067\u6771\u4eac\u30ac\u30b9\u6240\u5c5e\u306e\u6c34\u6cf3\u9078\u624b\u3001\u6728\u6751\u656c\u4e00\u9078\u624b\u304c\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u30fb\u30d1\u30ea\u5927\u4f1a\u306e\u7537\u5b5050m\u81ea\u7531\u5f62\uff08S11 - \u5168\u76f2\uff09\u3067\u91d1\u30e1\u30c0\u30eb\u3092\u7372\u5f97\u3057\u307e\u3057\u305f\u3002\u5f7c\u306f25.98\u79d2\u3068\u3044\u3046\u65b0\u305f\u306a\u65e5\u672c\u8a18\u9332\u3092\u6a39\u7acb\u3057\u3001\u81ea\u8eab\u306e\u524d\u56de\u306e\u8a18\u9332\u30920.07\u79d2\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u5f7c\u304c\u6771\u4eac\u5927\u4f1a\u306b\u7d9a\u3044\u30662\u9023\u8987\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u6728\u6751\u9078\u624b\u3001\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002"
    ],
    "A call from TOKYOGAS mentioned instances of gas companies being switched without the customer's knowledge. Could it be that everyone is just switching to cheaper companies? There seems to be no more benefits with Tokyo Electric Power Company & TOKYOGAS. Here's a site for reviewing electricity and gas options: https://t.co/KCjamcHdOV.": [
      "TOKYOGAS\u304b\u3089\u306e\u96fb\u8a71\u3067\u306f\u3001\u9867\u5ba2\u306e\u77e5\u3089\u306a\u3044\u9593\u306b\u30ac\u30b9\u4f1a\u793e\u304c\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u4e8b\u4f8b\u304c\u8a00\u53ca\u3055\u308c\u307e\u3057\u305f\u3002\u3082\u3057\u304b\u3057\u3066\u3001\u307f\u3093\u306a\u304c\u305f\u3060\u5b89\u3044\u4f1a\u793e\u306b\u5207\u308a\u66ff\u3048\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u6771\u4eac\u96fb\u529b\u3068TOKYOGAS\u3068\u306e\u5229\u70b9\u306f\u3082\u3046\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u3053\u3053\u306b\u96fb\u6c17\u3068\u30ac\u30b9\u306e\u9078\u629e\u80a2\u3092\u30ec\u30d3\u30e5\u30fc\u3059\u308b\u30b5\u30a4\u30c8\u304c\u3042\u308a\u307e\u3059\uff1ahttps://t.co/KCjamcHdOV\u3002"
    ],
    "The 48th All Japan Club Baseball Championship is about to start the semi-finals. The commentary is by Kikuchi Soumitsu, former Tokyo Gas director, and the live coverage is by Yano Yoshihiko. The first match is scheduled to start at 8:30, with Showa Corporation vs. Efcom BC. The event can be followed on the special site within the Mainichi Newspaper Digital.": [
      "\u7b2c48\u56de\u5168\u65e5\u672c\u30af\u30e9\u30d6\u91ce\u7403\u9078\u624b\u6a29\u306f\u6e96\u6c7a\u52dd\u306e\u958b\u59cb\u3092\u63a7\u3048\u3066\u3044\u307e\u3059\u3002\u89e3\u8aac\u306f\u5143\u6771\u4eac\u30ac\u30b9\u76e3\u7763\u306e\u83ca\u5730\u5b97\u5149\u6c0f\u3001\u5b9f\u6cc1\u306f\u77e2\u91ce\u7fa9\u5f66\u6c0f\u304c\u62c5\u5f53\u3057\u307e\u3059\u3002\u7b2c\u4e00\u8a66\u5408\u306f8:30\u306b\u958b\u59cb\u4e88\u5b9a\u3067\u3001\u662d\u548c\u30b3\u30fc\u30dd\u30ec\u30fc\u30b7\u30e7\u30f3\u5bfeEfcom BC\u3067\u3059\u3002\u3053\u306e\u30a4\u30d9\u30f3\u30c8\u306f\u6bce\u65e5\u65b0\u805e\u30c7\u30b8\u30bf\u30eb\u5185\u306e\u7279\u8a2d\u30b5\u30a4\u30c8\u3067\u30d5\u30a9\u30ed\u30fc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"
    ],
    "The user was unaware that TOKYOGAS had introduced Kraken and Kraken Flex. They shared a link discussing the strategy of Octopus Energy, a new power company in the Tokyo Gas Group, and the barriers to liberalization, stating that being over-indebted is not a problem.": [
      "\u30e6\u30fc\u30b6\u30fc\u306fTOKYOGAS\u304cKraken\u3068Kraken Flex\u3092\u5c0e\u5165\u3057\u305f\u3053\u3068\u3092\u77e5\u3089\u306a\u304b\u3063\u305f\u3002\u5f7c\u3089\u306f\u3001\u6771\u4eac\u30ac\u30b9\u30b0\u30eb\u30fc\u30d7\u306e\u65b0\u3057\u3044\u96fb\u529b\u4f1a\u793e\u3067\u3042\u308bOctopus Energy\u306e\u6226\u7565\u3068\u81ea\u7531\u5316\u3078\u306e\u969c\u58c1\u306b\u3064\u3044\u3066\u8a9e\u308b\u30ea\u30f3\u30af\u3092\u5171\u6709\u3057\u3001\u904e\u5270\u306a\u8ca0\u50b5\u304c\u3042\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u3068\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002"
    ],
    "Tokyo Gas and Yokohama City have started a demonstration project on August 29 to produce e-methane from sewage resources. The regenerated water and digestion gas generated at the Northern Yokohama Sewage Center will be transported to Tokyo Gas's facilities to produce hydrogen and e-methane.": [
      "\u6771\u4eac\u30ac\u30b9\u3068\u6a2a\u6d5c\u5e02\u306f8\u670829\u65e5\u306b\u3001\u4e0b\u6c34\u8cc7\u6e90\u304b\u3089e-\u30e1\u30bf\u30f3\u3092\u751f\u7523\u3059\u308b\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u59cb\u3057\u307e\u3057\u305f\u3002\u5317\u6a2a\u6d5c\u4e0b\u6c34\u30bb\u30f3\u30bf\u30fc\u3067\u751f\u6210\u3055\u308c\u308b\u518d\u751f\u6c34\u3068\u6d88\u5316\u30ac\u30b9\u306f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u65bd\u8a2d\u306b\u904b\u3070\u308c\u3066\u6c34\u7d20\u3068e-\u30e1\u30bf\u30f3\u3092\u751f\u7523\u3057\u307e\u3059\u3002"
    ],
    "Tokyo Gas's energy-saving time is not energy-saving at all.": [
      "\u6771\u4eac\u30ac\u30b9\u306e\u7bc0\u96fb\u6642\u9593\u306f\u5168\u304f\u7bc0\u96fb\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002"
    ],
    "Just realized the reason for my high electricity bill. An additional charge for power procurement adjustment has been applied since June 2023. Those who contracted for electricity after the start are not affected, but those with old plan contracts have been paying about 25,000 yen more over a year without any automatic changes. The change procedure will be completed in about 1.5 months. Considering switching from au Denki to TOKYOGAS.": [
      "\u79c1\u306e\u9ad8\u3044\u96fb\u6c17\u6599\u91d1\u306e\u7406\u7531\u3092\u3061\u3087\u3046\u3069\u7406\u89e3\u3057\u307e\u3057\u305f\u30022023\u5e746\u6708\u4ee5\u964d\u3001\u96fb\u529b\u8abf\u9054\u8abf\u6574\u306e\u8ffd\u52a0\u6599\u91d1\u304c\u9069\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u958b\u59cb\u5f8c\u306b\u96fb\u6c17\u3092\u5951\u7d04\u3057\u305f\u4eba\u306f\u5f71\u97ff\u3092\u53d7\u3051\u307e\u305b\u3093\u304c\u3001\u53e4\u3044\u30d7\u30e9\u30f3\u306e\u5951\u7d04\u3092\u3057\u3066\u3044\u308b\u4eba\u306f\u3001\u81ea\u52d5\u7684\u306a\u5909\u66f4\u304c\u306a\u3044\u307e\u307e1\u5e74\u9593\u3067\u7d0425,000\u5186\u591a\u304f\u652f\u6255\u3063\u3066\u3044\u307e\u3057\u305f\u3002\u5909\u66f4\u624b\u7d9a\u304d\u306f\u7d041.5\u30f6\u6708\u3067\u5b8c\u4e86\u3057\u307e\u3059\u3002au\u96fb\u6c17\u304b\u3089TOKYOGAS\u3078\u306e\u5207\u308a\u66ff\u3048\u3092\u691c\u8a0e\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Tokyo Gas player, Masaki Kato, has shared a photo of him using our arm sleeve. He participated in the Koshien tournament with Kotaro Kiyomiya during his time at Waseda Jitsugyo. Tokyo Gas is scheduled to play their first game in the 49th Corporate Baseball Japan Championship Kanto Representative Deciding Match at Ota Stadium on Tuesday. We are cheering for them.": [
      "\u6771\u4eac\u30ac\u30b9\u306e\u9078\u624b\u3001\u52a0\u85e4\u6b63\u6a39\u3055\u3093\u304c\u3001\u79c1\u305f\u3061\u306e\u30a2\u30fc\u30e0\u30b9\u30ea\u30fc\u30d6\u3092\u4f7f\u3063\u3066\u3044\u308b\u5199\u771f\u3092\u5171\u6709\u3057\u307e\u3057\u305f\u3002\u5f7c\u306f\u65e9\u7a32\u7530\u5b9f\u696d\u306e\u6642\u4ee3\u306b\u6e05\u5bae\u5e78\u592a\u90ce\u3068\u5171\u306b\u7532\u5b50\u5712\u5927\u4f1a\u306b\u53c2\u52a0\u3057\u307e\u3057\u305f\u3002\u6771\u4eac\u30ac\u30b9\u306f\u3001\u706b\u66dc\u65e5\u306b\u5927\u7530\u30b9\u30bf\u30b8\u30a2\u30e0\u306749\u56de\u76ee\u306e\u793e\u4f1a\u4eba\u91ce\u7403\u65e5\u672c\u9078\u624b\u6a29\u95a2\u6771\u4ee3\u8868\u6c7a\u5b9a\u6226\u306e\u521d\u6226\u3092\u4e88\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u79c1\u305f\u3061\u306f\u5f7c\u3089\u3092\u5fdc\u63f4\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "The drama '#Lemon's Angel' episode 4 was filmed at #AokiHidebi in Setagaya Ward, Tokyo. The comparison images are from street view. The 'Tomoe-ya' from the first image still exists, while 'Tsukushi-ya' and 'Tokyo Gas' are confirmed on the map. The Pilot Pen store is yet to be confirmed.": [
      "\u30c9\u30e9\u30de\u300c#\u30ec\u30e2\u30f3\u306e\u5929\u4f7f\u300d\u306e\u30a8\u30d4\u30bd\u30fc\u30c94\u306f\u3001\u6771\u4eac\u306e\u4e16\u7530\u8c37\u533a\u306e#\u9752\u6728\u79c0\u7f8e\u3067\u64ae\u5f71\u3055\u308c\u307e\u3057\u305f\u3002\u6bd4\u8f03\u753b\u50cf\u306f\u30b9\u30c8\u30ea\u30fc\u30c8\u30d3\u30e5\u30fc\u304b\u3089\u306e\u3082\u306e\u3067\u3059\u3002\u6700\u521d\u306e\u753b\u50cf\u306e\u300c\u5df4\u5c4b\u300d\u306f\u307e\u3060\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u300c\u3064\u304f\u3057\u5c4b\u300d\u3068\u300c\u6771\u4eac\u30ac\u30b9\u300d\u306f\u5730\u56f3\u4e0a\u3067\u78ba\u8a8d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30d1\u30a4\u30ed\u30c3\u30c8\u30da\u30f3\u306e\u5e97\u8217\u306f\u307e\u3060\u78ba\u8a8d\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002"
    ],
    "The game Tchia by @awaceb, featuring a tropical adventure with lush islands, sandy beaches, and dense jungles, is now available on Nintendo Switch. The game includes unique features such as Tchia's soul-jumping ability to control animals and objects, and the use of a ukulele to trigger events.": [
      "\u30c8\u30ed\u30d4\u30ab\u30eb\u306a\u5192\u967a\u3001\u8c4a\u304b\u306a\u5cf6\u3005\u3001\u7802\u6d5c\u3001\u5bc6\u6797\u304c\u7279\u5fb4\u306e@awaceb\u306b\u3088\u308b\u30b2\u30fc\u30e0\u300cTchia\u300d\u304cNintendo Switch\u3067\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30b2\u30fc\u30e0\u306b\u306f\u3001Tchia\u306e\u9b42\u3092\u30b8\u30e3\u30f3\u30d7\u3055\u305b\u3066\u52d5\u7269\u3084\u7269\u4f53\u3092\u5236\u5fa1\u3059\u308b\u80fd\u529b\u3001\u30a6\u30af\u30ec\u30ec\u3092\u4f7f\u3063\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u306a\u3069\u306e\u30e6\u30cb\u30fc\u30af\u306a\u6a5f\u80fd\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002"
    ],
    "The user appreciates the well-made drama-style commercials of TOKYOGAS from 2011-2016, but notes that even well-made commercials can attract complaints. They also mention that the noisy McDonald's kid commercial is still annoying to watch.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f2011\u5e74\u304b\u30892016\u5e74\u307e\u3067\u306eTOKYOGAS\u306e\u30c9\u30e9\u30de\u98a8\u306e\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u3092\u9ad8\u304f\u8a55\u4fa1\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3088\u304f\u4f5c\u3089\u308c\u305f\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u3067\u3082\u30af\u30ec\u30fc\u30e0\u3092\u5f15\u304d\u3064\u3051\u308b\u3053\u3068\u304c\u3042\u308b\u3068\u6307\u6458\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u3046\u308b\u3055\u3044\u30de\u30af\u30c9\u30ca\u30eb\u30c9\u306e\u5b50\u4f9b\u306e\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u306f\u307e\u3060\u898b\u308b\u306e\u304c\u3046\u3063\u3068\u3046\u3057\u3044\u3068\u3082\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002"
    ],
    "Tokyo Gas. Wynand Grassmann player https://t.co/rO5wymRZB1": [
      "\u6771\u4eac\u30ac\u30b9\u3002Wynand Grassmann\u9078\u624b https://t.co/rO5wymRZB1"
    ],
    "@hitomi_140000 agrees that they made a mistake by leaving the air conditioning on overnight, even though ventilation seemed sufficient. They are using TOKYOGAS's electricity for the first time and are looking forward to receiving the bill.": [
      "@hitomi_140000\u306f\u3001\u63db\u6c17\u304c\u5341\u5206\u306b\u898b\u3048\u305f\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u30a8\u30a2\u30b3\u30f3\u3092\u4e00\u6669\u4e2d\u3064\u3051\u3063\u3071\u306a\u3057\u306b\u3057\u3066\u3057\u307e\u3063\u305f\u3053\u3068\u306f\u9593\u9055\u3044\u3060\u3063\u305f\u3068\u540c\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u521d\u3081\u3066TOKYOGAS\u306e\u96fb\u6c17\u3092\u4f7f\u7528\u3057\u3066\u304a\u308a\u3001\u8acb\u6c42\u66f8\u3092\u53d7\u3051\u53d6\u308b\u306e\u3092\u697d\u3057\u307f\u306b\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Jake Pappin, a player associated with TOKYOGAS, is surprisingly young at 22.": [
      "TOKYOGAS\u3068\u95a2\u9023\u306e\u3042\u308b\u9078\u624b\u3001Jake Pappin\u306f\u9a5a\u304f\u307b\u3069\u82e5\u304f\u300122\u6b73\u3067\u3059\u3002"
    ],
    "{'text': \"The Carbon Neutral LNG Buyers Alliance has promptly changed its name, and TOKYOGAS, the main company, has also announced this. They have started using the term 'Carbon Offset City Gas' for the offset menu of city gas utilizing carbon credits.\"}": [
      "{\"text\": \"\u30ab\u30fc\u30dc\u30f3\u30cb\u30e5\u30fc\u30c8\u30e9\u30ebLNG\u30d0\u30a4\u30e4\u30fc\u30ba\u30a2\u30e9\u30a4\u30a2\u30f3\u30b9\u306f\u3059\u3050\u306b\u540d\u524d\u3092\u5909\u66f4\u3057\u3001\u4e3b\u8981\u4f01\u696d\u3067\u3042\u308bTOKYOGAS\u3082\u3053\u308c\u3092\u767a\u8868\u3057\u307e\u3057\u305f\u3002\u5f7c\u3089\u306f\u30ab\u30fc\u30dc\u30f3\u30af\u30ec\u30b8\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u90fd\u5e02\u30ac\u30b9\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u306b\u5bfe\u3057\u3066'\u30ab\u30fc\u30dc\u30f3\u30aa\u30d5\u30bb\u30c3\u30c8\u30b7\u30c6\u30a3\u30ac\u30b9'\u3068\u3044\u3046\u7528\u8a9e\u3092\u4f7f\u7528\u3057\u59cb\u3081\u307e\u3057\u305f\u3002\"}"
    ],
    "September 3rd is #GoodSleepDay. #TokyoGas is offering a limited-time mattress cleaning service until September 10th as part of their house cleaning services. Please take advantage of this offer. More details can be found at the provided link.": [
      "9\u67083\u65e5\u306f#GoodSleepDay\u3067\u3059\u3002#\u6771\u4eac\u30ac\u30b9\u306f\u3001\u5bb6\u5ead\u7528\u6e05\u6383\u30b5\u30fc\u30d3\u30b9\u306e\u4e00\u74b0\u3068\u3057\u3066\u30019\u670810\u65e5\u307e\u3067\u306e\u671f\u9593\u9650\u5b9a\u3067\u30de\u30c3\u30c8\u30ec\u30b9\u6e05\u6383\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u6a5f\u4f1a\u306b\u305c\u3072\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\u8a73\u7d30\u306f\u63d0\u4f9b\u3055\u308c\u305f\u30ea\u30f3\u30af\u3067\u3054\u78ba\u8a8d\u3044\u305f\u3060\u3051\u307e\u3059\u3002"
    ],
    "The popular female idol group '=LOVE' will be performing a special live show at the 'Tokyo Gas Day' event during halftime at the 2024 Meiji Yasuda J1 League's 30th round match between FC Tokyo and Nagoya Grampus at the National Stadium. The event is highly anticipated.": [
      "\u4eba\u6c17\u306e\u5973\u6027\u30a2\u30a4\u30c9\u30eb\u30b0\u30eb\u30fc\u30d7'=LOVE'\u304c\u30012024\u5e74\u306e\u660e\u6cbb\u5b89\u7530\u751f\u547dJ1\u30ea\u30fc\u30b0\u306e30\u56de\u6226\u3001FC\u6771\u4eac\u5bfe\u540d\u53e4\u5c4b\u30b0\u30e9\u30f3\u30d1\u30b9\u306e\u8a66\u5408\u306e\u30cf\u30fc\u30d5\u30bf\u30a4\u30e0\u306b\u3001'\u6771\u4eac\u30ac\u30b9\u30c7\u30fc'\u30a4\u30d9\u30f3\u30c8\u3067\u7279\u5225\u30e9\u30a4\u30d6\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u306e\u30a4\u30d9\u30f3\u30c8\u306f\u975e\u5e38\u306b\u671f\u5f85\u3055\u308c\u3066\u3044\u307e\u3059\u3002"
    ],
    "The Gas Museum is celebrating the 160th anniversary of the birth of Yasuji Inoue, an artist known for his modern times landscapes featuring gas lamps. The museum, a relocated and restored Tokyo Gas branch built in 1909 in Bunkyo Ward, showcases exhibits and demonstrations of gas lamps, including those from the Rokumeikan. The gas-lit streets and people illuminated in the darkness are a key feature of Inoue's work.": [
      "\u30ac\u30b9\u535a\u7269\u9928\u306f\u3001\u30ac\u30b9\u706f\u3092\u7279\u5fb4\u3068\u3059\u308b\u8fd1\u4ee3\u98a8\u666f\u753b\u3067\u77e5\u3089\u308c\u308b\u753b\u5bb6\u3001\u4e95\u4e0a\u5b89\u6cbb\u306e\u751f\u8a95160\u5468\u5e74\u3092\u795d\u3063\u3066\u3044\u307e\u3059\u3002\u535a\u7269\u9928\u306f\u3001\u6587\u4eac\u533a\u306b\u3042\u3063\u305f1909\u5e74\u5efa\u9020\u306e\u6771\u4eac\u30ac\u30b9\u652f\u5e97\u3092\u79fb\u7bc9\u30fb\u5fa9\u5143\u3057\u305f\u3082\u306e\u3067\u3001\u516d\u672c\u6728\u9928\u306e\u30ac\u30b9\u706f\u3092\u542b\u3080\u5c55\u793a\u3084\u5b9f\u6f14\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u30ac\u30b9\u706f\u3067\u7167\u3089\u3055\u308c\u305f\u8857\u4e26\u307f\u3084\u95c7\u306b\u6d6e\u304b\u3073\u4e0a\u304c\u308b\u4eba\u3005\u306f\u3001\u4e95\u4e0a\u306e\u4f5c\u54c1\u306e\u91cd\u8981\u306a\u7279\u5fb4\u3067\u3059\u3002"
    ],
    "Tokyo Gas has announced its full-scale entry into the floating offshore wind power generation business by 2024. This is a significant step in the globally recognized renewable energy sector. The company aims to deepen its experience and knowledge by acquiring approximately 20% of the shares of Windplus, a company operating floating offshore wind power in Portugal.": [
      "\u6771\u4eac\u30ac\u30b9\u306f\u30012024\u5e74\u307e\u3067\u306b\u6d6e\u4f53\u5f0f\u6d0b\u4e0a\u98a8\u529b\u767a\u96fb\u4e8b\u696d\u3078\u306e\u672c\u683c\u7684\u306a\u53c2\u5165\u3092\u767a\u8868\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001\u4e16\u754c\u7684\u306b\u8a8d\u77e5\u3055\u308c\u3066\u3044\u308b\u518d\u751f\u53ef\u80fd\u30a8\u30cd\u30eb\u30ae\u30fc\u5206\u91ce\u3067\u306e\u91cd\u8981\u306a\u30b9\u30c6\u30c3\u30d7\u3067\u3059\u3002\u540c\u793e\u306f\u3001\u30dd\u30eb\u30c8\u30ac\u30eb\u3067\u6d6e\u4f53\u5f0f\u6d0b\u4e0a\u98a8\u529b\u767a\u96fb\u3092\u904b\u55b6\u3059\u308bWindplus\u306e\u682a\u5f0f\u7d0420%\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3067\u3001\u7d4c\u9a13\u3068\u77e5\u8b58\u3092\u6df1\u3081\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Tokyo Gas and Yokohama City have started demonstrating the use of sewage resources for methane production (Mainichi Newspaper). #Yahoo News.": [
      "\u6771\u4eac\u30ac\u30b9\u3068\u6a2a\u6d5c\u5e02\u306f\u3001\u4e0b\u6c34\u8cc7\u6e90\u3092\u30e1\u30bf\u30f3\u751f\u7523\u306b\u5229\u7528\u3059\u308b\u5b9f\u8a3c\u3092\u958b\u59cb\u3057\u307e\u3057\u305f\uff08\u6bce\u65e5\u65b0\u805e\uff09\u3002#Yahoo News\u3002"
    ],
    "@7ciaod, thank you! I called TOKYOGAS and they provided me with various information.": [
      "@7ciaod\u3001\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01TOKYOGAS\u306b\u96fb\u8a71\u3092\u304b\u3051\u3066\u3001\u69d8\u3005\u306a\u60c5\u5831\u3092\u63d0\u4f9b\u3057\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002"
    ],
    "The user interface of Cookpad has changed and become simpler. The user preferred the previous version. They have a paid subscription to Cookpad, which they initially got for free during a campaign by TOKYOGAS and have continued since. They are considering cancelling the subscription if it becomes difficult to use. Recently, they have been finding sufficient recipes from Akari and Yuri's recipe books and Twitter searches.": [
      "\u30af\u30c3\u30af\u30d1\u30c3\u30c9\u306e\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5909\u66f4\u3055\u308c\u3001\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30e6\u30fc\u30b6\u30fc\u306f\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u597d\u3093\u3067\u3044\u307e\u3057\u305f\u3002\u5f7c\u3089\u306f\u30af\u30c3\u30af\u30d1\u30c3\u30c9\u306e\u6709\u6599\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u6700\u521d\u306fTOKYOGAS\u306e\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u3067\u7121\u6599\u3067\u5165\u624b\u3057\u3001\u305d\u308c\u4ee5\u6765\u7d9a\u3051\u3066\u3044\u307e\u3059\u3002\u4f7f\u3044\u3065\u3089\u304f\u306a\u3063\u305f\u3089\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u8fd1\u3067\u306f\u3001\u3042\u304b\u308a\u3068\u3086\u308a\u306e\u30ec\u30b7\u30d4\u672c\u3084Twitter\u306e\u691c\u7d22\u304b\u3089\u5341\u5206\u306a\u30ec\u30b7\u30d4\u3092\u898b\u3064\u3051\u3066\u3044\u307e\u3059\u3002"
    ],
    "Tokyo Gas collaborates with Japan Green Tea Center for a Halloween event featuring 'Crazy Salt'.": [
      "\u6771\u4eac\u30ac\u30b9\u306f\u65e5\u672c\u7dd1\u8336\u30bb\u30f3\u30bf\u30fc\u3068\u5171\u540c\u3067\u3001'\u30af\u30ec\u30a4\u30b8\u30fc\u30bd\u30eb\u30c8'\u3092\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u3057\u305f\u30cf\u30ed\u30a6\u30a3\u30f3\u30a4\u30d9\u30f3\u30c8\u3092\u958b\u50ac\u3057\u307e\u3059\u3002"
    ],
    "The Japan Gas Association has set the name for a new menu, but personally, I'm not quite convinced. Sure, it can be used in the heat comparison method report, but... This is about the start of using the general term 'Carbon Offset City Gas' for the city gas offset menu utilizing carbon credits. | TOKYOGAS": [
      "\u65e5\u672c\u30ac\u30b9\u5354\u4f1a\u306f\u65b0\u30e1\u30cb\u30e5\u30fc\u306e\u540d\u524d\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u307e\u3060\u7d0d\u5f97\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u78ba\u304b\u306b\u3001\u305d\u308c\u306f\u71b1\u6bd4\u8f03\u6cd5\u30ec\u30dd\u30fc\u30c8\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c...\u3053\u308c\u306f\u3001\u30ab\u30fc\u30dc\u30f3\u30af\u30ec\u30b8\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u90fd\u5e02\u30ac\u30b9\u30aa\u30d5\u30bb\u30c3\u30c8\u30e1\u30cb\u30e5\u30fc\u306b\u4e00\u822c\u7684\u306a\u7528\u8a9e'\u30ab\u30fc\u30dc\u30f3\u30aa\u30d5\u30bb\u30c3\u30c8\u30b7\u30c6\u30a3\u30ac\u30b9'\u3092\u4f7f\u7528\u3059\u308b\u958b\u59cb\u306b\u3064\u3044\u3066\u3067\u3059\u3002| TOKYOGAS"
    ],
    "@400Xdance is discussing a short drama series by TOKYOGAS. They found it very touching, particularly the awkward display of family love.": [
      "@400Xdance\u306fTOKYOGAS\u306b\u3088\u308b\u77ed\u7de8\u30c9\u30e9\u30de\u30b7\u30ea\u30fc\u30ba\u306b\u3064\u3044\u3066\u8a71\u3057\u5408\u3063\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306f\u7279\u306b\u5bb6\u65cf\u611b\u306e\u304e\u3053\u3061\u306a\u3044\u8868\u73fe\u304c\u975e\u5e38\u306b\u611f\u52d5\u7684\u3060\u3068\u611f\u3058\u307e\u3057\u305f\u3002"
    ],
    "Tokyo Gas's house cleaning service will make your home sparkle, a perfect solution for busy individuals. 'PR'": [
      "\u6771\u4eac\u30ac\u30b9\u306e\u5bb6\u5ead\u7528\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u3042\u306a\u305f\u306e\u5bb6\u3092\u304d\u3089\u304d\u3089\u3068\u8f1d\u304b\u305b\u307e\u3059\u3002\u5fd9\u3057\u3044\u500b\u4eba\u306b\u3068\u3063\u3066\u5b8c\u74a7\u306a\u89e3\u6c7a\u7b56\u3067\u3059\u3002'PR'"
    ],
    "A sudden visit from TOKYOGAS for an inspection was unexpected as there was no prior notification. It's inconvenient for households with working couples. The visitor was not from TOKYOGAS but a subcontractor, Enesta Ushiku. Is this happening to others in Ryugasaki? #Ryugasaki #TOKYOGAS": [
      "\u4e8b\u524d\u306e\u901a\u77e5\u304c\u306a\u3044\u307e\u307e\u6771\u4eac\u30ac\u30b9\u304b\u3089\u306e\u7a81\u7136\u306e\u8a2a\u554f\u306f\u4e88\u60f3\u5916\u3067\u3057\u305f\u3002\u5171\u50cd\u304d\u306e\u5bb6\u5ead\u306b\u3068\u3063\u3066\u306f\u4e0d\u4fbf\u3067\u3059\u3002\u8a2a\u554f\u8005\u306f\u6771\u4eac\u30ac\u30b9\u3067\u306f\u306a\u304f\u3001\u4e0b\u8acb\u3051\u306e\u30a8\u30cd\u30b9\u30bf\u725b\u4e45\u3067\u3057\u305f\u3002\u3053\u306e\u3088\u3046\u306a\u3053\u3068\u306f\u4ed6\u306e\u7adc\u30f6\u5d0e\u306e\u4eba\u3005\u306b\u3082\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f#\u7adc\u30f6\u5d0e #\u6771\u4eac\u30ac\u30b9"
    ],
    "Recommended companies for job seekers include: Heiwa Real Estate, Mitsubishi Estate, Okinawa Development Finance Corporation, TOKYOGAS Real Estate, Daibiru, Japan Securities Finance, and JPX.": [
      "\u6c42\u8077\u8005\u306b\u304a\u3059\u3059\u3081\u306e\u4f01\u696d\u306f\u3001\u5e73\u548c\u4e0d\u52d5\u7523\u3001\u4e09\u83f1\u5730\u6240\u3001\u6c96\u7e04\u958b\u767a\u91d1\u878d\u516c\u5eab\u3001\u6771\u4eac\u30ac\u30b9\u4e0d\u52d5\u7523\u3001\u5927\u65e5\u672c\u5370\u5237\u3001\u65e5\u672c\u8a3c\u5238\u91d1\u878d\u3001JPX\u306a\u3069\u3067\u3059\u3002"
    ],
    "Announcement: Online seminar on September 4, 2024, from 12:00 to 13:00. This is the second disaster prevention seminar hosted by TOKYOGAS's media platform 'Mirai Hoplat', where we will discuss home disaster prevention. It can be viewed on YouTube, so please watch during your lunch break.": [
      "\u304a\u77e5\u3089\u305b\uff1a2024\u5e749\u67084\u65e5\u300112:00\u304b\u308913:00\u307e\u3067\u306e\u30aa\u30f3\u30e9\u30a4\u30f3\u30bb\u30df\u30ca\u30fc\u3002\u3053\u308c\u306f\u6771\u4eac\u30ac\u30b9\u306e\u30e1\u30c7\u30a3\u30a2\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u300c\u672a\u6765\u30db\u30d7\u30e9\u30c3\u30c8\u300d\u304c\u4e3b\u50ac\u3059\u308b\u7b2c2\u56de\u9632\u707d\u30bb\u30df\u30ca\u30fc\u3067\u3001\u5bb6\u5ead\u306e\u9632\u707d\u306b\u3064\u3044\u3066\u8a71\u3057\u5408\u3044\u307e\u3059\u3002YouTube\u3067\u8996\u8074\u3067\u304d\u307e\u3059\u306e\u3067\u3001\u30e9\u30f3\u30c1\u30bf\u30a4\u30e0\u306b\u3054\u89a7\u304f\u3060\u3055\u3044\u3002"
    ],
    "The user finds the commercial of TOKYOGAS disturbing and warns that they won't be responsible if it violates any rules. They also express their disapproval of the company's association with South Korea.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u6771\u4eac\u30ac\u30b9\u306e\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u3092\u4e0d\u5feb\u306b\u611f\u3058\u3001\u305d\u308c\u304c\u4f55\u304b\u306e\u30eb\u30fc\u30eb\u3092\u9055\u53cd\u3057\u305f\u5834\u5408\u3001\u8cac\u4efb\u3092\u8ca0\u308f\u306a\u3044\u3068\u8b66\u544a\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u540c\u793e\u304c\u97d3\u56fd\u3068\u95a2\u9023\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u5bfe\u3059\u308b\u4e0d\u627f\u8a8d\u3092\u8868\u660e\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "50% discount and a Ubisoft gift on PlayItCloud for cloud gaming.": [
      "\u30af\u30e9\u30a6\u30c9\u30b2\u30fc\u30df\u30f3\u30b0\u306ePlayItCloud\u3067Ubisoft\u306e\u30ae\u30d5\u30c8\u306850\uff05\u306e\u5272\u5f15\u3002"
    ],
    "A user is curious about what Tokyo Gas's muscle training is like.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u6771\u4eac\u30ac\u30b9\u306e\u7b4b\u30c8\u30ec\u304c\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\u8208\u5473\u304c\u3042\u308a\u307e\u3059\u3002"
    ],
    "Tokyo Gas is participating in an overseas floating offshore wind power generation project by investing in a Portuguese company.": [
      "\u6771\u4eac\u30ac\u30b9\u306f\u3001\u30dd\u30eb\u30c8\u30ac\u30eb\u306e\u4f1a\u793e\u306b\u6295\u8cc7\u3057\u3066\u6d77\u5916\u306e\u6d6e\u4f53\u5f0f\u6d0b\u4e0a\u98a8\u529b\u767a\u96fb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u53c2\u52a0\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "The user is suggesting that wearing this (unspecified item) would be good for supporting the Tokyo Gas baseball team.": [
      "\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u3053\u308c\uff08\u672a\u6307\u5b9a\u306e\u30a2\u30a4\u30c6\u30e0\uff09\u3092\u7740\u308b\u3068\u6771\u4eac\u30ac\u30b9\u306e\u91ce\u7403\u30c1\u30fc\u30e0\u3092\u5fdc\u63f4\u3059\u308b\u306e\u306b\u826f\u3044\u3068\u63d0\u6848\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "During disasters, having sweets can help alleviate anxiety. Having regular food and long-lasting items prepared can also provide peace of mind. #TOKYOGAS #HomeMatters #DisasterPreventionWeek #EmergencyFood": [
      "\u707d\u5bb3\u6642\u306b\u306f\u3001\u7518\u3044\u3082\u306e\u3092\u6301\u3063\u3066\u3044\u308b\u3068\u4e0d\u5b89\u3092\u548c\u3089\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u666e\u6bb5\u306e\u98df\u4e8b\u3084\u9577\u6301\u3061\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u6e96\u5099\u3057\u3066\u304a\u304f\u3068\u3001\u5b89\u5fc3\u611f\u3082\u5f97\u3089\u308c\u307e\u3059\u3002#\u6771\u4eac\u30ac\u30b9 #\u30db\u30fc\u30e0\u30de\u30bf\u30fc\u30ba #\u9632\u707d\u9031\u9593 #\u975e\u5e38\u98df"
    ],
    "Looking forward to SOMOSOMO and TOKYOGAS's face-off, this week's playlist ended with TOKYOGAS's commercial. #FM Tachikawa. #Idol Fourth Conference Room. #If it's an electric kickboard, then SWALLOW.": [
      "SOMOSOMO\u3068TOKYOGAS\u306e\u5bfe\u6c7a\u3092\u697d\u3057\u307f\u306b\u3057\u3066\u3001\u4eca\u9031\u306e\u30d7\u30ec\u30a4\u30ea\u30b9\u30c8\u306fTOKYOGAS\u306e\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u3067\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002#FM\u7acb\u5ddd\u3002#\u30a2\u30a4\u30c9\u30eb\u7b2c\u56db\u4f1a\u8b70\u5ba4\u3002#\u96fb\u52d5\u30ad\u30c3\u30af\u30dc\u30fc\u30c9\u306a\u3089SWALLOW\u3002"
    ],
    "Tokyo Gas customers living in Tokyo, Kanagawa, and Saitama can save 5% on their standard unit rate with Lemon Gas. There's also a premium discount for high usage customers. #Savings #CityGas #TokyoGas": [
      "\u6771\u4eac\u3001\u795e\u5948\u5ddd\u3001\u57fc\u7389\u306b\u4f4f\u3080\u6771\u4eac\u30ac\u30b9\u306e\u304a\u5ba2\u69d8\u306f\u3001\u30ec\u30e2\u30f3\u30ac\u30b9\u3067\u6a19\u6e96\u5358\u4fa1\u30925\uff05\u7bc0\u7d04\u3067\u304d\u307e\u3059\u3002\u9ad8\u4f7f\u7528\u91cf\u306e\u304a\u5ba2\u69d8\u306b\u306f\u30d7\u30ec\u30df\u30a2\u30e0\u5272\u5f15\u3082\u3042\u308a\u307e\u3059\u3002#\u7bc0\u7d04 #\u90fd\u5e02\u30ac\u30b9 #\u6771\u4eac\u30ac\u30b9"
    ],
    "Enjoy your unused emergency food before it expires! Delicious recipes using Alpha Rice for omelette rice and dry bread for chocolate salami. Plenty of professional recipes available. #TokyoGas #HomeThings #DisasterPreventionWeek #RollingStock": [
      "\u671f\u9650\u5207\u308c\u524d\u306b\u672a\u4f7f\u7528\u306e\u975e\u5e38\u98df\u3092\u697d\u3057\u3093\u3067\u304f\u3060\u3055\u3044\uff01\u30aa\u30e0\u30e9\u30a4\u30b9\u7528\u306e\u30a2\u30eb\u30d5\u30a1\u30e9\u30a4\u30b9\u3084\u30c1\u30e7\u30b3\u30ec\u30fc\u30c8\u30b5\u30e9\u30df\u7528\u306e\u4e7e\u30d1\u30f3\u3092\u4f7f\u7528\u3057\u305f\u7f8e\u5473\u3057\u3044\u30ec\u30b7\u30d4\u3002\u30d7\u30ed\u306e\u30ec\u30b7\u30d4\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u3002#\u6771\u4eac\u30ac\u30b9 #\u30db\u30fc\u30e0\u30b7\u30f3\u30b0\u30b9 #\u9632\u707d\u9031\u9593 #\u30ed\u30fc\u30ea\u30f3\u30b0\u30b9\u30c8\u30c3\u30af"
    ],
    "The Japan Green Tea Center and Tokyo Gas are hosting a cooking class featuring a special Halloween menu, highlighted by the use of 'Crazy Salt'.": [
      "\u65e5\u672c\u7dd1\u8336\u30bb\u30f3\u30bf\u30fc\u3068\u6771\u4eac\u30ac\u30b9\u306f\u3001'\u30af\u30ec\u30a4\u30b8\u30fc\u30bd\u30eb\u30c8'\u306e\u4f7f\u7528\u3092\u7279\u5fb4\u3068\u3059\u308b\u7279\u5225\u306a\u30cf\u30ed\u30a6\u30a3\u30f3\u30e1\u30cb\u30e5\u30fc\u3092\u7279\u96c6\u3057\u305f\u6599\u7406\u6559\u5ba4\u3092\u958b\u50ac\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Hiroshima Toyo Carp's draft picks for 2022 include: 1st pick - Yuta Saito (Tomakomai Central High School, Pitcher), 2nd pick - Shodai Uchida (Tone Commercial High School, Infielder), 3rd pick - Takanao Masuda (Tokyo Gas, Pitcher), 4th pick - Kato Shimizu (Takasaki Health and Welfare University, Catcher), 5th pick - Yoshi Kono (Osaka Gas, Pitcher), 6th pick - Ginji Hasebe (Toyota Motor, Pitcher).": [
      "\u5e83\u5cf6\u6771\u6d0b\u30ab\u30fc\u30d7\u306e2022\u5e74\u306e\u30c9\u30e9\u30d5\u30c8\u6307\u540d\u9078\u624b\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\uff1a1\u4f4d - \u6589\u85e4\u52c7\u592a\uff08\u82eb\u5c0f\u7267\u4e2d\u592e\u9ad8\u6821\u3001\u6295\u624b\uff09\u30012\u4f4d - \u5185\u7530\u6b63\u5927\uff08\u5229\u6839\u5546\u696d\u9ad8\u6821\u3001\u5185\u91ce\u624b\uff09\u30013\u4f4d - \u5897\u7530\u8cb4\u5c1a\uff08\u6771\u4eac\u30ac\u30b9\u3001\u6295\u624b\uff09\u30014\u4f4d - \u6e05\u6c34\u52a0\u85e4\uff08\u9ad8\u5d0e\u5065\u5eb7\u798f\u7949\u5927\u5b66\u3001\u30ad\u30e3\u30c3\u30c1\u30e3\u30fc\uff09\u30015\u4f4d - \u6cb3\u91ce\u826f\uff08\u5927\u962a\u30ac\u30b9\u3001\u6295\u624b\uff09\u30016\u4f4d - \u9577\u8c37\u90e8\u9280\u6b21\uff08\u30c8\u30e8\u30bf\u81ea\u52d5\u8eca\u3001\u6295\u624b\uff09\u3002"
    ],
    "The dormitory was found to be devoid of valuables and money, with only shabby items left behind. It is believed that TOKYOGAS is involved in this incident. On the morning and afternoon of September 3rd, about 100 Japanese workers reportedly attacked and killed Chinese people, and it is thought that this dormitory was also attacked in the process. (Document owned by the Diplomatic Archives of the Ministry of Foreign Affairs)": [
      "\u5bee\u306f\u8cb4\u91cd\u54c1\u3084\u304a\u91d1\u304c\u306a\u304f\u3001\u305f\u3060\u306e\u304c\u3089\u304f\u305f\u3060\u3051\u304c\u6b8b\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u4e8b\u4ef6\u306b\u306fTOKYOGAS\u304c\u95a2\u4e0e\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u30029\u67083\u65e5\u306e\u671d\u3068\u5348\u5f8c\u306b\u306f\u3001\u7d04100\u4eba\u306e\u65e5\u672c\u4eba\u52b4\u50cd\u8005\u304c\u4e2d\u56fd\u4eba\u3092\u8972\u6483\u3057\u6bba\u5bb3\u3057\u305f\u3068\u5831\u3058\u3089\u308c\u3066\u304a\u308a\u3001\u3053\u306e\u5bee\u3082\u305d\u306e\u904e\u7a0b\u3067\u8972\u6483\u3055\u308c\u305f\u3068\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\uff08\u5916\u52d9\u7701\u5916\u4ea4\u53f2\u6599\u9928\u6240\u8535\u6587\u66f8\uff09"
    ],
    "In August, the user's electricity bill from Tokyo Gas was 12,096 yen for 445 kWh, while from Looop it was 16,528 yen for 415 kWh. The user is upset because switching to Looop made their bill more expensive.": [
      "8\u6708\u306b\u3001\u6771\u4eac\u30ac\u30b9\u304b\u3089\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u96fb\u6c17\u6599\u91d1\u306f445kWh\u306712,096\u5186\u3001Looop\u304b\u3089\u306f415kWh\u306716,528\u5186\u3067\u3057\u305f\u3002\u30e6\u30fc\u30b6\u30fc\u306fLooop\u306b\u5207\u308a\u66ff\u3048\u305f\u3053\u3068\u3067\u8acb\u6c42\u304c\u9ad8\u304f\u306a\u3063\u305f\u3053\u3068\u306b\u61a4\u3063\u3066\u3044\u307e\u3059\u3002"
    ],
    "On September 2, the reverse dividend for one day was 0.10 yen for Tokyo Gas (9531), 0.05 yen for Osaka Gas (9532), and 0.05 yen for Shizuoka Gas (9543).": [
      "9\u67082\u65e5\u30011\u65e5\u306e\u9006\u914d\u5f53\u306f\u6771\u4eac\u30ac\u30b9\uff089531\uff09\u30670.10\u5186\u3001\u5927\u962a\u30ac\u30b9\uff089532\uff09\u30670.05\u5186\u3001\u9759\u5ca1\u30ac\u30b9\uff089543\uff09\u30670.05\u5186\u3067\u3057\u305f\u3002"
    ],
    "On August 22, Tokyo Gas held a training session for its 'Sustainability Education' program at Tokyo Kasei University in Itabashi Ward, Tokyo. This program encourages energy-saving behaviors. Thirteen teachers from three elementary schools in Hadano City, Kanagawa Prefecture, participated in the training.": [
      "8\u670822\u65e5\u3001\u6771\u4eac\u30ac\u30b9\u306f\u6771\u4eac\u90fd\u677f\u6a4b\u533a\u306e\u6771\u4eac\u5316\u6210\u5927\u5b66\u3067\u300c\u30b5\u30b9\u30c6\u30ca\u30d3\u30ea\u30c6\u30a3\u6559\u80b2\u300d\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u7814\u4fee\u4f1a\u3092\u958b\u50ac\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7701\u30a8\u30cd\u884c\u52d5\u3092\u5968\u52b1\u3057\u307e\u3059\u3002\u795e\u5948\u5ddd\u770c\u79e6\u91ce\u5e02\u306e3\u3064\u306e\u5c0f\u5b66\u6821\u304b\u308913\u4eba\u306e\u6559\u5e2b\u304c\u7814\u4fee\u306b\u53c2\u52a0\u3057\u307e\u3057\u305f\u3002"
    ],
    "@raccolta_BDC mentioned missing the recent TOKYOGAS event.": [
      "@raccolta_BDC\u306f\u6700\u8fd1\u306eTOKYOGAS\u30a4\u30d9\u30f3\u30c8\u3092\u898b\u9003\u3057\u305f\u3068\u8a00\u53ca\u3057\u307e\u3057\u305f\u3002"
    ],
    "@moonriver91725 expresses disappointment with the service received from TOKYOGAS. They mention that TOKYOGAS usually conducts annual inspections and notifies in advance. They also speculate whether the service was provided by a subcontractor, possibly Enesta, and express dissatisfaction with the poor service.": [
      "@moonriver91725\u306f\u3001TOKYOGAS\u304b\u3089\u53d7\u3051\u305f\u30b5\u30fc\u30d3\u30b9\u306b\u3064\u3044\u3066\u4e0d\u6e80\u3092\u8868\u660e\u3057\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306fTOKYOGAS\u304c\u901a\u5e38\u3001\u5e741\u56de\u306e\u70b9\u691c\u3092\u884c\u3044\u3001\u4e8b\u524d\u306b\u901a\u77e5\u3059\u308b\u3068\u8ff0\u3079\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u30b5\u30fc\u30d3\u30b9\u306f\u4e0b\u8acb\u3051\u696d\u8005\u3001\u304a\u305d\u3089\u304f\u30a8\u30cd\u30b9\u30bf\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u305f\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u63a8\u6e2c\u3057\u3001\u305d\u306e\u8ca7\u5f31\u306a\u30b5\u30fc\u30d3\u30b9\u306b\u4e0d\u6e80\u3092\u8868\u660e\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "Today is #SkewerDay. Celebrating with skewered dishes and homemade #Highball. Filling the glass with lots of ice, you can easily recreate the deliciousness of a restaurant at home. #TokyoGas #HomeThings #WhatDayIsToday #Whiskey @asahibeer_jp": [
      "\u4eca\u65e5\u306f#\u4e32\u713c\u304d\u306e\u65e5\u3002\u4e32\u713c\u304d\u6599\u7406\u3068\u81ea\u5bb6\u88fd#\u30cf\u30a4\u30dc\u30fc\u30eb\u3067\u304a\u795d\u3044\u3002\u30b0\u30e9\u30b9\u306b\u305f\u304f\u3055\u3093\u306e\u6c37\u3092\u5165\u308c\u308b\u3068\u3001\u5bb6\u3067\u3082\u30ec\u30b9\u30c8\u30e9\u30f3\u306e\u7f8e\u5473\u3057\u3055\u3092\u7c21\u5358\u306b\u518d\u73fe\u3067\u304d\u307e\u3059\u3002#\u6771\u4eac\u30ac\u30b9 #\u5bb6\u306e\u3053\u3068 #\u4eca\u65e5\u306f\u4f55\u306e\u65e5 #\u30a6\u30a3\u30b9\u30ad\u30fc @asahibeer_jp"
    ],
    "The Japan Green Tea Center and Tokyo Gas are hosting a cooking class featuring a special Halloween menu, which includes dishes seasoned with 'Crazy Salt'.": [
      "\u65e5\u672c\u7dd1\u8336\u30bb\u30f3\u30bf\u30fc\u3068\u6771\u4eac\u30ac\u30b9\u306f\u3001'\u30af\u30ec\u30a4\u30b8\u30fc\u30bd\u30eb\u30c8'\u3067\u5473\u4ed8\u3051\u3055\u308c\u305f\u6599\u7406\u3092\u542b\u3080\u7279\u5225\u306a\u30cf\u30ed\u30a6\u30a3\u30f3\u30e1\u30cb\u30e5\u30fc\u3092\u7279\u96c6\u3057\u305f\u6599\u7406\u6559\u5ba4\u3092\u958b\u50ac\u3057\u3066\u3044\u307e\u3059\u3002"
    ],
    "The hot days continue. Why not cool down with a refreshing fruit jelly? The 'Fizzy Watermelon Jelly' has a carbonated accent, and the 'Apple Cider Jelly' is refreshing. #TOKYOGAS #HomemadeSnacks #SummerRecipe": [
      "\u6691\u3044\u65e5\u304c\u7d9a\u304d\u307e\u3059\u3002\u3055\u308f\u3084\u304b\u306a\u30d5\u30eb\u30fc\u30c4\u30bc\u30ea\u30fc\u3067\u6dbc\u307f\u307e\u305b\u3093\u304b\uff1f'\u30d5\u30a3\u30b8\u30fc\u30a6\u30a9\u30fc\u30bf\u30fc\u30e1\u30ed\u30f3\u30bc\u30ea\u30fc'\u306f\u70ad\u9178\u304c\u30a2\u30af\u30bb\u30f3\u30c8\u306b\u306a\u3063\u3066\u304a\u308a\u3001'\u30a2\u30c3\u30d7\u30eb\u30b5\u30a4\u30c0\u30fc\u30b8\u30a7\u30ea\u30fc'\u306f\u3055\u308f\u3084\u304b\u3067\u3059\u3002#\u6771\u4eac\u30ac\u30b9 #\u624b\u4f5c\u308a\u30b9\u30ca\u30c3\u30af #\u590f\u306e\u30ec\u30b7\u30d4"
    ],
    "@moonriver91725 Ah! Enesta is a company that inspects within Tokyo Gas. Ryugasaki has merged with Ushiku!": [
      "@moonriver91725 \u3042\u3042\uff01\u30a8\u30cd\u30b9\u30bf\u306f\u6771\u4eac\u30ac\u30b9\u5185\u3067\u70b9\u691c\u3092\u884c\u3046\u4f1a\u793e\u3067\u3059\u3002\u9f8d\u30f6\u5d0e\u306f\u725b\u4e45\u3068\u5408\u4f75\u3057\u307e\u3057\u305f\uff01"
    ],
    "On 9/14 at the National Stadium, it's 'Tokyo Gas Day' for the Nagoya match. Highlights include: 1. Special baseball shirt giveaways. 2. A halftime special live performance by '=LOVE'. 3. Appearances by 'Patcho, Den Patcho, and Mizu Patcho'.": [
      "9/14\u306e\u56fd\u7acb\u7af6\u6280\u5834\u3067\u306e\u540d\u53e4\u5c4b\u6226\u306f'\u6771\u4eac\u30ac\u30b9\u30c7\u30fc'\u3067\u3059\u3002\u30cf\u30a4\u30e9\u30a4\u30c8\u306b\u306f\uff1a1. \u7279\u5225\u306a\u91ce\u7403\u30b7\u30e3\u30c4\u306e\u30d7\u30ec\u30bc\u30f3\u30c8\u30022. \u30cf\u30fc\u30d5\u30bf\u30a4\u30e0\u306e'=LOVE'\u306b\u3088\u308b\u7279\u5225\u30e9\u30a4\u30d6\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30023. '\u30d1\u30c3\u30c1\u30e7\u3001\u30c7\u30f3\u30d1\u30c3\u30c1\u30e7\u3001\u30df\u30ba\u30d1\u30c3\u30c1\u30e7'\u306e\u767b\u5834\u3002"
    ],
    "Today, I applied online for a paid meter reading form for my 80-year-old mother. She didn't know that you could apply online and kept telling me to call. Our house uses both gas and electricity from TOKYOGAS, and we were able to apply using just our customer number. This might be a good option for elderly households.": [
      "\u4eca\u65e5\u300180\u6b73\u306e\u6bcd\u306e\u305f\u3081\u306b\u6709\u6599\u306e\u30e1\u30fc\u30bf\u30fc\u8aad\u307f\u53d6\u308a\u30d5\u30a9\u30fc\u30e0\u3092\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u7533\u3057\u8fbc\u307f\u307e\u3057\u305f\u3002\u5f7c\u5973\u306f\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u7533\u3057\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u306f\u77e5\u3089\u305a\u3001\u79c1\u306b\u96fb\u8a71\u3092\u304b\u3051\u308b\u3088\u3046\u306b\u8a00\u3063\u3066\u3044\u307e\u3057\u305f\u3002\u6211\u304c\u5bb6\u306f\u30ac\u30b9\u3068\u96fb\u6c17\u3092\u4e21\u65b9\u3068\u3082TOKYOGAS\u304b\u3089\u4f7f\u7528\u3057\u3066\u304a\u308a\u3001\u9867\u5ba2\u756a\u53f7\u3060\u3051\u3067\u7533\u3057\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u9ad8\u9f62\u8005\u306e\u4e16\u5e2f\u306b\u3068\u3063\u3066\u826f\u3044\u9078\u629e\u80a2\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002"
    ],
    "An announcement was made about the 'Tokyo Gas Day' event to be held on September 14th during the Nagoya match, as per the FC Tokyo official homepage. There was a mention of baseball shirts, which led to the assumption that it might be about baseball team uniforms.": [
      "9\u670814\u65e5\u306e\u540d\u53e4\u5c4b\u6226\u4e2d\u306b\u958b\u50ac\u3055\u308c\u308b'\u6771\u4eac\u30ac\u30b9\u30c7\u30fc'\u30a4\u30d9\u30f3\u30c8\u306b\u3064\u3044\u3066\u3001FC\u6771\u4eac\u516c\u5f0f\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306b\u3088\u308b\u767a\u8868\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u91ce\u7403\u30b7\u30e3\u30c4\u306b\u3064\u3044\u3066\u306e\u8a00\u53ca\u304c\u3042\u308a\u3001\u305d\u308c\u304c\u91ce\u7403\u30c1\u30fc\u30e0\u306e\u30e6\u30cb\u30d5\u30a9\u30fc\u30e0\u306b\u3064\u3044\u3066\u306e\u3082\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u63a8\u6e2c\u3055\u308c\u307e\u3057\u305f\u3002"
    ],
    "Discussion about various high school baseball players from Yamanashi Prefecture, Japan. Mentioned players include pitchers Sato Miki (Nippon Steel Kazusa Magic), Wakayama Keito (Tokai University), and Yamada Yuki (Kami Medical University); catcher Kameda Keita (Yomiuri Giants); infielder Tachibana Rikuto (Nihon University); outfielders Takizawa Kotaro (ENEOS), Nakao Yusuke (Tokyo Gas), Nomura Kenta (Waseda University), Edpolo Cain (Osaka Gakuin University), and Fujisawa Junya (Sakuramirin University).": [
      "\u5c71\u68a8\u770c\u51fa\u8eab\u306e\u69d8\u3005\u306a\u9ad8\u6821\u91ce\u7403\u9078\u624b\u306b\u3064\u3044\u3066\u306e\u8b70\u8ad6\u3002\u8a00\u53ca\u3055\u308c\u305f\u9078\u624b\u306b\u306f\u3001\u30d4\u30c3\u30c1\u30e3\u30fc\u306e\u4f50\u85e4\u7f8e\u7d00\uff08\u65b0\u65e5\u9244\u4f4f\u91d1\u9e7f\u5cf6\u30de\u30b8\u30c3\u30af\uff09\u3001\u82e5\u5c71\u6176\u4eba\uff08\u6771\u6d77\u5927\u5b66\uff09\u3001\u5c71\u7530\u52c7\u6c17\uff08\u795e\u533b\u79d1\u5927\u5b66\uff09\uff1b\u30ad\u30e3\u30c3\u30c1\u30e3\u30fc\u306e\u4e80\u7530\u572d\u592a\uff08\u8aad\u58f2\u30b8\u30e3\u30a4\u30a2\u30f3\u30c4\uff09\uff1b\u5185\u91ce\u624b\u306e\u7acb\u82b1\u9678\u4eba\uff08\u65e5\u672c\u5927\u5b66\uff09\uff1b\u5916\u91ce\u624b\u306e\u6edd\u6fa4\u5b5d\u592a\u90ce\uff08ENEOS\uff09\u3001\u4e2d\u5c3e\u7950\u4ecb\uff08\u6771\u4eac\u30ac\u30b9\uff09\u3001\u91ce\u6751\u5065\u592a\uff08\u65e9\u7a32\u7530\u5927\u5b66\uff09\u3001\u30a8\u30c9\u30dd\u30ed\u30fb\u30ab\u30a4\u30f3\uff08\u5927\u962a\u5b66\u9662\u5927\u5b66\uff09\u3001\u85e4\u6ca2\u7d14\u4e5f\uff08\u685c\u7f8e\u6797\u5927\u5b66\uff09\u3002"
    ],
    "@pppnnp99 is asking what TGS is, with their only guess being Tokyo Gas.": [
      "@pppnnp99\u306fTGS\u304c\u4f55\u304b\u3092\u5c0b\u306d\u3066\u3044\u307e\u3059\u3002\u5f7c\u3089\u306e\u552f\u4e00\u306e\u63a8\u6e2c\u306f\u6771\u4eac\u30ac\u30b9\u3067\u3059\u3002"
    ],
    "\"Tokyo Gas's Business Strategies and Market Position\"": [
      "\"\u6771\u4eac\u30ac\u30b9\u306e\u30d3\u30b8\u30cd\u30b9\u6226\u7565\u3068\u5e02\u5834\u5730\u4f4d\""
    ],
    "\"Tokyo Gas in Sports and Entertainment\"": [
      "\"\u30b9\u30dd\u30fc\u30c4\u3068\u30a8\u30f3\u30bf\u30fc\u30c6\u30a4\u30e1\u30f3\u30c8\u3067\u306e\u6771\u4eac\u30ac\u30b9\""
    ],
    "\"Consumer Experiences and Opinions on Tokyo Gas Services\"": [
      "\"\u6771\u4eac\u30ac\u30b9\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3059\u308b\u6d88\u8cbb\u8005\u306e\u7d4c\u9a13\u3068\u610f\u898b\""
    ],
    "\"Tokyo Gas in Sports and Athletics\"": [
      "\"\u30b9\u30dd\u30fc\u30c4\u3068\u9678\u4e0a\u7af6\u6280\u3067\u306e\u6771\u4eac\u30ac\u30b9\""
    ],
    "Customer Complaints and Dissatisfaction with Tokyo Gas Services": [
      "\u6771\u4eac\u30ac\u30b9\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3059\u308b\u9867\u5ba2\u306e\u82e6\u60c5\u3068\u4e0d\u6e80"
    ],
    "Tokyo Gas Home Services and Lifestyle Tips": [
      "\u6771\u4eac\u30ac\u30b9\u306e\u30db\u30fc\u30e0\u30b5\u30fc\u30d3\u30b9\u3068\u30e9\u30a4\u30d5\u30b9\u30bf\u30a4\u30eb\u306e\u30d2\u30f3\u30c8"
    ],
    "Argument": [
      "\u8b70\u8ad6"
    ],
    "Original comment": [
      "\u5143\u306e\u30b3\u30e1\u30f3\u30c8"
    ],
    "Representative arguments": [
      "\u4ee3\u8868\u7684\u306a\u8b70\u8ad6"
    ],
    "Open full-screen map": [
      "\u5168\u753b\u9762\u30de\u30c3\u30d7\u3092\u958b\u304f"
    ],
    "Back to report": [
      "\u30ec\u30dd\u30fc\u30c8\u306b\u623b\u308b"
    ],
    "Hide labels": [
      "\u30e9\u30d9\u30eb\u3092\u96a0\u3059"
    ],
    "Show labels": [
      "\u30e9\u30d9\u30eb\u3092\u8868\u793a"
    ],
    "Show filters": [
      "\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u8868\u793a"
    ],
    "Hide filters": [
      "\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u96a0\u3059"
    ],
    "Min. votes": [
      "\u6700\u5c0f\u6295\u7968\u6570"
    ],
    "Consensus": [
      "\u5408\u610f"
    ],
    "Showing": [
      "\u8868\u793a\u4e2d"
    ],
    "arguments": [
      "\u8b70\u8ad6"
    ],
    "Reset zoom": [
      "\u30ba\u30fc\u30e0\u3092\u30ea\u30bb\u30c3\u30c8"
    ],
    "Click anywhere on the map to close this": [
      "\u3053\u306e\u30de\u30c3\u30d7\u306e\u4efb\u610f\u306e\u5834\u6240\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u9589\u3058\u308b"
    ],
    "Click on the dot for details": [
      "\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u30c9\u30c3\u30c8\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044"
    ],
    "agree": [
      "\u540c\u610f\u3059\u308b"
    ],
    "disagree": [
      "\u540c\u610f\u3057\u306a\u3044"
    ],
    "Language": [
      "\u8a00\u8a9e"
    ],
    "English": [
      "\u82f1\u8a9e"
    ],
    "of total": [
      "\u5168\u4f53\u306e"
    ],
    "Overview": [
      "\u6982\u8981"
    ],
    "Cluster analysis": [
      "\u30af\u30e9\u30b9\u30bf\u30fc\u5206\u6790"
    ],
    "Representative comments": [
      "\u4ee3\u8868\u7684\u306a\u30b3\u30e1\u30f3\u30c8"
    ],
    "Introduction": [
      "\u7d39\u4ecb"
    ],
    "Clusters": [
      "\u30af\u30e9\u30b9\u30bf\u30fc"
    ],
    "Appendix": [
      "\u4ed8\u9332"
    ],
    "This report was generated using an AI pipeline that consists of the following steps": [
      "\u3053\u306e\u30ec\u30dd\u30fc\u30c8\u306f\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u69cb\u6210\u3055\u308c\u308bAI\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u4f7f\u7528\u3057\u3066\u751f\u6210\u3055\u308c\u307e\u3057\u305f"
    ],
    "Step": [
      "\u30b9\u30c6\u30c3\u30d7"
    ],
    "extraction": [
      "\u62bd\u51fa"
    ],
    "show code": [
      "\u30b3\u30fc\u30c9\u3092\u8868\u793a"
    ],
    "hide code": [
      "\u30b3\u30fc\u30c9\u3092\u96a0\u3059"
    ],
    "show prompt": [
      "\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u8868\u793a"
    ],
    "hide prompt": [
      "\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u96a0\u3059"
    ],
    "embedding": [
      "\u57cb\u3081\u8fbc\u307f"
    ],
    "clustering": [
      "\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0"
    ],
    "labelling": [
      "\u30e9\u30d9\u30ea\u30f3\u30b0"
    ],
    "takeaways": [
      "\u6301\u3061\u5e30\u308a"
    ],
    "overview": [
      "\u6982\u8981"
    ],
    "Japanese": [
      "\u65e5\u672c\u8a9e"
    ],
    "Twitter\u3067\u306e\u6771\u4eac\u30ac\u30b9\u306b\u95a2\u3059\u308b\u30dd\u30b9\u30c8\u5206\u6790": [
      "Twitter\u3067\u306e\u6771\u4eac\u30ac\u30b9\u306b\u95a2\u3059\u308b\u30dd\u30b9\u30c8\u5206\u6790"
    ],
    "\u307f\u3093\u306a\u306fTwitter\u3067\u6771\u4eac\u30ac\u30b9\u306b\u3069\u3093\u306a\u611f\u60c5\u3092\u62b1\u3044\u3066\u3044\u307e\u3059\u304b\uff1f": [
      "\u307f\u3093\u306a\u306fTwitter\u3067\u6771\u4eac\u30ac\u30b9\u306b\u3069\u3093\u306a\u611f\u60c5\u3092\u62b1\u3044\u3066\u3044\u307e\u3059\u304b\uff1f"
    ],
    "Tokyo Gas and Tokyu Power are key players in the competitive capital region of Japan. Tokyo Gas is actively pursuing sustainability and renewable energy initiatives, including a demand response service, a partnership with Koganei City for a 'Zero Carbon City' declaration, and a demonstration project in Yokohama City to produce e-methane from sewage resources. The company is also venturing into the floating offshore wind power generation business. Despite these efforts, Osaka Gas has recently surpassed Tokyo Gas in market capitalization. Tokyo Gas is also a significant customer of Whelen and is recognized for its high-dividend stocks.": [
      "\u6771\u4eac\u30ac\u30b9\u3068\u6771\u6025\u30d1\u30ef\u30fc\u306f\u3001\u65e5\u672c\u306e\u7af6\u4e89\u529b\u306e\u3042\u308b\u9996\u90fd\u570f\u306e\u4e3b\u8981\u30d7\u30ec\u30fc\u30e4\u30fc\u3067\u3059\u3002\u6771\u4eac\u30ac\u30b9\u306f\u3001\u9700\u8981\u5fdc\u7b54\u30b5\u30fc\u30d3\u30b9\u3001\u5c0f\u91d1\u4e95\u5e02\u3068\u306e\u300c\u30bc\u30ed\u30ab\u30fc\u30dc\u30f3\u30b7\u30c6\u30a3\u300d\u5ba3\u8a00\u306e\u30d1\u30fc\u30c8\u30ca\u30fc\u30b7\u30c3\u30d7\u3001\u6a2a\u6d5c\u5e02\u3067\u306e\u4e0b\u6c34\u8cc7\u6e90\u304b\u3089\u306ee-\u30e1\u30bf\u30f3\u751f\u7523\u306e\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306a\u3069\u3001\u6301\u7d9a\u53ef\u80fd\u6027\u3068\u518d\u751f\u53ef\u80fd\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u53d6\u308a\u7d44\u307f\u3092\u7a4d\u6975\u7684\u306b\u63a8\u9032\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u540c\u793e\u306f\u6d6e\u4f53\u5f0f\u6d0b\u4e0a\u98a8\u529b\u767a\u96fb\u4e8b\u696d\u306b\u3082\u9032\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u52aa\u529b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u6700\u8fd1\u3067\u306f\u5927\u962a\u30ac\u30b9\u304c\u6771\u4eac\u30ac\u30b9\u3092\u5e02\u5834\u8a55\u4fa1\u3067\u4e0a\u56de\u3063\u3066\u3044\u307e\u3059\u3002\u6771\u4eac\u30ac\u30b9\u306f\u307e\u305f\u3001\u30a6\u30a7\u30ec\u30f3\u306e\u91cd\u8981\u306a\u9867\u5ba2\u3067\u3042\u308a\u3001\u9ad8\u914d\u5f53\u682a\u3067\u8a8d\u77e5\u3055\u308c\u3066\u3044\u307e\u3059\u3002"
    ],
    "The discussion primarily revolves around the Obic Seagulls and Tokyo Gas American football game, with a particular focus on the cheerleaders and players. There's also a significant interest in Tokyo Gas's commercials, which are praised for their emotional impact and high production quality. Some users also mention Tokyo Gas in relation to other sports and events, such as baseball and a special 'Tokyo Gas Day' event featuring a live performance by the idol group '=LOVE'. Additionally, there are references to Tokyo Gas in the context of video games and a drama series.": [
      "\u8b70\u8ad6\u306f\u4e3b\u306b\u30aa\u30fc\u30d3\u30c3\u30af\u30b7\u30fc\u30ac\u30eb\u30ba\u3068\u6771\u4eac\u30ac\u30b9\u306e\u30a2\u30e1\u30ea\u30ab\u30f3\u30d5\u30c3\u30c8\u30dc\u30fc\u30eb\u306e\u8a66\u5408\u3001\u7279\u306b\u30c1\u30a2\u30ea\u30fc\u30c0\u30fc\u3084\u9078\u624b\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u306b\u3082\u5927\u304d\u306a\u95a2\u5fc3\u304c\u5bc4\u305b\u3089\u308c\u3066\u304a\u308a\u3001\u305d\u306e\u611f\u60c5\u7684\u306a\u5f71\u97ff\u529b\u3068\u9ad8\u3044\u5236\u4f5c\u54c1\u8cea\u304c\u79f0\u8cdb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4e00\u90e8\u306e\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u91ce\u7403\u3084\u30a2\u30a4\u30c9\u30eb\u30b0\u30eb\u30fc\u30d7'=LOVE'\u306e\u30e9\u30a4\u30d6\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u3057\u305f\u7279\u5225\u306a'\u6771\u4eac\u30ac\u30b9\u30c7\u30fc'\u30a4\u30d9\u30f3\u30c8\u306a\u3069\u3001\u4ed6\u306e\u30b9\u30dd\u30fc\u30c4\u3084\u30a4\u30d9\u30f3\u30c8\u3068\u306e\u95a2\u9023\u3067\u6771\u4eac\u30ac\u30b9\u306b\u8a00\u53ca\u3057\u3066\u3044\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u30d3\u30c7\u30aa\u30b2\u30fc\u30e0\u3084\u30c9\u30e9\u30de\u30b7\u30ea\u30fc\u30ba\u306e\u6587\u8108\u3067\u6771\u4eac\u30ac\u30b9\u306b\u8a00\u53ca\u3059\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002"
    ],
    "Participants expressed mixed views on Tokyo Electric Power Company and TOKYOGAS. Some praised their reliability and safety, while others criticized their pricing and customer service. There was skepticism towards new power companies, with some users recommending thorough research before switching. Concerns were raised about the complexity of managing electricity and gas from different providers. Some users reported higher bills after switching to new providers. There were also complaints about TOKYOGAS's energy-saving campaign and meter replacement practices. A few users mentioned the benefits of online services for elderly customers.": [
      "\u53c2\u52a0\u8005\u306f\u6771\u4eac\u96fb\u529b\u3068\u6771\u4eac\u30ac\u30b9\u306b\u3064\u3044\u3066\u8cdb\u5426\u4e21\u8ad6\u306e\u610f\u898b\u3092\u8ff0\u3079\u307e\u3057\u305f\u3002\u4e00\u90e8\u306e\u4eba\u3005\u306f\u305d\u306e\u4fe1\u983c\u6027\u3068\u5b89\u5168\u6027\u3092\u79f0\u8cdb\u3057\u3001\u4ed6\u306e\u4eba\u3005\u306f\u4fa1\u683c\u8a2d\u5b9a\u3068\u30ab\u30b9\u30bf\u30de\u30fc\u30b5\u30fc\u30d3\u30b9\u3092\u6279\u5224\u3057\u307e\u3057\u305f\u3002\u65b0\u3057\u3044\u96fb\u529b\u4f1a\u793e\u306b\u5bfe\u3057\u3066\u306f\u61d0\u7591\u7684\u306a\u610f\u898b\u304c\u3042\u308a\u3001\u4e00\u90e8\u306e\u30e6\u30fc\u30b6\u30fc\u306f\u5207\u308a\u66ff\u3048\u308b\u524d\u306b\u5341\u5206\u306a\u8abf\u67fb\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u7570\u306a\u308b\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u304b\u3089\u306e\u96fb\u6c17\u3068\u30ac\u30b9\u306e\u7ba1\u7406\u306e\u8907\u96d1\u3055\u306b\u3064\u3044\u3066\u61f8\u5ff5\u304c\u63d0\u8d77\u3055\u308c\u307e\u3057\u305f\u3002\u4e00\u90e8\u306e\u30e6\u30fc\u30b6\u30fc\u306f\u65b0\u3057\u3044\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u306b\u5207\u308a\u66ff\u3048\u305f\u5f8c\u306e\u8acb\u6c42\u984d\u304c\u9ad8\u304f\u306a\u3063\u305f\u3068\u5831\u544a\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u7701\u30a8\u30cd\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u3068\u30e1\u30fc\u30bf\u30fc\u4ea4\u63db\u306e\u5b9f\u8df5\u306b\u3064\u3044\u3066\u3082\u82e6\u60c5\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u4e00\u90e8\u306e\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u9ad8\u9f62\u8005\u5411\u3051\u306e\u30aa\u30f3\u30e9\u30a4\u30f3\u30b5\u30fc\u30d3\u30b9\u306e\u5229\u70b9\u306b\u3064\u3044\u3066\u8a00\u53ca\u3057\u307e\u3057\u305f\u3002"
    ],
    "The discussion primarily revolves around Japanese sports, with a particular focus on baseball and swimming. Keiichi Kimura, a swimmer from Tokyo Gas, is repeatedly highlighted for his gold medal win in the men's 50m freestyle at the Paris Paralympics. The participants also discuss various baseball teams and players, including those from Tokyo Gas, and the Hiroshima Toyo Carp's draft picks for 2022. There's also mention of a virtual weight loss challenge and a high school baseball player discussion from Yamanashi Prefecture, Japan.": [
      "\u8b70\u8ad6\u306f\u4e3b\u306b\u65e5\u672c\u306e\u30b9\u30dd\u30fc\u30c4\u3001\u7279\u306b\u91ce\u7403\u3068\u6c34\u6cf3\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\u6771\u4eac\u30ac\u30b9\u306e\u6cf3\u304e\u624b\u3067\u3042\u308b\u6728\u6751\u6176\u4e00\u306f\u3001\u30d1\u30ea\u30d1\u30e9\u30ea\u30f3\u30d4\u30c3\u30af\u306e\u7537\u5b5050m\u81ea\u7531\u5f62\u3067\u306e\u91d1\u30e1\u30c0\u30eb\u7372\u5f97\u304c\u4f55\u5ea6\u3082\u5f37\u8abf\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u53c2\u52a0\u8005\u305f\u3061\u306f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u30c1\u30fc\u30e0\u3084\u9078\u624b\u3001\u305d\u3057\u3066\u5e83\u5cf6\u6771\u6d0b\u30ab\u30fc\u30d7\u306e2022\u5e74\u306e\u30c9\u30e9\u30d5\u30c8\u6307\u540d\u9078\u624b\u306a\u3069\u3001\u3055\u307e\u3056\u307e\u306a\u91ce\u7403\u30c1\u30fc\u30e0\u3068\u9078\u624b\u306b\u3064\u3044\u3066\u3082\u8b70\u8ad6\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u30d0\u30fc\u30c1\u30e3\u30eb\u306a\u6e1b\u91cf\u30c1\u30e3\u30ec\u30f3\u30b8\u3084\u3001\u5c71\u68a8\u770c\u306e\u9ad8\u6821\u91ce\u7403\u9078\u624b\u306e\u8b70\u8ad6\u306b\u3064\u3044\u3066\u3082\u8a00\u53ca\u304c\u3042\u308a\u307e\u3059\u3002"
    ],
    "The participants expressed a range of concerns and complaints about TOKYOGAS. These include dissatisfaction with the company's advertising language, unexpected inspection visits, and charges for services without prior notification. There were also concerns about the company's association with South Korea and allegations of involvement in a dormitory incident. Some participants reported receiving unsolicited emails from various companies, including TOKYOGAS, causing frustration and fear. However, there were also positive interactions, with one participant thanking TOKYOGAS for providing useful information.": [
      "\u53c2\u52a0\u8005\u305f\u3061\u306f\u3001TOKYOGAS\u306b\u5bfe\u3059\u308b\u3055\u307e\u3056\u307e\u306a\u61f8\u5ff5\u3068\u4e0d\u6e80\u3092\u8868\u660e\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u306f\u3001\u540c\u793e\u306e\u5e83\u544a\u8a00\u8a9e\u306b\u5bfe\u3059\u308b\u4e0d\u6e80\u3001\u4e88\u671f\u3057\u306a\u3044\u691c\u67fb\u8a2a\u554f\u3001\u4e8b\u524d\u901a\u77e5\u306a\u3057\u306e\u30b5\u30fc\u30d3\u30b9\u6599\u91d1\u306a\u3069\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u540c\u793e\u304c\u97d3\u56fd\u3068\u95a2\u9023\u3057\u3066\u3044\u308b\u3053\u3068\u3084\u3001\u5bee\u3067\u306e\u4e8b\u4ef6\u306b\u95a2\u4e0e\u3057\u3066\u3044\u308b\u3068\u306e\u4e3b\u5f35\u306b\u3064\u3044\u3066\u3082\u61f8\u5ff5\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u4e00\u90e8\u306e\u53c2\u52a0\u8005\u306f\u3001TOKYOGAS\u3092\u542b\u3080\u3055\u307e\u3056\u307e\u306a\u4f01\u696d\u304b\u3089\u52e7\u8a98\u30e1\u30fc\u30eb\u3092\u53d7\u3051\u53d6\u3063\u305f\u3068\u5831\u544a\u3057\u3001\u3053\u308c\u306b\u3088\u308a\u4e0d\u6e80\u3068\u6050\u6016\u3092\u611f\u3058\u3066\u3044\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u30dd\u30b8\u30c6\u30a3\u30d6\u306a\u4ea4\u6d41\u3082\u3042\u308a\u30011\u4eba\u306e\u53c2\u52a0\u8005\u306fTOKYOGAS\u306b\u6709\u7528\u306a\u60c5\u5831\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u305f\u3053\u3068\u306b\u611f\u8b1d\u3057\u3066\u3044\u307e\u3057\u305f\u3002"
    ],
    "The participants discussed a variety of topics related to Tokyo Gas, including its house cleaning service, appliance efficiency, cooking tips, shoe care, and disaster preparedness. They also mentioned promotional events, such as a collaboration with the Japan Green Tea Center for a Halloween event and a limited-time mattress cleaning service. Some participants shared their personal experiences with Tokyo Gas, including safety inspections and air conditioner cleaning. The conversation also touched on Tokyo Gas's radio commercials and their impact on household behaviors.": [
      "\u53c2\u52a0\u8005\u305f\u3061\u306f\u3001\u6771\u4eac\u30ac\u30b9\u306b\u95a2\u9023\u3059\u308b\u3055\u307e\u3056\u307e\u306a\u30c8\u30d4\u30c3\u30af\u306b\u3064\u3044\u3066\u8b70\u8ad6\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u306b\u306f\u3001\u5bb6\u306e\u6e05\u6383\u30b5\u30fc\u30d3\u30b9\u3001\u5bb6\u96fb\u306e\u52b9\u7387\u3001\u6599\u7406\u306e\u30d2\u30f3\u30c8\u3001\u9774\u306e\u624b\u5165\u308c\u3001\u707d\u5bb3\u5bfe\u7b56\u306a\u3069\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u30cf\u30ed\u30a6\u30a3\u30f3\u30a4\u30d9\u30f3\u30c8\u3084\u671f\u9593\u9650\u5b9a\u306e\u30de\u30c3\u30c8\u30ec\u30b9\u6e05\u6383\u30b5\u30fc\u30d3\u30b9\u306e\u305f\u3081\u306e\u65e5\u672c\u7dd1\u8336\u30bb\u30f3\u30bf\u30fc\u3068\u306e\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u306e\u30d7\u30ed\u30e2\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8\u306b\u3064\u3044\u3066\u3082\u8a00\u53ca\u3057\u307e\u3057\u305f\u3002\u4e00\u90e8\u306e\u53c2\u52a0\u8005\u306f\u3001\u5b89\u5168\u691c\u67fb\u3084\u30a8\u30a2\u30b3\u30f3\u306e\u6e05\u6383\u306a\u3069\u3001\u6771\u4eac\u30ac\u30b9\u3068\u306e\u500b\u4eba\u7684\u306a\u7d4c\u9a13\u3092\u5171\u6709\u3057\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u30e9\u30b8\u30aa\u30b3\u30de\u30fc\u30b7\u30e3\u30eb\u3068\u305d\u308c\u304c\u5bb6\u5ead\u306e\u884c\u52d5\u306b\u4e0e\u3048\u308b\u5f71\u97ff\u306b\u3064\u3044\u3066\u3082\u8a71\u984c\u306b\u306a\u308a\u307e\u3057\u305f\u3002"
    ],
    "The public consultation revealed six distinct clusters of opinions on Tokyo Gas. Cluster 0 focused on the company's business strategies and market position, highlighting its sustainability initiatives but also its recent market capitalization loss to Osaka Gas. Cluster 1 and 3 revolved around Tokyo Gas's involvement in sports and entertainment, with mentions of American football, baseball, swimming, and media productions. Cluster 2 and 4 contained mixed consumer experiences and complaints about Tokyo Gas services, touching on issues like pricing, customer service, and unsolicited communications. Lastly, Cluster 5 discussed Tokyo Gas's home services and lifestyle tips, including cleaning services, appliance efficiency, and disaster preparedness.": [
      "\u516c\u958b\u306e\u610f\u898b\u4ea4\u63db\u3067\u306f\u3001\u6771\u4eac\u30ac\u30b9\u306b\u5bfe\u3059\u308b6\u3064\u306e\u660e\u78ba\u306a\u610f\u898b\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u304c\u660e\u3089\u304b\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30af\u30e9\u30b9\u30bf\u30fc0\u306f\u3001\u540c\u793e\u306e\u30d3\u30b8\u30cd\u30b9\u6226\u7565\u3068\u5e02\u5834\u5730\u4f4d\u306b\u7126\u70b9\u3092\u5f53\u3066\u3001\u6301\u7d9a\u53ef\u80fd\u6027\u306e\u53d6\u308a\u7d44\u307f\u3092\u5f37\u8abf\u3057\u3064\u3064\u3001\u6700\u8fd1\u306e\u5e02\u5834\u8cc7\u672c\u5316\u306e\u640d\u5931\u3092\u5927\u962a\u30ac\u30b9\u306b\u5bfe\u3057\u3066\u6307\u6458\u3057\u307e\u3057\u305f\u3002\u30af\u30e9\u30b9\u30bf\u30fc1\u30683\u306f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u30b9\u30dd\u30fc\u30c4\u3084\u30a8\u30f3\u30bf\u30fc\u30c6\u30a4\u30e1\u30f3\u30c8\u3078\u306e\u95a2\u4e0e\u3092\u4e2d\u5fc3\u306b\u5c55\u958b\u3055\u308c\u3001\u30a2\u30e1\u30ea\u30ab\u30f3\u30d5\u30c3\u30c8\u30dc\u30fc\u30eb\u3001\u91ce\u7403\u3001\u6c34\u6cf3\u3001\u30e1\u30c7\u30a3\u30a2\u5236\u4f5c\u306a\u3069\u304c\u8a00\u53ca\u3055\u308c\u307e\u3057\u305f\u3002\u30af\u30e9\u30b9\u30bf\u30fc2\u30684\u306f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3059\u308b\u6df7\u5408\u3057\u305f\u6d88\u8cbb\u8005\u306e\u7d4c\u9a13\u3068\u82e6\u60c5\u3092\u542b\u3093\u3067\u304a\u308a\u3001\u4fa1\u683c\u8a2d\u5b9a\u3001\u30ab\u30b9\u30bf\u30de\u30fc\u30b5\u30fc\u30d3\u30b9\u3001\u52e7\u8a98\u901a\u4fe1\u306a\u3069\u306e\u554f\u984c\u306b\u89e6\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u6700\u5f8c\u306b\u3001\u30af\u30e9\u30b9\u30bf\u30fc5\u3067\u306f\u3001\u6771\u4eac\u30ac\u30b9\u306e\u30db\u30fc\u30e0\u30b5\u30fc\u30d3\u30b9\u3084\u30e9\u30a4\u30d5\u30b9\u30bf\u30a4\u30eb\u306e\u30d2\u30f3\u30c8\u306b\u3064\u3044\u3066\u8b70\u8ad6\u3055\u308c\u3001\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u3001\u5bb6\u96fb\u306e\u52b9\u7387\u6027\u3001\u707d\u5bb3\u5bfe\u7b56\u306a\u3069\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3057\u305f\u3002"
    ],
    "This AI-generated report relies on data from a Twitter.": [
      "\u3053\u306eAI\u751f\u6210\u30ec\u30dd\u30fc\u30c8\u306fTwitter\u304b\u3089\u306e\u30c7\u30fc\u30bf\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u3002"
    ]
  },
  "overview": "The public consultation revealed six distinct clusters of opinions on Tokyo Gas. Cluster 0 focused on the company's business strategies and market position, highlighting its sustainability initiatives but also its recent market capitalization loss to Osaka Gas. Cluster 1 and 3 revolved around Tokyo Gas's involvement in sports and entertainment, with mentions of American football, baseball, swimming, and media productions. Cluster 2 and 4 contained mixed consumer experiences and complaints about Tokyo Gas services, touching on issues like pricing, customer service, and unsolicited communications. Lastly, Cluster 5 discussed Tokyo Gas's home services and lifestyle tips, including cleaning services, appliance efficiency, and disaster preparedness.",
  "config": {
    "name": "Twitter\u3067\u306e\u6771\u4eac\u30ac\u30b9\u306b\u95a2\u3059\u308b\u30dd\u30b9\u30c8\u5206\u6790",
    "question": "\u307f\u3093\u306a\u306fTwitter\u3067\u6771\u4eac\u30ac\u30b9\u306b\u3069\u3093\u306a\u611f\u60c5\u3092\u62b1\u3044\u3066\u3044\u307e\u3059\u304b\uff1f",
    "input": "demo",
    "model": "gpt-4",
    "extraction": {
      "workers": 3,
      "limit": 120,
      "source_code": "import os\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\nimport concurrent.futures\n\n\ndef extraction(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/args.csv\"\n    comments = pd.read_csv(f\"inputs/{config['input']}.csv\")\n\n    model = config['extraction']['model']\n    prompt = config['extraction']['prompt']\n    workers = config['extraction']['workers']\n    limit = config['extraction']['limit']\n\n    comment_ids = (comments['comment-id'].values)[:limit]\n    comments.set_index('comment-id', inplace=True)\n    results = pd.DataFrame()\n    update_progress(config, total=len(comment_ids))\n    for i in tqdm(range(0, len(comment_ids), workers)):\n        batch = comment_ids[i: i + workers]\n        batch_inputs = [comments.loc[id]['comment-body'] for id in batch]\n        batch_results = extract_batch(batch_inputs, prompt, model, workers)\n        for comment_id, extracted_args in zip(batch, batch_results):\n            for j, arg in enumerate(extracted_args):\n                new_row = {\"arg-id\": f\"A{comment_id}_{j}\",\n                           \"comment-id\": int(comment_id), \"argument\": arg}\n                results = pd.concat(\n                    [results, pd.DataFrame([new_row])], ignore_index=True)\n        update_progress(config, incr=len(batch))\n    results.to_csv(path, index=False)\n\n\ndef extract_batch(batch, prompt, model, workers):\n    with concurrent.futures.ThreadPoolExecutor(max_workers=workers) as executor:\n        futures = [executor.submit(\n            extract_arguments, input, prompt, model) for input in list(batch)]\n        concurrent.futures.wait(futures)\n        return [future.result() for future in futures]\n\n\ndef extract_arguments(input, prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    try:\n        obj = json.loads(response)\n        # LLM sometimes returns valid JSON string\n        if isinstance(obj, str):\n            obj = [obj]\n        # \u4fee\u6b63\u524d\n        # items = [a.strip() for a in obj]\n\n        # \u4fee\u6b63\u5f8c\n        if isinstance(obj, dict):\n            # obj\u304c\u8f9e\u66f8\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u5024\u306b\u5bfe\u3057\u3066strip()\u3092\u9069\u7528\u3059\u308b\n            items = [str(value).strip() for value in obj.values()]\n        elif isinstance(obj, list):\n            # obj\u304c\u30ea\u30b9\u30c8\u3067\u3042\u308c\u3070\u3001\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066strip()\u3092\u9069\u7528\u3059\u308b\n            items = [str(a).strip() for a in obj]\n        else:\n            # \u305d\u306e\u4ed6\u306e\u578b\u306b\u5bfe\u3057\u3066\u306f\u9069\u5207\u306b\u5bfe\u51e6\u3059\u308b\n            items = [str(obj).strip()]\n        items = filter(None, items)  # omit empty strings\n        return items\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Input was:\", input)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying...\")\n            return extract_arguments(input, prompt, model, retries - 1)\n        else:\n            print(\"Silently giving up on trying to generate valid list.\")\n            return []\n",
      "prompt": "/system\n\nYou are a professional analyst in the energy industry.\n\nAs context, we have collected comments on Twitter about TOKYOGAS in Japan. I will now provide examples of discussions from the public, and I would like you to make them more concise and easier to read. If truly necessary, you can break them into two separate arguments, but in most cases, it is better to return them as a single argument.\n\nPlease return the result as a well-formatted JSON list of strings.",
      "model": "gpt-4"
    },
    "clustering": {
      "clusters": 6,
      "source_code": "\"\"\"Cluster the arguments using UMAP + HDBSCAN and GPT-4.\"\"\"\n\nimport pandas as pd\nimport numpy as np\nfrom importlib import import_module\n\n\ndef clustering(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/clusters.csv\"\n    arguments_df = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    arguments_array = arguments_df[\"argument\"].values\n\n    embeddings_df = pd.read_pickle(f\"outputs/{dataset}/embeddings.pkl\")\n    embeddings_array = np.asarray(embeddings_df[\"embedding\"].values.tolist())\n    clusters = config['clustering']['clusters']\n\n    result = cluster_embeddings(\n        docs=arguments_array,\n        embeddings=embeddings_array,\n        metadatas={\n            \"arg-id\": arguments_df[\"arg-id\"].values,\n            \"comment-id\": arguments_df[\"comment-id\"].values,\n        },\n        n_topics=clusters,\n    )\n    result.to_csv(path, index=False)\n\n\ndef cluster_embeddings(\n    docs,\n    embeddings,\n    metadatas,\n    min_cluster_size=2,\n    n_components=2,\n    n_topics=6,\n):\n    # (!) we import the following modules dynamically for a reason\n    # (they are slow to load and not required for all pipelines)\n    SpectralClustering = import_module('sklearn.cluster').SpectralClustering\n    stopwords = import_module('nltk.corpus').stopwords\n    HDBSCAN = import_module('hdbscan').HDBSCAN\n    UMAP = import_module('umap').UMAP\n    CountVectorizer = import_module(\n        'sklearn.feature_extraction.text').CountVectorizer\n    BERTopic = import_module('bertopic').BERTopic\n\n    umap_model = UMAP(\n        random_state=42,\n        n_components=n_components,\n    )\n    hdbscan_model = HDBSCAN(min_cluster_size=min_cluster_size)\n\n    stop = stopwords.words(\"english\")\n    vectorizer_model = CountVectorizer(stop_words=stop)\n    topic_model = BERTopic(\n        umap_model=umap_model,\n        hdbscan_model=hdbscan_model,\n        vectorizer_model=vectorizer_model,\n        verbose=True,\n    )\n\n    # Fit the topic model.\n    _, __ = topic_model.fit_transform(docs, embeddings=embeddings)\n\n    n_samples = len(embeddings)\n    n_neighbors = min(n_samples - 1, 10)\n    spectral_model = SpectralClustering(\n        n_clusters=n_topics,\n        affinity=\"nearest_neighbors\",\n        n_neighbors=n_neighbors,  # Use the modified n_neighbors\n        random_state=42\n    )\n    umap_embeds = umap_model.fit_transform(embeddings)\n    cluster_labels = spectral_model.fit_predict(umap_embeds)\n\n    result = topic_model.get_document_info(\n        docs=docs,\n        metadata={\n            **metadatas,\n            \"x\": umap_embeds[:, 0],\n            \"y\": umap_embeds[:, 1],\n        },\n    )\n\n    result.columns = [c.lower() for c in result.columns]\n    result = result[['arg-id', 'x', 'y', 'probability']]\n    result['cluster-id'] = cluster_labels\n\n    return result\n"
    },
    "translation": {
      "model": "gpt-4",
      "languages": [
        "Japanese"
      ],
      "flags": [
        "JP"
      ],
      "source_code": "\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages\nfrom langchain.schema import AIMessage\nimport pandas as pd\nimport json\nfrom tqdm import tqdm\n\n\ndef translation(config):\n\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/translations.json\"\n    results = {}\n\n    languages = list(config.get('translation', {}).get('languages', []))\n    if len(languages) == 0:\n        print(\"No languages specified. Skipping translation step.\")\n        # creating an empty file any, to reduce special casing later\n        with open(path, 'w') as file:\n            json.dump(results, file, indent=2)\n        return\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    with open(f\"outputs/{dataset}/overview.txt\") as f:\n        overview = f.read()\n\n    UI_copy = [\"Argument\", \"Original comment\", \"Representative arguments\",\n               \"Open full-screen map\", \"Back to report\", \"Hide labels\", \"Show labels\",\n               \"Show filters\", \"Hide filters\", \"Min. votes\", \"Consensus\",\n               \"Showing\", \"arguments\", \"Reset zoom\", \"Click anywhere on the map to close this\",\n               \"Click on the dot for details\",\n               \"agree\", \"disagree\", \"Language\", \"English\", \"arguments\", \"of total\",\n               \"Overview\", \"Cluster analysis\", \"Representative comments\", \"Introduction\",\n               \"Clusters\", \"Appendix\", \"This report was generated using an AI pipeline that consists of the following steps\",\n               \"Step\", \"extraction\", \"show code\", \"hide code\", \"show prompt\", \"hide prompt\", \"embedding\",\n               \"clustering\", \"labelling\", \"takeaways\", \"overview\"]\n\n    arg_list = arguments['argument'].to_list() + \\\n        labels['label'].to_list() + \\\n        UI_copy + \\\n        languages\n\n    if 'name' in config:\n        arg_list.append(config['name'])\n    if 'question' in config:\n        arg_list.append(config['question'])\n\n    prompt_file = config.get('translation_prompt', 'default')\n    with open(f\"prompts/translation/{prompt_file}.txt\") as f:\n        prompt = f.read()\n    model = config['model']\n\n    config['translation_prompt'] = prompt\n\n    translations = [translate_lang(\n        arg_list, 10, prompt, lang, model) for lang in languages]\n\n    # handling long takeaways differently, WITHOUT batching too much\n    long_arg_list = takeaways['takeaways'].to_list()\n    long_arg_list.append(overview)\n    if 'intro' in config:\n        long_arg_list.append(config['intro'])\n\n    long_translations = [translate_lang(\n        long_arg_list, 1, prompt, lang, model) for lang in languages]\n\n    for i, id in enumerate(arg_list):\n        print('i, id', i, id)\n        results[str(id)] = list([t[i] for t in translations])\n    for i, id in enumerate(long_arg_list):\n        results[str(id)] = list([t[i] for t in long_translations])\n\n    with open(path, 'w') as file:\n        json.dump(results, file, indent=2)\n\n\ndef translate_lang(arg_list, batch_size, prompt, lang, model):\n    translations = []\n    lang_prompt = prompt.replace(\"{language}\", lang)\n    print(f\"Translating to {lang}...\")\n    for i in tqdm(range(0, len(arg_list), batch_size)):\n        batch = arg_list[i: i + batch_size]\n        translations.extend(translate_batch(batch, lang_prompt, model))\n    return translations\n\n\ndef translate_batch(batch, lang_prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = json.dumps(list(batch))\n    response = llm(messages=messages(lang_prompt, input)).content.strip()\n    if \"```\" in response:\n        response = response.split(\"```\")[1]\n    if response.startswith(\"json\"):\n        response = response[4:]\n    try:\n        parsed = [a.strip() for a in json.loads(response)]\n        if len(parsed) != len(batch):\n            print(\"Warning: batch size mismatch!\")\n            print(\"Batch len:\", len(batch))\n            print(\"Response len:\", len(parsed))\n            for i, item in enumerate(batch):\n                print(f\"Batch item {i}:\", item)\n                if (i < len(parsed)):\n                    print(\"Response:\", parsed[i])\n            if (len(batch) > 1):\n                print(\"Retrying with smaller batches...\")\n                mid = len(batch) // 2\n                return translate_batch(batch[:mid], lang_prompt, model, retries - 1) + \\\n                    translate_batch(\n                        batch[mid:], lang_prompt, model, retries - 1)\n            else:\n                print(\"Retrying batch...\")\n                return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            return parsed\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying batch...\")\n            return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            raise e\n",
      "prompt": "/system \n\nYou are a professional translator.\nYou will receive a list of words and sentences written in English. \nPlease return the same list, in the same order, but translated to {language}.\nMake sure to return a valid JSON list of string of the same length as the original list."
    },
    "intro": "This AI-generated report relies on data from a Twitter.",
    "output_dir": "demo",
    "previous": {
      "name": "Twitter\u3067\u306e\u6771\u4eac\u30ac\u30b9\u306b\u95a2\u3059\u308b\u30dd\u30b9\u30c8\u5206\u6790",
      "question": "\u307f\u3093\u306a\u306fTwitter\u3067\u6771\u4eac\u30ac\u30b9\u306b\u3069\u3093\u306a\u611f\u60c5\u3092\u62b1\u3044\u3066\u3044\u307e\u3059\u304b\uff1f",
      "input": "demo",
      "model": "gpt-4",
      "extraction": {
        "workers": 3,
        "limit": 120,
        "source_code": "import os\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\nimport concurrent.futures\n\n\ndef extraction(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/args.csv\"\n    comments = pd.read_csv(f\"inputs/{config['input']}.csv\")\n\n    model = config['extraction']['model']\n    prompt = config['extraction']['prompt']\n    workers = config['extraction']['workers']\n    limit = config['extraction']['limit']\n\n    comment_ids = (comments['comment-id'].values)[:limit]\n    comments.set_index('comment-id', inplace=True)\n    results = pd.DataFrame()\n    update_progress(config, total=len(comment_ids))\n    for i in tqdm(range(0, len(comment_ids), workers)):\n        batch = comment_ids[i: i + workers]\n        batch_inputs = [comments.loc[id]['comment-body'] for id in batch]\n        batch_results = extract_batch(batch_inputs, prompt, model, workers)\n        for comment_id, extracted_args in zip(batch, batch_results):\n            for j, arg in enumerate(extracted_args):\n                new_row = {\"arg-id\": f\"A{comment_id}_{j}\",\n                           \"comment-id\": int(comment_id), \"argument\": arg}\n                results = pd.concat(\n                    [results, pd.DataFrame([new_row])], ignore_index=True)\n        update_progress(config, incr=len(batch))\n    results.to_csv(path, index=False)\n\n\ndef extract_batch(batch, prompt, model, workers):\n    with concurrent.futures.ThreadPoolExecutor(max_workers=workers) as executor:\n        futures = [executor.submit(\n            extract_arguments, input, prompt, model) for input in list(batch)]\n        concurrent.futures.wait(futures)\n        return [future.result() for future in futures]\n\n\ndef extract_arguments(input, prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    try:\n        obj = json.loads(response)\n        # LLM sometimes returns valid JSON string\n        if isinstance(obj, str):\n            obj = [obj]\n        items = [a.strip() for a in obj]\n        items = filter(None, items)  # omit empty strings\n        return items\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Input was:\", input)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying...\")\n            return extract_arguments(input, prompt, model, retries - 1)\n        else:\n            print(\"Silently giving up on trying to generate valid list.\")\n            return []\n",
        "prompt": "/system\n\nYou are a professional analyst in the energy industry.\n\nAs context, we have collected comments on Twitter about TOKYOGAS in Japan. I will now provide examples of discussions from the public, and I would like you to make them more concise and easier to read. If truly necessary, you can break them into two separate arguments, but in most cases, it is better to return them as a single argument.\n\nPlease return the result as a well-formatted JSON list of strings.",
        "model": "gpt-4"
      },
      "clustering": {
        "clusters": 6,
        "source_code": "\"\"\"Cluster the arguments using UMAP + HDBSCAN and GPT-4.\"\"\"\n\nimport pandas as pd\nimport numpy as np\nfrom importlib import import_module\n\n\ndef clustering(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/clusters.csv\"\n    arguments_df = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    arguments_array = arguments_df[\"argument\"].values\n\n    embeddings_df = pd.read_pickle(f\"outputs/{dataset}/embeddings.pkl\")\n    embeddings_array = np.asarray(embeddings_df[\"embedding\"].values.tolist())\n    clusters = config['clustering']['clusters']\n\n    result = cluster_embeddings(\n        docs=arguments_array,\n        embeddings=embeddings_array,\n        metadatas={\n            \"arg-id\": arguments_df[\"arg-id\"].values,\n            \"comment-id\": arguments_df[\"comment-id\"].values,\n        },\n        n_topics=clusters,\n    )\n    result.to_csv(path, index=False)\n\n\ndef cluster_embeddings(\n    docs,\n    embeddings,\n    metadatas,\n    min_cluster_size=2,\n    n_components=2,\n    n_topics=6,\n):\n    # (!) we import the following modules dynamically for a reason\n    # (they are slow to load and not required for all pipelines)\n    SpectralClustering = import_module('sklearn.cluster').SpectralClustering\n    stopwords = import_module('nltk.corpus').stopwords\n    HDBSCAN = import_module('hdbscan').HDBSCAN\n    UMAP = import_module('umap').UMAP\n    CountVectorizer = import_module(\n        'sklearn.feature_extraction.text').CountVectorizer\n    BERTopic = import_module('bertopic').BERTopic\n\n    umap_model = UMAP(\n        random_state=42,\n        n_components=n_components,\n    )\n    hdbscan_model = HDBSCAN(min_cluster_size=min_cluster_size)\n\n    stop = stopwords.words(\"english\")\n    vectorizer_model = CountVectorizer(stop_words=stop)\n    topic_model = BERTopic(\n        umap_model=umap_model,\n        hdbscan_model=hdbscan_model,\n        vectorizer_model=vectorizer_model,\n        verbose=True,\n    )\n\n    # Fit the topic model.\n    _, __ = topic_model.fit_transform(docs, embeddings=embeddings)\n\n    n_samples = len(embeddings)\n    n_neighbors = min(n_samples - 1, 10)\n    spectral_model = SpectralClustering(\n        n_clusters=n_topics,\n        affinity=\"nearest_neighbors\",\n        n_neighbors=n_neighbors,  # Use the modified n_neighbors\n        random_state=42\n    )\n    umap_embeds = umap_model.fit_transform(embeddings)\n    cluster_labels = spectral_model.fit_predict(umap_embeds)\n\n    result = topic_model.get_document_info(\n        docs=docs,\n        metadata={\n            **metadatas,\n            \"x\": umap_embeds[:, 0],\n            \"y\": umap_embeds[:, 1],\n        },\n    )\n\n    result.columns = [c.lower() for c in result.columns]\n    result = result[['arg-id', 'x', 'y', 'probability']]\n    result['cluster-id'] = cluster_labels\n\n    return result\n"
      },
      "translation": {
        "model": "gpt-4",
        "languages": [
          "Japanese"
        ],
        "flags": [
          "JP"
        ],
        "source_code": "\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages\nfrom langchain.schema import AIMessage\nimport pandas as pd\nimport json\nfrom tqdm import tqdm\n\n\ndef translation(config):\n\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/translations.json\"\n    results = {}\n\n    languages = list(config.get('translation', {}).get('languages', []))\n    if len(languages) == 0:\n        print(\"No languages specified. Skipping translation step.\")\n        # creating an empty file any, to reduce special casing later\n        with open(path, 'w') as file:\n            json.dump(results, file, indent=2)\n        return\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    with open(f\"outputs/{dataset}/overview.txt\") as f:\n        overview = f.read()\n\n    UI_copy = [\"Argument\", \"Original comment\", \"Representative arguments\",\n               \"Open full-screen map\", \"Back to report\", \"Hide labels\", \"Show labels\",\n               \"Show filters\", \"Hide filters\", \"Min. votes\", \"Consensus\",\n               \"Showing\", \"arguments\", \"Reset zoom\", \"Click anywhere on the map to close this\",\n               \"Click on the dot for details\",\n               \"agree\", \"disagree\", \"Language\", \"English\", \"arguments\", \"of total\",\n               \"Overview\", \"Cluster analysis\", \"Representative comments\", \"Introduction\",\n               \"Clusters\", \"Appendix\", \"This report was generated using an AI pipeline that consists of the following steps\",\n               \"Step\", \"extraction\", \"show code\", \"hide code\", \"show prompt\", \"hide prompt\", \"embedding\",\n               \"clustering\", \"labelling\", \"takeaways\", \"overview\"]\n\n    arg_list = arguments['argument'].to_list() + \\\n        labels['label'].to_list() + \\\n        UI_copy + \\\n        languages\n\n    if 'name' in config:\n        arg_list.append(config['name'])\n    if 'question' in config:\n        arg_list.append(config['question'])\n\n    prompt_file = config.get('translation_prompt', 'default')\n    with open(f\"prompts/translation/{prompt_file}.txt\") as f:\n        prompt = f.read()\n    model = config['model']\n\n    config['translation_prompt'] = prompt\n\n    translations = [translate_lang(\n        arg_list, 10, prompt, lang, model) for lang in languages]\n\n    # handling long takeaways differently, WITHOUT batching too much\n    long_arg_list = takeaways['takeaways'].to_list()\n    long_arg_list.append(overview)\n    if 'intro' in config:\n        long_arg_list.append(config['intro'])\n\n    long_translations = [translate_lang(\n        long_arg_list, 1, prompt, lang, model) for lang in languages]\n\n    for i, id in enumerate(arg_list):\n        print('i, id', i, id)\n        results[str(id)] = list([t[i] for t in translations])\n    for i, id in enumerate(long_arg_list):\n        results[str(id)] = list([t[i] for t in long_translations])\n\n    with open(path, 'w') as file:\n        json.dump(results, file, indent=2)\n\n\ndef translate_lang(arg_list, batch_size, prompt, lang, model):\n    translations = []\n    lang_prompt = prompt.replace(\"{language}\", lang)\n    print(f\"Translating to {lang}...\")\n    for i in tqdm(range(0, len(arg_list), batch_size)):\n        batch = arg_list[i: i + batch_size]\n        translations.extend(translate_batch(batch, lang_prompt, model))\n    return translations\n\n\ndef translate_batch(batch, lang_prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = json.dumps(list(batch))\n    response = llm(messages=messages(lang_prompt, input)).content.strip()\n    if \"```\" in response:\n        response = response.split(\"```\")[1]\n    if response.startswith(\"json\"):\n        response = response[4:]\n    try:\n        parsed = [a.strip() for a in json.loads(response)]\n        if len(parsed) != len(batch):\n            print(\"Warning: batch size mismatch!\")\n            print(\"Batch len:\", len(batch))\n            print(\"Response len:\", len(parsed))\n            for i, item in enumerate(batch):\n                print(f\"Batch item {i}:\", item)\n                if (i < len(parsed)):\n                    print(\"Response:\", parsed[i])\n            if (len(batch) > 1):\n                print(\"Retrying with smaller batches...\")\n                mid = len(batch) // 2\n                return translate_batch(batch[:mid], lang_prompt, model, retries - 1) + \\\n                    translate_batch(\n                        batch[mid:], lang_prompt, model, retries - 1)\n            else:\n                print(\"Retrying batch...\")\n                return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            return parsed\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying batch...\")\n            return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            raise e\n",
        "prompt": "/system \n\nYou are a professional translator.\nYou will receive a list of words and sentences written in English. \nPlease return the same list, in the same order, but translated to {language}.\nMake sure to return a valid JSON list of string of the same length as the original list."
      },
      "intro": "This AI-generated report relies on data from a Twitter.",
      "output_dir": "demo",
      "embedding": {
        "source_code": "\nfrom langchain.embeddings import OpenAIEmbeddings\nimport pandas as pd\nfrom tqdm import tqdm\n\n\ndef embedding(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/embeddings.pkl\"\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    embeddings = []\n    for i in tqdm(range(0, len(arguments), 1000)):\n        args = arguments[\"argument\"].tolist()[i: i + 1000]\n        embeds = OpenAIEmbeddings().embed_documents(args)\n        embeddings.extend(embeds)\n    df = pd.DataFrame(\n        [\n            {\"arg-id\": arguments.iloc[i][\"arg-id\"], \"embedding\": e}\n            for i, e in enumerate(embeddings)\n        ]\n    )\n    df.to_pickle(path)\n"
      },
      "labelling": {
        "sample_size": 30,
        "source_code": "\"\"\"Create labels for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef labelling(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/labels.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['labelling']['sample_size']\n    prompt = config['labelling']['prompt']\n    model = config['labelling']['model']\n\n    question = config['question']\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n\n        args_ids_outside = clusters[clusters['cluster-id']\n                                    != cluster_id]['arg-id'].values\n        args_ids_outside = np.random.choice(args_ids_outside, size=min(\n            len(args_ids_outside), sample_size), replace=False)\n        args_sample_outside = arguments[arguments['arg-id']\n                                        .isin(args_ids_outside)]['argument'].values\n\n        label = generate_label(question, args_sample,\n                               args_sample_outside, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'label': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_label(question, args_sample, args_sample_outside, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    outside = '\\n * ' + '\\n * '.join(args_sample_outside)\n    inside = '\\n * ' + '\\n * '.join(args_sample)\n    input = f\"Question of the consultation:{question}\\n\\n\" + \\\n        f\"Examples of arguments OUTSIDE the cluster:\\n {outside}\" + \\\n        f\"Examples of arguments INSIDE the cluster:\\n {inside}\"\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n",
        "prompt": "/system \n\nYou are a category labeling assistant that generates a category label \nfor a set of arguments within a broader consultation. You are given the main question \nof the consultation, list of arguments inside the cluster, and a list of arguments \noutside this cluster. You answer with a single category label that summarizes the \ncluster. \n\nYou do not include context that is already obvious from the question (for example: \nif the question of the consultation is something like \"what challenges are you facing \nin France\", there is no need to repeat \"in France\" in the cluster label).\n\nThe label must be very concise and just precise enough to capture what distinguishes \nthe cluster from the arguments found outside. \n",
        "model": "gpt-4"
      },
      "takeaways": {
        "sample_size": 30,
        "source_code": "\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef takeaways(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/takeaways.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['takeaways']['sample_size']\n    prompt = config['takeaways']['prompt']\n    model = config['takeaways']['model']\n\n    model = config.get('model_takeaways', config.get('model', 'gpt3.5-turbo'))\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n        label = generate_takeaways(args_sample, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'takeaways': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_takeaways(args_sample, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = \"\\n\".join(args_sample)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n",
        "prompt": "/system \n\nYou are an expert research assistant working in a think tank. You will be given a list of arguments that have been made by a cluster of participants during a public consultation. You respond with one or two paragraphs summarizing your main takeaways. You are very concise and write short, snappy sentences which are easy to read. \n \n/human\n\n[\n  \"I firmly believe that gun violence constitutes a severe public health crisis in our society.\",\n  \"We need to address this issue urgently through comprehensive gun control measures.\", \n  \"I support the implementation of universal background checks for all gun buyers\",\n  \"I am in favor of banning assault weapons and high-capacity magazines.\",\n  \"I advocate for stricter regulations to prevent illegal gun trafficking.\",\n  \"Mental health evaluations should be a mandatory part of the gun purchasing process.\"\n]\n\n/ai \n\nParticipants called for comprehensive gun control, emphasizing universal background checks, assault weapon bans, curbing illegal gun trafficking, and prioritizing mental health evaluations.",
        "model": "gpt-4"
      },
      "overview": {
        "source_code": "\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef overview(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/overview.txt\"\n\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n\n    prompt = config['overview']['prompt']\n    model = config['overview']['model']\n\n    ids = labels['cluster-id'].to_list()\n    takeaways.set_index('cluster-id', inplace=True)\n    labels.set_index('cluster-id', inplace=True)\n\n    input = ''\n    for i, id in enumerate(ids):\n        input += f\"# Cluster {i}/{len(ids)}: {labels.loc[id]['label']}\\n\\n\"\n        input += takeaways.loc[id]['takeaways'] + '\\n\\n'\n\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n\n    with open(path, 'w') as file:\n        file.write(response)\n",
        "prompt": "/system \n\nYou are an expert research assistant working in a think tank. \nYour team has run a public consultation on a given topic and has \nstarted to analyze what the different cluster of options are. \nYou will now receive the list of clusters with a brief \nanalysis of each cluster. Your job is to return a short summary of what \nthe findings were. Your summary must be very concise (at most one \nparagraph, containing at most four sentences) and you must avoid platitudes. ",
        "model": "gpt-4"
      },
      "aggregation": {
        "source_code": "\"\"\"Generate a convenient JSON output file.\"\"\"\n\nfrom tqdm import tqdm\nfrom typing import List\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nimport json\n\n\ndef aggregation(config):\n\n    path = f\"outputs/{config['output_dir']}/result.json\"\n\n    results = {\n        \"clusters\": [],\n        \"comments\": {},\n        \"translations\": {},\n        \"overview\": \"\",\n        \"config\": config,\n    }\n\n    arguments = pd.read_csv(f\"outputs/{config['output_dir']}/args.csv\")\n    arguments.set_index('arg-id', inplace=True)\n\n    comments = pd.read_csv(f\"inputs/{config['input']}.csv\")\n    useful_comment_ids = set(arguments['comment-id'].values)\n    for _, row in comments.iterrows():\n        id = row['comment-id']\n        if id in useful_comment_ids:\n            res = {'comment': row['comment-body']}\n            numeric_cols = ['agrees', 'disagrees']\n            string_cols = ['video', 'interview', 'timestamp']\n            for col in numeric_cols:\n                if col in row:\n                    res[col] = float(row[col])\n            for col in string_cols:\n                if col in row:\n                    res[col] = row[col]\n            results['comments'][str(id)] = res\n\n    languages = list(config.get('translation', {}).get('languages', []))\n    if len(languages) > 0:\n        with open(f\"outputs/{config['output_dir']}/translations.json\") as f:\n            translations = f.read()\n        results['translations'] = json.loads(translations)\n\n    clusters = pd.read_csv(f\"outputs/{config['output_dir']}/clusters.csv\")\n    labels = pd.read_csv(f\"outputs/{config['output_dir']}/labels.csv\")\n    takeaways = pd.read_csv(f\"outputs/{config['output_dir']}/takeaways.csv\")\n    takeaways.set_index('cluster-id', inplace=True)\n\n    with open(f\"outputs/{config['output_dir']}/overview.txt\") as f:\n        overview = f.read()\n    results['overview'] = overview\n\n    for _, row in labels.iterrows():\n        cid = row['cluster-id']\n        label = row['label']\n        arg_rows = clusters[clusters['cluster-id'] == cid]\n        arguments_in_cluster = []\n        for _, arg_row in arg_rows.iterrows():\n            arg_id = arg_row['arg-id']\n            argument = arguments.loc[arg_id]['argument']\n            comment_id = arguments.loc[arg_id]['comment-id']\n            x = float(arg_row['x'])\n            y = float(arg_row['y'])\n            p = float(arg_row['probability'])\n            obj = {\n                'arg_id': arg_id,\n                'argument': argument,\n                'comment_id': str(comment_id),\n                'x': x,\n                'y': y,\n                'p': p,\n            }\n            arguments_in_cluster.append(obj)\n        results['clusters'].append({\n            'cluster': label,\n            'cluster_id': str(cid),\n            'takeaways': takeaways.loc[cid]['takeaways'],\n            'arguments': arguments_in_cluster\n        })\n\n    with open(path, 'w') as file:\n        json.dump(results, file, indent=2)\n"
      },
      "visualization": {
        "replacements": [],
        "source_code": "\nimport subprocess\n\n\ndef visualization(config):\n    output_dir = config['output_dir']\n    with open(f\"outputs/{output_dir}/result.json\") as f:\n        result = f.read()\n\n    cwd = \"../next-app\"\n    command = f\"REPORT={output_dir} npm run build\"\n\n    try:\n        process = subprocess.Popen(command, shell=True, cwd=cwd, stdout=subprocess.PIPE,\n                                   stderr=subprocess.PIPE, universal_newlines=True)\n        while True:\n            output_line = process.stdout.readline()\n            if output_line == '' and process.poll() is not None:\n                break\n            if output_line:\n                print(output_line.strip())\n        process.wait()\n        errors = process.stderr.read()\n        if errors:\n            print(\"Errors:\")\n            print(errors)\n    except subprocess.CalledProcessError as e:\n        print(\"Error: \", e)\n"
      },
      "plan": [
        {
          "step": "extraction",
          "run": true,
          "reason": "not trace of previous run"
        },
        {
          "step": "embedding",
          "run": true,
          "reason": "not trace of previous run"
        },
        {
          "step": "clustering",
          "run": true,
          "reason": "not trace of previous run"
        },
        {
          "step": "labelling",
          "run": true,
          "reason": "not trace of previous run"
        },
        {
          "step": "takeaways",
          "run": true,
          "reason": "not trace of previous run"
        },
        {
          "step": "overview",
          "run": true,
          "reason": "not trace of previous run"
        },
        {
          "step": "translation",
          "run": true,
          "reason": "not trace of previous run"
        },
        {
          "step": "aggregation",
          "run": true,
          "reason": "not trace of previous run"
        },
        {
          "step": "visualization",
          "run": true,
          "reason": "not trace of previous run"
        }
      ],
      "status": "error",
      "start_time": "2024-10-23T23:37:50.362693",
      "completed_jobs": [],
      "lock_until": "2024-10-23T23:43:41.314725",
      "current_job": "extraction",
      "current_job_started": "2024-10-23T23:37:50.365421",
      "current_job_progress": 36,
      "current_jop_tasks": 120,
      "previously_completed_jobs": [],
      "end_time": "2024-10-23T23:38:41.311691",
      "error": "AttributeError: 'dict' object has no attribute 'strip'",
      "error_stack_trace": "Traceback (most recent call last):\n  File \"/Users/ad1dons/talk-to-the-city-reports/scatter/pipeline/main.py\", line 24, in main\n    run_step('extraction', extraction, config)\n  File \"/Users/ad1dons/talk-to-the-city-reports/scatter/pipeline/utils.py\", line 255, in run_step\n    func(config)\n  File \"/Users/ad1dons/talk-to-the-city-reports/scatter/pipeline/steps/extraction.py\", line 27, in extraction\n    batch_results = extract_batch(batch_inputs, prompt, model, workers)\n  File \"/Users/ad1dons/talk-to-the-city-reports/scatter/pipeline/steps/extraction.py\", line 43, in extract_batch\n    return [future.result() for future in futures]\n  File \"/Users/ad1dons/talk-to-the-city-reports/scatter/pipeline/steps/extraction.py\", line 43, in <listcomp>\n    return [future.result() for future in futures]\n  File \"/Users/ad1dons/.pyenv/versions/3.10.0/lib/python3.10/concurrent/futures/_base.py\", line 438, in result\n    return self.__get_result()\n  File \"/Users/ad1dons/.pyenv/versions/3.10.0/lib/python3.10/concurrent/futures/_base.py\", line 390, in __get_result\n    raise self._exception\n  File \"/Users/ad1dons/.pyenv/versions/3.10.0/lib/python3.10/concurrent/futures/thread.py\", line 52, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Users/ad1dons/talk-to-the-city-reports/scatter/pipeline/steps/extraction.py\", line 54, in extract_arguments\n    items = [a.strip() for a in obj]\n  File \"/Users/ad1dons/talk-to-the-city-reports/scatter/pipeline/steps/extraction.py\", line 54, in <listcomp>\n    items = [a.strip() for a in obj]\nAttributeError: 'dict' object has no attribute 'strip'\n"
    },
    "embedding": {
      "source_code": "\nfrom langchain.embeddings import OpenAIEmbeddings\nimport pandas as pd\nfrom tqdm import tqdm\n\n\ndef embedding(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/embeddings.pkl\"\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    embeddings = []\n    for i in tqdm(range(0, len(arguments), 1000)):\n        args = arguments[\"argument\"].tolist()[i: i + 1000]\n        embeds = OpenAIEmbeddings().embed_documents(args)\n        embeddings.extend(embeds)\n    df = pd.DataFrame(\n        [\n            {\"arg-id\": arguments.iloc[i][\"arg-id\"], \"embedding\": e}\n            for i, e in enumerate(embeddings)\n        ]\n    )\n    df.to_pickle(path)\n"
    },
    "labelling": {
      "sample_size": 30,
      "source_code": "\"\"\"Create labels for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef labelling(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/labels.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['labelling']['sample_size']\n    prompt = config['labelling']['prompt']\n    model = config['labelling']['model']\n\n    question = config['question']\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n\n        args_ids_outside = clusters[clusters['cluster-id']\n                                    != cluster_id]['arg-id'].values\n        args_ids_outside = np.random.choice(args_ids_outside, size=min(\n            len(args_ids_outside), sample_size), replace=False)\n        args_sample_outside = arguments[arguments['arg-id']\n                                        .isin(args_ids_outside)]['argument'].values\n\n        label = generate_label(question, args_sample,\n                               args_sample_outside, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'label': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_label(question, args_sample, args_sample_outside, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    outside = '\\n * ' + '\\n * '.join(args_sample_outside)\n    inside = '\\n * ' + '\\n * '.join(args_sample)\n    input = f\"Question of the consultation:{question}\\n\\n\" + \\\n        f\"Examples of arguments OUTSIDE the cluster:\\n {outside}\" + \\\n        f\"Examples of arguments INSIDE the cluster:\\n {inside}\"\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n",
      "prompt": "/system \n\nYou are a category labeling assistant that generates a category label \nfor a set of arguments within a broader consultation. You are given the main question \nof the consultation, list of arguments inside the cluster, and a list of arguments \noutside this cluster. You answer with a single category label that summarizes the \ncluster. \n\nYou do not include context that is already obvious from the question (for example: \nif the question of the consultation is something like \"what challenges are you facing \nin France\", there is no need to repeat \"in France\" in the cluster label).\n\nThe label must be very concise and just precise enough to capture what distinguishes \nthe cluster from the arguments found outside. \n",
      "model": "gpt-4"
    },
    "takeaways": {
      "sample_size": 30,
      "source_code": "\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef takeaways(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/takeaways.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['takeaways']['sample_size']\n    prompt = config['takeaways']['prompt']\n    model = config['takeaways']['model']\n\n    model = config.get('model_takeaways', config.get('model', 'gpt3.5-turbo'))\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n        label = generate_takeaways(args_sample, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'takeaways': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_takeaways(args_sample, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = \"\\n\".join(args_sample)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n",
      "prompt": "/system \n\nYou are an expert research assistant working in a think tank. You will be given a list of arguments that have been made by a cluster of participants during a public consultation. You respond with one or two paragraphs summarizing your main takeaways. You are very concise and write short, snappy sentences which are easy to read. \n \n/human\n\n[\n  \"I firmly believe that gun violence constitutes a severe public health crisis in our society.\",\n  \"We need to address this issue urgently through comprehensive gun control measures.\", \n  \"I support the implementation of universal background checks for all gun buyers\",\n  \"I am in favor of banning assault weapons and high-capacity magazines.\",\n  \"I advocate for stricter regulations to prevent illegal gun trafficking.\",\n  \"Mental health evaluations should be a mandatory part of the gun purchasing process.\"\n]\n\n/ai \n\nParticipants called for comprehensive gun control, emphasizing universal background checks, assault weapon bans, curbing illegal gun trafficking, and prioritizing mental health evaluations.",
      "model": "gpt-4"
    },
    "overview": {
      "source_code": "\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef overview(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/overview.txt\"\n\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n\n    prompt = config['overview']['prompt']\n    model = config['overview']['model']\n\n    ids = labels['cluster-id'].to_list()\n    takeaways.set_index('cluster-id', inplace=True)\n    labels.set_index('cluster-id', inplace=True)\n\n    input = ''\n    for i, id in enumerate(ids):\n        input += f\"# Cluster {i}/{len(ids)}: {labels.loc[id]['label']}\\n\\n\"\n        input += takeaways.loc[id]['takeaways'] + '\\n\\n'\n\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n\n    with open(path, 'w') as file:\n        file.write(response)\n",
      "prompt": "/system \n\nYou are an expert research assistant working in a think tank. \nYour team has run a public consultation on a given topic and has \nstarted to analyze what the different cluster of options are. \nYou will now receive the list of clusters with a brief \nanalysis of each cluster. Your job is to return a short summary of what \nthe findings were. Your summary must be very concise (at most one \nparagraph, containing at most four sentences) and you must avoid platitudes. ",
      "model": "gpt-4"
    },
    "aggregation": {
      "source_code": "\"\"\"Generate a convenient JSON output file.\"\"\"\n\nfrom tqdm import tqdm\nfrom typing import List\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nimport json\n\n\ndef aggregation(config):\n\n    path = f\"outputs/{config['output_dir']}/result.json\"\n\n    results = {\n        \"clusters\": [],\n        \"comments\": {},\n        \"translations\": {},\n        \"overview\": \"\",\n        \"config\": config,\n    }\n\n    arguments = pd.read_csv(f\"outputs/{config['output_dir']}/args.csv\")\n    arguments.set_index('arg-id', inplace=True)\n\n    comments = pd.read_csv(f\"inputs/{config['input']}.csv\")\n    useful_comment_ids = set(arguments['comment-id'].values)\n    for _, row in comments.iterrows():\n        id = row['comment-id']\n        if id in useful_comment_ids:\n            res = {'comment': row['comment-body']}\n            numeric_cols = ['agrees', 'disagrees']\n            string_cols = ['video', 'interview', 'timestamp']\n            for col in numeric_cols:\n                if col in row:\n                    res[col] = float(row[col])\n            for col in string_cols:\n                if col in row:\n                    res[col] = row[col]\n            results['comments'][str(id)] = res\n\n    languages = list(config.get('translation', {}).get('languages', []))\n    if len(languages) > 0:\n        with open(f\"outputs/{config['output_dir']}/translations.json\") as f:\n            translations = f.read()\n        results['translations'] = json.loads(translations)\n\n    clusters = pd.read_csv(f\"outputs/{config['output_dir']}/clusters.csv\")\n    labels = pd.read_csv(f\"outputs/{config['output_dir']}/labels.csv\")\n    takeaways = pd.read_csv(f\"outputs/{config['output_dir']}/takeaways.csv\")\n    takeaways.set_index('cluster-id', inplace=True)\n\n    with open(f\"outputs/{config['output_dir']}/overview.txt\") as f:\n        overview = f.read()\n    results['overview'] = overview\n\n    for _, row in labels.iterrows():\n        cid = row['cluster-id']\n        label = row['label']\n        arg_rows = clusters[clusters['cluster-id'] == cid]\n        arguments_in_cluster = []\n        for _, arg_row in arg_rows.iterrows():\n            arg_id = arg_row['arg-id']\n            argument = arguments.loc[arg_id]['argument']\n            comment_id = arguments.loc[arg_id]['comment-id']\n            x = float(arg_row['x'])\n            y = float(arg_row['y'])\n            p = float(arg_row['probability'])\n            obj = {\n                'arg_id': arg_id,\n                'argument': argument,\n                'comment_id': str(comment_id),\n                'x': x,\n                'y': y,\n                'p': p,\n            }\n            arguments_in_cluster.append(obj)\n        results['clusters'].append({\n            'cluster': label,\n            'cluster_id': str(cid),\n            'takeaways': takeaways.loc[cid]['takeaways'],\n            'arguments': arguments_in_cluster\n        })\n\n    with open(path, 'w') as file:\n        json.dump(results, file, indent=2)\n"
    },
    "visualization": {
      "replacements": [],
      "source_code": "\nimport subprocess\n\n\ndef visualization(config):\n    output_dir = config['output_dir']\n    with open(f\"outputs/{output_dir}/result.json\") as f:\n        result = f.read()\n\n    cwd = \"../next-app\"\n    command = f\"REPORT={output_dir} npm run build\"\n\n    try:\n        process = subprocess.Popen(command, shell=True, cwd=cwd, stdout=subprocess.PIPE,\n                                   stderr=subprocess.PIPE, universal_newlines=True)\n        while True:\n            output_line = process.stdout.readline()\n            if output_line == '' and process.poll() is not None:\n                break\n            if output_line:\n                print(output_line.strip())\n        process.wait()\n        errors = process.stderr.read()\n        if errors:\n            print(\"Errors:\")\n            print(errors)\n    except subprocess.CalledProcessError as e:\n        print(\"Error: \", e)\n"
    },
    "plan": [
      {
        "step": "extraction",
        "run": true,
        "reason": "not trace of previous run"
      },
      {
        "step": "embedding",
        "run": true,
        "reason": "not trace of previous run"
      },
      {
        "step": "clustering",
        "run": true,
        "reason": "not trace of previous run"
      },
      {
        "step": "labelling",
        "run": true,
        "reason": "not trace of previous run"
      },
      {
        "step": "takeaways",
        "run": true,
        "reason": "not trace of previous run"
      },
      {
        "step": "overview",
        "run": true,
        "reason": "not trace of previous run"
      },
      {
        "step": "translation",
        "run": true,
        "reason": "not trace of previous run"
      },
      {
        "step": "aggregation",
        "run": true,
        "reason": "not trace of previous run"
      },
      {
        "step": "visualization",
        "run": true,
        "reason": "not trace of previous run"
      }
    ],
    "status": "running",
    "start_time": "2024-10-23T23:43:43.267360",
    "completed_jobs": [
      {
        "step": "extraction",
        "completed": "2024-10-23T23:46:39.176985",
        "duration": 175.906955,
        "params": {
          "workers": 3,
          "limit": 120,
          "source_code": "import os\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\nimport concurrent.futures\n\n\ndef extraction(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/args.csv\"\n    comments = pd.read_csv(f\"inputs/{config['input']}.csv\")\n\n    model = config['extraction']['model']\n    prompt = config['extraction']['prompt']\n    workers = config['extraction']['workers']\n    limit = config['extraction']['limit']\n\n    comment_ids = (comments['comment-id'].values)[:limit]\n    comments.set_index('comment-id', inplace=True)\n    results = pd.DataFrame()\n    update_progress(config, total=len(comment_ids))\n    for i in tqdm(range(0, len(comment_ids), workers)):\n        batch = comment_ids[i: i + workers]\n        batch_inputs = [comments.loc[id]['comment-body'] for id in batch]\n        batch_results = extract_batch(batch_inputs, prompt, model, workers)\n        for comment_id, extracted_args in zip(batch, batch_results):\n            for j, arg in enumerate(extracted_args):\n                new_row = {\"arg-id\": f\"A{comment_id}_{j}\",\n                           \"comment-id\": int(comment_id), \"argument\": arg}\n                results = pd.concat(\n                    [results, pd.DataFrame([new_row])], ignore_index=True)\n        update_progress(config, incr=len(batch))\n    results.to_csv(path, index=False)\n\n\ndef extract_batch(batch, prompt, model, workers):\n    with concurrent.futures.ThreadPoolExecutor(max_workers=workers) as executor:\n        futures = [executor.submit(\n            extract_arguments, input, prompt, model) for input in list(batch)]\n        concurrent.futures.wait(futures)\n        return [future.result() for future in futures]\n\n\ndef extract_arguments(input, prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    try:\n        obj = json.loads(response)\n        # LLM sometimes returns valid JSON string\n        if isinstance(obj, str):\n            obj = [obj]\n        # \u4fee\u6b63\u524d\n        # items = [a.strip() for a in obj]\n\n        # \u4fee\u6b63\u5f8c\n        if isinstance(obj, dict):\n            # obj\u304c\u8f9e\u66f8\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u5024\u306b\u5bfe\u3057\u3066strip()\u3092\u9069\u7528\u3059\u308b\n            items = [str(value).strip() for value in obj.values()]\n        elif isinstance(obj, list):\n            # obj\u304c\u30ea\u30b9\u30c8\u3067\u3042\u308c\u3070\u3001\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066strip()\u3092\u9069\u7528\u3059\u308b\n            items = [str(a).strip() for a in obj]\n        else:\n            # \u305d\u306e\u4ed6\u306e\u578b\u306b\u5bfe\u3057\u3066\u306f\u9069\u5207\u306b\u5bfe\u51e6\u3059\u308b\n            items = [str(obj).strip()]\n        items = filter(None, items)  # omit empty strings\n        return items\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Input was:\", input)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying...\")\n            return extract_arguments(input, prompt, model, retries - 1)\n        else:\n            print(\"Silently giving up on trying to generate valid list.\")\n            return []\n",
          "prompt": "/system\n\nYou are a professional analyst in the energy industry.\n\nAs context, we have collected comments on Twitter about TOKYOGAS in Japan. I will now provide examples of discussions from the public, and I would like you to make them more concise and easier to read. If truly necessary, you can break them into two separate arguments, but in most cases, it is better to return them as a single argument.\n\nPlease return the result as a well-formatted JSON list of strings.",
          "model": "gpt-4"
        }
      },
      {
        "step": "embedding",
        "completed": "2024-10-23T23:46:42.129874",
        "duration": 2.951925,
        "params": {
          "source_code": "\nfrom langchain.embeddings import OpenAIEmbeddings\nimport pandas as pd\nfrom tqdm import tqdm\n\n\ndef embedding(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/embeddings.pkl\"\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    embeddings = []\n    for i in tqdm(range(0, len(arguments), 1000)):\n        args = arguments[\"argument\"].tolist()[i: i + 1000]\n        embeds = OpenAIEmbeddings().embed_documents(args)\n        embeddings.extend(embeds)\n    df = pd.DataFrame(\n        [\n            {\"arg-id\": arguments.iloc[i][\"arg-id\"], \"embedding\": e}\n            for i, e in enumerate(embeddings)\n        ]\n    )\n    df.to_pickle(path)\n"
        }
      },
      {
        "step": "clustering",
        "completed": "2024-10-23T23:47:03.212628",
        "duration": 21.081207,
        "params": {
          "clusters": 6,
          "source_code": "\"\"\"Cluster the arguments using UMAP + HDBSCAN and GPT-4.\"\"\"\n\nimport pandas as pd\nimport numpy as np\nfrom importlib import import_module\n\n\ndef clustering(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/clusters.csv\"\n    arguments_df = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    arguments_array = arguments_df[\"argument\"].values\n\n    embeddings_df = pd.read_pickle(f\"outputs/{dataset}/embeddings.pkl\")\n    embeddings_array = np.asarray(embeddings_df[\"embedding\"].values.tolist())\n    clusters = config['clustering']['clusters']\n\n    result = cluster_embeddings(\n        docs=arguments_array,\n        embeddings=embeddings_array,\n        metadatas={\n            \"arg-id\": arguments_df[\"arg-id\"].values,\n            \"comment-id\": arguments_df[\"comment-id\"].values,\n        },\n        n_topics=clusters,\n    )\n    result.to_csv(path, index=False)\n\n\ndef cluster_embeddings(\n    docs,\n    embeddings,\n    metadatas,\n    min_cluster_size=2,\n    n_components=2,\n    n_topics=6,\n):\n    # (!) we import the following modules dynamically for a reason\n    # (they are slow to load and not required for all pipelines)\n    SpectralClustering = import_module('sklearn.cluster').SpectralClustering\n    stopwords = import_module('nltk.corpus').stopwords\n    HDBSCAN = import_module('hdbscan').HDBSCAN\n    UMAP = import_module('umap').UMAP\n    CountVectorizer = import_module(\n        'sklearn.feature_extraction.text').CountVectorizer\n    BERTopic = import_module('bertopic').BERTopic\n\n    umap_model = UMAP(\n        random_state=42,\n        n_components=n_components,\n    )\n    hdbscan_model = HDBSCAN(min_cluster_size=min_cluster_size)\n\n    stop = stopwords.words(\"english\")\n    vectorizer_model = CountVectorizer(stop_words=stop)\n    topic_model = BERTopic(\n        umap_model=umap_model,\n        hdbscan_model=hdbscan_model,\n        vectorizer_model=vectorizer_model,\n        verbose=True,\n    )\n\n    # Fit the topic model.\n    _, __ = topic_model.fit_transform(docs, embeddings=embeddings)\n\n    n_samples = len(embeddings)\n    n_neighbors = min(n_samples - 1, 10)\n    spectral_model = SpectralClustering(\n        n_clusters=n_topics,\n        affinity=\"nearest_neighbors\",\n        n_neighbors=n_neighbors,  # Use the modified n_neighbors\n        random_state=42\n    )\n    umap_embeds = umap_model.fit_transform(embeddings)\n    cluster_labels = spectral_model.fit_predict(umap_embeds)\n\n    result = topic_model.get_document_info(\n        docs=docs,\n        metadata={\n            **metadatas,\n            \"x\": umap_embeds[:, 0],\n            \"y\": umap_embeds[:, 1],\n        },\n    )\n\n    result.columns = [c.lower() for c in result.columns]\n    result = result[['arg-id', 'x', 'y', 'probability']]\n    result['cluster-id'] = cluster_labels\n\n    return result\n"
        }
      },
      {
        "step": "labelling",
        "completed": "2024-10-23T23:47:44.580575",
        "duration": 41.366027,
        "params": {
          "sample_size": 30,
          "source_code": "\"\"\"Create labels for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef labelling(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/labels.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['labelling']['sample_size']\n    prompt = config['labelling']['prompt']\n    model = config['labelling']['model']\n\n    question = config['question']\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n\n        args_ids_outside = clusters[clusters['cluster-id']\n                                    != cluster_id]['arg-id'].values\n        args_ids_outside = np.random.choice(args_ids_outside, size=min(\n            len(args_ids_outside), sample_size), replace=False)\n        args_sample_outside = arguments[arguments['arg-id']\n                                        .isin(args_ids_outside)]['argument'].values\n\n        label = generate_label(question, args_sample,\n                               args_sample_outside, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'label': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_label(question, args_sample, args_sample_outside, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    outside = '\\n * ' + '\\n * '.join(args_sample_outside)\n    inside = '\\n * ' + '\\n * '.join(args_sample)\n    input = f\"Question of the consultation:{question}\\n\\n\" + \\\n        f\"Examples of arguments OUTSIDE the cluster:\\n {outside}\" + \\\n        f\"Examples of arguments INSIDE the cluster:\\n {inside}\"\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n",
          "prompt": "/system \n\nYou are a category labeling assistant that generates a category label \nfor a set of arguments within a broader consultation. You are given the main question \nof the consultation, list of arguments inside the cluster, and a list of arguments \noutside this cluster. You answer with a single category label that summarizes the \ncluster. \n\nYou do not include context that is already obvious from the question (for example: \nif the question of the consultation is something like \"what challenges are you facing \nin France\", there is no need to repeat \"in France\" in the cluster label).\n\nThe label must be very concise and just precise enough to capture what distinguishes \nthe cluster from the arguments found outside. \n",
          "model": "gpt-4"
        }
      },
      {
        "step": "takeaways",
        "completed": "2024-10-23T23:48:35.299830",
        "duration": 50.716817,
        "params": {
          "sample_size": 30,
          "source_code": "\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef takeaways(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/takeaways.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['takeaways']['sample_size']\n    prompt = config['takeaways']['prompt']\n    model = config['takeaways']['model']\n\n    model = config.get('model_takeaways', config.get('model', 'gpt3.5-turbo'))\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n        label = generate_takeaways(args_sample, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'takeaways': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_takeaways(args_sample, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = \"\\n\".join(args_sample)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n",
          "prompt": "/system \n\nYou are an expert research assistant working in a think tank. You will be given a list of arguments that have been made by a cluster of participants during a public consultation. You respond with one or two paragraphs summarizing your main takeaways. You are very concise and write short, snappy sentences which are easy to read. \n \n/human\n\n[\n  \"I firmly believe that gun violence constitutes a severe public health crisis in our society.\",\n  \"We need to address this issue urgently through comprehensive gun control measures.\", \n  \"I support the implementation of universal background checks for all gun buyers\",\n  \"I am in favor of banning assault weapons and high-capacity magazines.\",\n  \"I advocate for stricter regulations to prevent illegal gun trafficking.\",\n  \"Mental health evaluations should be a mandatory part of the gun purchasing process.\"\n]\n\n/ai \n\nParticipants called for comprehensive gun control, emphasizing universal background checks, assault weapon bans, curbing illegal gun trafficking, and prioritizing mental health evaluations.",
          "model": "gpt-4"
        }
      },
      {
        "step": "overview",
        "completed": "2024-10-23T23:48:44.259098",
        "duration": 8.957281,
        "params": {
          "source_code": "\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef overview(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/overview.txt\"\n\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n\n    prompt = config['overview']['prompt']\n    model = config['overview']['model']\n\n    ids = labels['cluster-id'].to_list()\n    takeaways.set_index('cluster-id', inplace=True)\n    labels.set_index('cluster-id', inplace=True)\n\n    input = ''\n    for i, id in enumerate(ids):\n        input += f\"# Cluster {i}/{len(ids)}: {labels.loc[id]['label']}\\n\\n\"\n        input += takeaways.loc[id]['takeaways'] + '\\n\\n'\n\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n\n    with open(path, 'w') as file:\n        file.write(response)\n",
          "prompt": "/system \n\nYou are an expert research assistant working in a think tank. \nYour team has run a public consultation on a given topic and has \nstarted to analyze what the different cluster of options are. \nYou will now receive the list of clusters with a brief \nanalysis of each cluster. Your job is to return a short summary of what \nthe findings were. Your summary must be very concise (at most one \nparagraph, containing at most four sentences) and you must avoid platitudes. ",
          "model": "gpt-4"
        }
      },
      {
        "step": "translation",
        "completed": "2024-10-24T00:00:50.493022",
        "duration": 726.231785,
        "params": {
          "model": "gpt-4",
          "languages": [
            "Japanese"
          ],
          "flags": [
            "JP"
          ],
          "source_code": "\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages\nfrom langchain.schema import AIMessage\nimport pandas as pd\nimport json\nfrom tqdm import tqdm\n\n\ndef translation(config):\n\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/translations.json\"\n    results = {}\n\n    languages = list(config.get('translation', {}).get('languages', []))\n    if len(languages) == 0:\n        print(\"No languages specified. Skipping translation step.\")\n        # creating an empty file any, to reduce special casing later\n        with open(path, 'w') as file:\n            json.dump(results, file, indent=2)\n        return\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    with open(f\"outputs/{dataset}/overview.txt\") as f:\n        overview = f.read()\n\n    UI_copy = [\"Argument\", \"Original comment\", \"Representative arguments\",\n               \"Open full-screen map\", \"Back to report\", \"Hide labels\", \"Show labels\",\n               \"Show filters\", \"Hide filters\", \"Min. votes\", \"Consensus\",\n               \"Showing\", \"arguments\", \"Reset zoom\", \"Click anywhere on the map to close this\",\n               \"Click on the dot for details\",\n               \"agree\", \"disagree\", \"Language\", \"English\", \"arguments\", \"of total\",\n               \"Overview\", \"Cluster analysis\", \"Representative comments\", \"Introduction\",\n               \"Clusters\", \"Appendix\", \"This report was generated using an AI pipeline that consists of the following steps\",\n               \"Step\", \"extraction\", \"show code\", \"hide code\", \"show prompt\", \"hide prompt\", \"embedding\",\n               \"clustering\", \"labelling\", \"takeaways\", \"overview\"]\n\n    arg_list = arguments['argument'].to_list() + \\\n        labels['label'].to_list() + \\\n        UI_copy + \\\n        languages\n\n    if 'name' in config:\n        arg_list.append(config['name'])\n    if 'question' in config:\n        arg_list.append(config['question'])\n\n    prompt_file = config.get('translation_prompt', 'default')\n    with open(f\"prompts/translation/{prompt_file}.txt\") as f:\n        prompt = f.read()\n    model = config['model']\n\n    config['translation_prompt'] = prompt\n\n    translations = [translate_lang(\n        arg_list, 10, prompt, lang, model) for lang in languages]\n\n    # handling long takeaways differently, WITHOUT batching too much\n    long_arg_list = takeaways['takeaways'].to_list()\n    long_arg_list.append(overview)\n    if 'intro' in config:\n        long_arg_list.append(config['intro'])\n\n    long_translations = [translate_lang(\n        long_arg_list, 1, prompt, lang, model) for lang in languages]\n\n    for i, id in enumerate(arg_list):\n        print('i, id', i, id)\n        results[str(id)] = list([t[i] for t in translations])\n    for i, id in enumerate(long_arg_list):\n        results[str(id)] = list([t[i] for t in long_translations])\n\n    with open(path, 'w') as file:\n        json.dump(results, file, indent=2)\n\n\ndef translate_lang(arg_list, batch_size, prompt, lang, model):\n    translations = []\n    lang_prompt = prompt.replace(\"{language}\", lang)\n    print(f\"Translating to {lang}...\")\n    for i in tqdm(range(0, len(arg_list), batch_size)):\n        batch = arg_list[i: i + batch_size]\n        translations.extend(translate_batch(batch, lang_prompt, model))\n    return translations\n\n\ndef translate_batch(batch, lang_prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = json.dumps(list(batch))\n    response = llm(messages=messages(lang_prompt, input)).content.strip()\n    if \"```\" in response:\n        response = response.split(\"```\")[1]\n    if response.startswith(\"json\"):\n        response = response[4:]\n    try:\n        parsed = [a.strip() for a in json.loads(response)]\n        if len(parsed) != len(batch):\n            print(\"Warning: batch size mismatch!\")\n            print(\"Batch len:\", len(batch))\n            print(\"Response len:\", len(parsed))\n            for i, item in enumerate(batch):\n                print(f\"Batch item {i}:\", item)\n                if (i < len(parsed)):\n                    print(\"Response:\", parsed[i])\n            if (len(batch) > 1):\n                print(\"Retrying with smaller batches...\")\n                mid = len(batch) // 2\n                return translate_batch(batch[:mid], lang_prompt, model, retries - 1) + \\\n                    translate_batch(\n                        batch[mid:], lang_prompt, model, retries - 1)\n            else:\n                print(\"Retrying batch...\")\n                return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            return parsed\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying batch...\")\n            return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            raise e\n",
          "prompt": "/system \n\nYou are a professional translator.\nYou will receive a list of words and sentences written in English. \nPlease return the same list, in the same order, but translated to {language}.\nMake sure to return a valid JSON list of string of the same length as the original list."
        }
      }
    ],
    "lock_until": "2024-10-24T00:05:50.494989",
    "current_job": "aggregation",
    "current_job_started": "2024-10-24T00:00:50.494975",
    "translation_prompt": "/system \n\nYou are a professional translator.\nYou will receive a list of words and sentences written in English. \nPlease return the same list, in the same order, but translated to {language}.\nMake sure to return a valid JSON list of string of the same length as the original list."
  }
}